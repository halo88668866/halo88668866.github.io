<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>架构-软件工程2-设计模式</title>
    <link href="/2025/08/07/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B2-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <url>/2025/08/07/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B2-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h1><p><a href="https://refactoringguru.cn/design-patterns/catalog">设计模式目录：22种设计模式</a><br><a href="https://www.bilibili.com/video/BV1mc411h719?spm_id_from=333.788.player.switch&vd_source=bbf7b29e72c0e9767fcb7d2bcf904c64&p=7">8、适配器模式_哔哩哔哩_bilibili</a></p><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>设计模式（Design Pattern）是前辈们对代码开发经验的总结，是解决特定问题的一系列套路。它不是语法规定，而是一套用来提高代码可复用性、可维护性、可读性、稳健性以及安全性的解决方案。<br>1995 年，GoF（Gang of Four，四人组&#x2F;四人帮）合作出版了《设计模式：可复用面向对象软件的基础》一书，共收录了 23 种设计模式，从此树立了软件设计模式领域的里程碑，人称【GoF设计模式】。</p><h1 id="七大原则"><a href="#七大原则" class="headerlink" title="七大原则"></a>七大原则</h1><p><strong>总原则——开闭原则Open Closed Principle）</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">一个软件实体，如类、模块和函数应该对<span class="hljs-strong">**扩展开放，对修改关闭**</span>。<br></code></pre></td></tr></table></figure><p>在程序需要进行拓展的时候，不能去修改原有的代码，而是要扩展原有代码，实现一个热插拔的效果。所以一句话概括就是：为了使程序的扩展性好，易于维护和升级。</p><p>想要达到这样的效果，我们需要使用接口和抽象类等。</p><p><strong>1、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E5%8D%95%E4%B8%80%E8%81%8C%E8%B4%A3%E5%8E%9F%E5%88%99&zhida_source=entity">单一职责原则</a>（Single Responsibility Principle）</strong></p><blockquote><p>一个类应该只有一个发生变化的原因。</p></blockquote><p>不要存在多于一个导致类变更的原因，也就是说每个类应该实现单一的职责，否则就应该把类拆分。</p><p><strong>2、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99&zhida_source=entity">里氏替换原则</a>（Liskov Substitution Principle）</strong></p><blockquote><p>所有引用基类的地方必须能透明地使用其子类的对象。</p></blockquote><p>任何基类可以出现的地方，子类一定可以出现。里氏替换原则是继承复用的基石，只有当衍生类可以替换基类，软件单位的功能不受到影响时，基类才能真正被复用，而衍生类也能够在基类的基础上增加新的行为。</p><p>里氏代换原则是对“开-闭”原则的补充。实现“开闭”原则的关键步骤就是抽象化。而基类与子类的继承关系就是抽象化的具体实现，所以里氏替换原则是对实现抽象化的具体步骤的规范。里氏替换原则中，<strong>子类对父类的方法尽量不要重写和重载</strong>。因为父类代表了定义好的结构，通过这个规范的接口与外界交互，子类不应该随便破坏它。</p><p><strong>3、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E4%BE%9D%E8%B5%96%E5%80%92%E7%BD%AE%E5%8E%9F%E5%88%99&zhida_source=entity">依赖倒置原则</a>（Dependence Inversion Principle）</strong></p><blockquote><p>1、上层模块不应该依赖底层模块，它们都应该依赖于抽象。<br>2、抽象不应该依赖于细节，细节应该依赖于抽象。</p></blockquote><p>面向接口编程，依赖于抽象而不依赖于具体。写代码时用到具体类时，不与具体类交互，而与具体类的上层接口交互。</p><p><strong>4、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E6%8E%A5%E5%8F%A3%E9%9A%94%E7%A6%BB%E5%8E%9F%E5%88%99&zhida_source=entity">接口隔离原则</a>（Interface Segregation Principle）</strong></p><blockquote><p>1、客户端不应该依赖它不需要的接口。<br>2、类间的依赖关系应该建立在最小的接口上。</p></blockquote><p>每个接口中不存在子类用不到却必须实现的方法，如果不然，就要将接口拆分。使用多个隔离的接口，比使用单个接口（多个接口方法集合到一个的接口）要好。</p><p><strong>5、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E8%BF%AA%E7%B1%B3%E7%89%B9%E6%B3%95%E5%88%99&zhida_source=entity">迪米特法则</a>（最少知道原则）(Law of Demeter)</strong></p><blockquote><p>只与你的直接朋友交谈，不跟“陌生人”说话。</p></blockquote><p>一个类对自己依赖的类知道的越少越好。无论被依赖的类多么复杂，都应该将逻辑封装在方法的内部，通过public方法提供给外部。这样当被依赖的类变化时，才能最小的影响该类。</p><p>最少知道原则的另一个表达方式是：只与直接的朋友通信。类之间只要有耦合关系，就叫朋友关系。耦合分为依赖、关联、聚合、组合等。我们称出现为成员变量、方法参数、方法返回值中的类为直接朋友。局部变量、临时变量则不是直接的朋友。我们要求陌生的类不要作为局部变量出现在类中。</p><p><strong>6、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E5%90%88%E6%88%90%E5%A4%8D%E7%94%A8%E5%8E%9F%E5%88%99&zhida_source=entity">合成复用原则</a>（Composite Reuse Principle）</strong></p><blockquote><p>尽量使用对象组合&#x2F;聚合，而不是继承关系达到软件复用的目的。</p></blockquote><p>合成或聚合可以将已有对象纳入到新对象中，使之成为新对象的一部分，因此新对象可以调用已有对象的功能。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">记忆口诀：SOLID CD（稳固的CD）。<br></code></pre></td></tr></table></figure><h2 id="三、设计模式的三大类"><a href="#三、设计模式的三大类" class="headerlink" title="三、设计模式的三大类"></a>三、设计模式的三大类</h2><p><strong>创建型模式（Creational Pattern）：<strong>对类的实例化过程进行了抽象，能够将软件模块中</strong>对象的创建</strong>和对象的使用分离。</p><p>（5种）<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F&zhida_source=entity">工厂模式</a>、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F&zhida_source=entity">抽象工厂模式</a>、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F&zhida_source=entity">单例模式</a>、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F&zhida_source=entity">建造者模式</a>、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F&zhida_source=entity">原型模式</a></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">记忆口诀：创工原单建抽（创公园，但见愁）<br></code></pre></td></tr></table></figure><p><strong>结构型模式（Structural Pattern）</strong>：关注于对象的组成以及对象之间的依赖关系，描述如何将类或者对象结合在一起形成更大的结构，就像<strong>搭积木</strong>，可以通过简单积木的组合形成复杂的、功能更为强大的结构。</p><p>（7种）<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F&zhida_source=entity">适配器模式</a>、装饰者模式、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F&zhida_source=entity">代理模式</a>、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F&zhida_source=entity">外观模式</a>、桥接模式、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F&zhida_source=entity">组合模式</a>、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F&zhida_source=entity">享元模式</a></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">记忆口诀：结享外组适代装桥（姐想外租，世代装桥）<br></code></pre></td></tr></table></figure><p><strong>行为型模式（Behavioral Pattern）</strong>：关注于对象的行为问题，是对在不同的对象之间划分责任和算法的抽象化；不仅仅关注类和对象的结构，而且重点关注它们之间的<strong>相互作用</strong>。</p><p>（11种）<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F&zhida_source=entity">策略模式</a>、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F&zhida_source=entity">模板方法模式</a>、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F&zhida_source=entity">观察者模式</a>、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F&zhida_source=entity">迭代器模式</a>、责任链模式、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F&zhida_source=entity">命令模式</a>、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F&zhida_source=entity">备忘录模式</a>、<a href="https://zhida.zhihu.com/search?content_id=116607641&content_type=Article&match_order=1&q=%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F&zhida_source=entity">状态模式</a>、访问者模式、中介者模式、解释器模式</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">记忆口诀：行状责中模访解备观策命迭（形状折中模仿，戒备观测鸣笛）<br></code></pre></td></tr></table></figure><h2 id="四、23种设计模式"><a href="#四、23种设计模式" class="headerlink" title="四、23种设计模式"></a>四、23种设计模式</h2><h2 id="———————创建型模式———————"><a href="#———————创建型模式———————" class="headerlink" title="———————创建型模式———————"></a>———————创建型模式———————</h2><h2 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h2><p>工厂模式（Factory Pattern）是Java中最常用的设计模式之一。</p><p>在工厂模式中，我们在创建对象时不会对客户端暴露创建逻辑，并且是通过使用一个共同的接口来指向新创建的对象。</p><p>定义一个创建对象的接口，让其子类自己决定实例化哪一个工厂类，工厂模式使其创建过程延迟到子类进行。</p><blockquote><p>应用实例：您需要一辆汽车，可以直接从工厂里面提货，而不用去管这辆汽车是怎么做出来的，以及这个汽车里面的具体实现。而至于需要哪个牌子的汽车，就到哪个牌子的工厂。</p></blockquote><h2 id="抽象工厂模式"><a href="#抽象工厂模式" class="headerlink" title="抽象工厂模式"></a>抽象工厂模式</h2><p>抽象工厂模式（Abstract Factory Pattern）是围绕一个超级工厂创建其他工厂。该超级工厂又称为其他工厂的工厂。</p><p>在抽象工厂模式中，接口是负责创建一个相关对象的工厂，不需要显式指定它们的类。每个生成的工厂都能按照工厂模式提供对象。</p><p>提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。</p><blockquote><p>应用实例：对于一个家庭来说，可能有商务女装、商务男装、时尚女装、时尚男装，都是成套的，即一系列具体产品。假设一种情况，在您的家中，某一个衣柜（具体工厂）只能存放某一种这样的衣服（成套，一系列具体产品），每次拿这种成套的衣服时也自然要从这个衣柜中取出了。用 OO 的思想去理解，所有的衣柜（具体工厂）都是衣柜类的（抽象工厂）某一个，而每一件成套的衣服又包括具体的上衣（某一具体产品），裤子（某一具体产品），这些具体的上衣其实也都是上衣（抽象产品），具体的裤子也都是裤子（另一个抽象产品）。</p></blockquote><h2 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h2><p>单例模式（Singleton Pattern）是Java中最简单的设计模式之一。</p><p>这种模式涉及到一个单一的类，该类负责创建自己的对象，同时确保只有单个对象被创建。这个类提供了一种访问其唯一的对象的方式，可以直接访问，不需要实例化该类的对象。</p><p>保证一个类仅有一个实例，并提供一个访问它的全局访问点。</p><blockquote><p>应用实例：一个班级只能有一个班主任。</p></blockquote><h2 id="建造者模式（构建者模式）"><a href="#建造者模式（构建者模式）" class="headerlink" title="建造者模式（构建者模式）"></a>建造者模式（构建者模式）</h2><p>建造者模式（Builder Pattern）使用多个简单的对象一步一步构建成一个复杂的对象。</p><p>一个Builder类会一步一步构造最终的对象。该Builder类是独立于其他对象的。</p><p>将一个复杂的构建与其表示相分离，使得同样的构建过程可以创建不同的表示。</p><blockquote><p>应用实例：<br>1、去肯德基，汉堡、可乐、薯条、炸鸡翅等是不变的，而其组合是经常变化的，生成出所谓的“套餐”；<br>2、Java 中的 StringBuilder。</p></blockquote><h2 id="原型模式"><a href="#原型模式" class="headerlink" title="原型模式"></a>原型模式</h2><p>原型模式（Prototype Pattern）是用于创建重复的对象，同时又能保证性能。</p><p>这种模式是实现了一个原型接口，该接口用于创建当前对象的克隆。当直接创建对象的代价比较大时，则采用这种模式。例如，一个对象需要在一个高代价的数据库操作之后被创建。我们可以缓存该对象，在下一个请求时返回它的克隆，在需要的时候更新数据库，以此来减少数据库调用。</p><p>用原型实例指定创建对象的种类，并且通过拷贝这些原型创建新的对象。</p><blockquote><p>应用实例：<br>1、细胞分裂；<br>2、Java中的 Object clone() 方法。</p></blockquote><h2 id="———————结构型模式———————"><a href="#———————结构型模式———————" class="headerlink" title="———————结构型模式———————"></a>———————结构型模式———————</h2><h2 id="适配器模式"><a href="#适配器模式" class="headerlink" title="适配器模式"></a>适配器模式</h2><p>适配器模式（Adapter Pattern）是作为两个不兼容的接口之间的桥梁。</p><p>这种模式涉及到一个单一的类，该类负责加入独立的或不兼容的接口功能。</p><p>将一个类的接口转换成客户希望的另外一个接口。适配器模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。</p><blockquote><p>应用实例：<br>1、读卡器是作为内存卡和笔记本之间的适配器。您将内存卡插入读卡器，再将读卡器插入笔记本，这样就可以通过笔记本来读取内存卡；<br>2、美国电器110V，中国220V，就要有一个变压器将110V转化为220V。</p></blockquote><h2 id="装饰器模式"><a href="#装饰器模式" class="headerlink" title="装饰器模式"></a>装饰器模式</h2><p>装饰器模式（Decorator Pattern）允许向一个现有的对象添加新的功能，同时又不改变其结构。</p><p>这种模式创建了一个装饰类，用来包装原有的类，并在保持类方法签名完整性的前提下，提供了额外的功能。</p><p>动态地给一个对象添加一些额外的职责。就增加功能来说，装饰器模式相比生成子类更为灵活。</p><blockquote><p>应用实例：<br>1、孙悟空有72变，当他变成”庙宇”后，他的根本还是一只猴子，但是他又有了庙宇的功能；<br>2、将一个形状装饰上不同的颜色，同时又不改变形状。</p></blockquote><h2 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h2><p>在代理模式（Proxy Pattern）中，一个类代表另一个类的功能。</p><p>在代理模式中，我们创建具有现有对象的对象，以便向外界提供功能接口。</p><p>为其他对象提供一种代理以控制对这个对象的访问。</p><blockquote><p>应用实例：<br>1、Windows里面的快捷方式；<br>2、买火车票不一定在火车站买，也可以去代售点；<br>3、一张支票或银行存单是账户中资金的代理。支票在市场交易中用来代替现金，并提供对签发人账号上资金的控制；<br>4、Spring AOP。</p></blockquote><p>注意事项：</p><p>1、和适配器模式的区别：适配器模式主要改变所考虑对象的接口，而代理模式不能改变所代理类的接口。</p><p>2、和装饰器模式的区别：装饰器模式为了增强功能，而代理模式是为了加以控制。</p><h2 id="外观模式"><a href="#外观模式" class="headerlink" title="外观模式"></a>外观模式</h2><p>外观模式（Facade Pattern）隐藏系统的复杂性，并向客户端提供了一个客户端可以访问系统的接口。</p><p>这种模式涉及到一个单一的类，该类提供了客户端请求的简化方法和对现有系统类方法的委托调用。</p><p>为子系统中的一组接口提供一个一致的界面，外观模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。</p><blockquote><p>应用实例：<br>去医院看病，可能要去挂号、门诊、划价、取药，让患者或患者家属觉得很复杂，如果有提供接待人员，只让接待人员来处理，就很方便。</p></blockquote><h2 id="桥接模式"><a href="#桥接模式" class="headerlink" title="桥接模式"></a>桥接模式</h2><p>桥接模式（Bridge Pattern）是用于把抽象化与实现化解耦，使得二者可以独立变化。它通过提供抽象化和实现化之间的桥接结构，来实现二者的解耦。</p><p>这种模式涉及到一个作为桥接的接口，使得实体类的功能独立于接口实现类。这两种类型的类可被结构化改变而互不影响。</p><p>将抽象部分与实现部分分离，使它们都可以独立的变化。</p><p>又称为柄体（Handle and Body）模式或接口（Interface）模式。</p><blockquote><p>应用实例：<br>1、猪八戒从天蓬元帅转世投胎到猪，转世投胎的机制将尘世划分为两个等级，即：灵魂和肉体，前者相当于抽象化，后者相当于实现化。生灵通过功能的委派，调用肉体对象的功能，使得生灵可以动态地选择；<br>2、墙上的开关，可以看到的开关是抽象的，不用管里面具体怎么实现的；<br>3、如果要绘制不同的颜色，如红色、绿色、蓝色的矩形、圆形、椭圆、正方形，我们需要根据实际需要对形状和颜色进行组合，那么颜色、形状就是抽象部分，组合后的就是实现部分。</p></blockquote><p>注意事项：对于两个独立变化的维度，使用桥接模式再适合不过了。</p><h2 id="组合模式"><a href="#组合模式" class="headerlink" title="组合模式"></a>组合模式</h2><p>组合模式（Composite Pattern），又叫部分整体模式，是用于把一组相似的对象当作一个单一的对象。组合模式依据树形结构来组合对象，用来表示部分以及整体层次。这种类型的设计模式属于结构型模式，它创建了<strong>对象组的树形结构</strong>。</p><p>这种模式创建了一个包含自己对象组的类。该类提供了修改相同对象组的方式。</p><p>将对象组合成树形结构以表示”部分-整体”的层次结构。组合模式使得用户对单个对象和组合对象的使用具有一致性。</p><blockquote><p>应用实例：<br>1、算术表达式包括操作数、操作符和另一个操作数，其中，另一个操作数也可以是操作数、操作符和另一个操作数。<br>2、在JAVAAWT和SWING中，对于Button和Checkbox是树叶，Container是树枝。</p></blockquote><h2 id="享元模式"><a href="#享元模式" class="headerlink" title="享元模式"></a>享元模式</h2><p>享元模式（Flyweight Pattern）主要用于减少创建对象的数量，以减少内存占用和提高性能。这种类型的设计模式属于结构型模式，它提供了减少对象数量从而改善应用所需的对象结构的方式。</p><p>享元模式尝试重用现有的同类对象，如果未找到匹配的对象，则创建新对象。</p><p>运用共享技术有效地支持大量细粒度的对象。</p><blockquote><p>应用实例：<br>1、Java中的String，如果有则返回，如果没有则创建一个字符串保存在字符串缓存池里面；<br>2、数据库的数据池。</p></blockquote><h2 id="———————行为型模式———————"><a href="#———————行为型模式———————" class="headerlink" title="———————行为型模式———————"></a>———————行为型模式———————</h2><h2 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h2><p>在策略模式（Strategy Pattern）中，一个类的行为或其算法可以在运行时更改。</p><p>在策略模式中，我们创建表示各种策略的对象和一个行为随着策略对象改变而改变的context对象。策略对象改变context对象的执行算法。</p><p>定义一系列的算法，把它们一个个封装起来，并且使它们可相互替换。</p><blockquote><p>应用实例：<br>1、诸葛亮的锦囊妙计，每一个锦囊就是一个策略；<br>2、旅行的出游方式，选择骑自行车、坐汽车，每一种旅行方式都是一个策略。</p></blockquote><h2 id="模板模式"><a href="#模板模式" class="headerlink" title="模板模式"></a>模板模式</h2><p>在模板模式（Template Pattern）中，一个抽象类公开定义了执行它的方法的方式&#x2F;模板。它的子类可以按需要重写方法实现，但调用将以抽象类中定义的方式进行。</p><p>定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。</p><blockquote><p>应用实例：<br>1、在造房子的时候，地基、走线、水管都一样，只有在建筑的后期才有加壁橱加栅栏等差异；<br>2、西游记里面菩萨定好的81难，这就是一个顶层的逻辑骨架；<br>3、spring中对Hibernate的支持，将一些已经定好的方法封装起来，比如开启事务、获取Session、关闭Session等，程序员不重复写那些已经规范好的代码，直接丢一个实体就可以保存。</p></blockquote><h2 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h2><p>当对象间存在一对多关系时，则使用观察者模式（ObserverPattern）。比如，当一个对象被修改时，则会自动通知它的依赖对象。</p><p>定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。</p><blockquote><p>应用实例：<br>1、拍卖的时候，拍卖师观察最高标价，然后通知给其他竞价者竞价；<br>2、西游记里面悟空请求菩萨降服红孩儿，菩萨洒了一地水招来一个老乌龟，这个乌龟就是观察者，他观察菩萨洒水这个动作。</p></blockquote><h2 id="迭代器模式"><a href="#迭代器模式" class="headerlink" title="迭代器模式"></a>迭代器模式</h2><p>迭代器模式（Iterator Pattern）是Java和.Net编程环境中非常常用的设计模式。这种模式用于顺序访问集合对象的元素，不需要知道集合对象的底层表示。</p><p>迭代器模式属于行为型模式。</p><p>提供一种方法顺序访问一个聚合对象中各个元素，而又无须暴露该对象的内部表示。</p><blockquote><p>应用实例：JAVA中的iterator。</p></blockquote><h2 id="责任链模式"><a href="#责任链模式" class="headerlink" title="责任链模式"></a>责任链模式</h2><p>顾名思义，责任链模式（Chain of Responsibility Pattern）为请求创建了一个接收者对象的链。这种模式给予请求的类型，对请求的发送者和接收者进行解耦。</p><p>在这种模式中，通常每个接收者都包含对另一个接收者的引用。如果一个对象不能处理该请求，那么它会把相同的请求传给下一个接收者，依此类推。</p><p>避免请求发送者与接收者耦合在一起，让多个对象都有可能接收请求，将这些对象连接成一条链，并且沿着这条链传递请求，直到有对象处理它为止。</p><blockquote><p>应用实例：红楼梦中的”击鼓传花”。</p></blockquote><h2 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h2><p>命令模式（Command Pattern）是一种数据驱动的设计模式。请求以命令的形式包裹在对象中，并传给调用对象。调用对象寻找可以处理该命令的合适的对象，并把该命令传给相应的对象，该对象执行命令。</p><p>将一个请求封装成一个对象，从而使您可以用不同的请求对客户进行参数化。</p><blockquote><p>应用实例：电视机是请求的接收者，遥控器是请求的发送者，遥控器上有一些按钮，不同的按钮对应电视机的不同操作。抽象命令角色由一个命令接口来扮演，有三个具体的命令类实现了抽象命令接口，这三个具体命令类分别代表三种操作：打开电视机、关闭电视机和切换频道。</p></blockquote><h2 id="备忘录模式"><a href="#备忘录模式" class="headerlink" title="备忘录模式"></a>备忘录模式</h2><p>备忘录模式（Memento Pattern）保存一个对象的某个状态，以便在适当的时候恢复对象。</p><p>在不破坏封装性的前提下，捕获一个对象的内部状态，并在该对象之外保存这个状态。</p><blockquote><p>应用实例：<br>1、后悔药；<br>2、打游戏时的存档；<br>3、Windows里的ctri+z；<br>4、IE中的后退；<br>5、数据库的事务管理。</p></blockquote><h2 id="状态模式"><a href="#状态模式" class="headerlink" title="状态模式"></a>状态模式</h2><p>在状态模式（State Pattern）中，类的行为是基于它的状态改变的。</p><p>在状态模式中，我们创建表示各种状态的对象和一个行为随着状态对象改变而改变的context对象。</p><p>允许对象在内部状态发生改变时改变它的行为，对象看起来好像修改了它的类。</p><blockquote><p>应用实例：<br>1、打篮球的时候运动员可以有正常状态、不正常状态和超常状态；<br>2、曾侯乙编钟中，’钟是抽象接口’，’钟A’等是具体状态，’曾侯乙编钟’是具体环境（Context）。</p></blockquote><h2 id="访问者模式"><a href="#访问者模式" class="headerlink" title="访问者模式"></a>访问者模式</h2><p>在访问者模式（Visitor Pattern）中，我们使用了一个访问者类，它改变了元素类的执行算法。通过这种方式，元素的执行算法可以随着访问者改变而改变。根据模式，元素对象已接受访问者对象，这样访问者对象就可以处理元素对象上的操作。</p><p>主要将数据结构与数据操作分离。</p><p>主要解决：稳定的数据结构和易变的操作耦合问题。</p><blockquote><p>应用实例：您在朋友家做客，您是访问者，朋友接受您的访问，您通过朋友的描述，然后对朋友的描述做出一个判断，这就是访问者模式。</p></blockquote><h2 id="中介者模式"><a href="#中介者模式" class="headerlink" title="中介者模式"></a>中介者模式</h2><p>中介者模式（Mediator Pattern）是用来降低多个对象和类之间的通信复杂性。这种模式提供了一个中介类，该类通常处理不同类之间的通信，并支持松耦合，使代码易于维护。</p><p>用一个中介对象来封装一系列的对象交互，中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们之间的交互。</p><blockquote><p>应用实例：<br>1、中国加入WTO之前是各个国家相互贸易，结构复杂，现在是各个国家通过WTO来互相贸易；<br>2、机场调度系统；<br>3、MVC框架，其中C（控制器）就是M（模型）和V（视图）的中介者。</p></blockquote><h2 id="解释器模式"><a href="#解释器模式" class="headerlink" title="解释器模式"></a>解释器模式</h2><p>解释器模式（Interpreter Pattern）提供了评估语言的语法或表达式的方式。这种模式实现了一个表达式接口，该接口解释一个特定的上下文。这种模式被用在SQL解析、符号处理引擎等。</p><p>给定一个语言，定义它的文法表示，并定义一个解释器，这个解释器使用该标识来解释语言中的句子。</p><blockquote><p>应用实例：编译器、运算表达式计算。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-软件工程4-设计</title>
    <link href="/2025/08/06/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B4-%E8%AE%BE%E8%AE%A1/"/>
    <url>/2025/08/06/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B4-%E8%AE%BE%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>系统设计主要目的：为系统制定蓝图，在各种技术和实施方法中权衡利弊精心设计，合理地使用各种资源，<strong>最终勾画出新系统的详细设计方法</strong>。</p><h1 id="人机界面设计"><a href="#人机界面设计" class="headerlink" title="人机界面设计"></a>人机界面设计</h1><p><strong>人机界面设计三大黄金原则</strong>：</p><h4 id="置于用户控制之下"><a href="#置于用户控制之下" class="headerlink" title="置于用户控制之下"></a>置于用户控制之下</h4><ul><li>以不强迫用户进入不必要的或不希望的动作的方式来定义交互方式</li><li>提供灵活的交互</li><li>允许用户交互可以被中断和撒销</li><li>当技能级别增加时可以使交互流水化并允许定制交互</li><li>使用户隔离内部技术细节</li><li>设计应允许用户和出现在屏幕上的对象直接交互</li></ul><h4 id="减少用户的记忆负担"><a href="#减少用户的记忆负担" class="headerlink" title="减少用户的记忆负担"></a>减少用户的记忆负担</h4><ul><li>减少对短期记忆的要求</li><li>建立有意义的缺省</li><li>定义直觉性的捷径</li><li>界面的视觉布局应该基于真实世界的隐喻</li><li>以不断进展的方式揭示信息</li></ul><h3 id="保持界面的一致性"><a href="#保持界面的一致性" class="headerlink" title="保持界面的一致性"></a>保持界面的一致性</h3><ul><li>允许用户将当前任务放入有意义的语境</li><li>在应用系列内保持一致性</li><li>如过去的交互模型已建立起了用户期望，除非有迫不得已的理由，不要改变它<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E4%B8%89%E5%A4%A7%E9%BB%84%E9%87%91%E5%8E%9F%E5%88%99.png" alt="三大黄金原则"></li></ul><h1 id="结构化设计"><a href="#结构化设计" class="headerlink" title="结构化设计"></a>结构化设计</h1><p>结构化设计可分为：<strong>概要设计、详细设计</strong></p><ul><li>概要设计【外部设计】：又称为<strong>系统总体结构设计</strong>，是将系统的功能需求分配给软件模块，确定每个模块的功能和调用关系，<strong>形成软件的模块结构图，即系统结构图</strong>。+概要设计书</li><li>详细设计【内部设计】：确定每个具体任务选择适当的技术手段和处理方法，<strong>模块内详细算法设计、模块内数据结构设计、数据库的物理设计、其他设计(代码、输入&#x2F;输出格式、用户界面)</strong>、编写详细设计说明书、评审。</li></ul><h2 id="概要设计"><a href="#概要设计" class="headerlink" title="概要设计"></a>概要设计</h2><h4 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h4><ul><li>保持模块的大小适中</li><li>尽可能减少调用的深度</li><li>多扇入，少扇出<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%A4%9A%E6%89%87%E5%85%A5%E5%B0%91%E6%89%87%E5%87%BA.png" alt="多扇入少扇出"><br>  <strong>当扇出过多时，可考虑拆分</strong></li><li>单入口，单出口</li><li>模块的作用域应该在模块之内，模块独立性原则（藕合性和内聚性）</li><li>功能应该是可预测的</li></ul><h4 id="模块的四个要素（了解）"><a href="#模块的四个要素（了解）" class="headerlink" title="模块的四个要素（了解）"></a>模块的四个要素（了解）</h4><ul><li><strong>输入和输出</strong>：模块的输入来源和输出去向都是同一个调用者，即一个块从调用者那儿取得输入，进行加工后再把输出返回调用者。</li><li><strong>处理功能</strong>：指模块把输入转换成输出所做的工作。</li><li><strong>内部数据</strong>：指仅供该模块本身引用的数据。</li><li><strong>程序代码</strong>：指用来实现模块功能的程序。</li></ul><h4 id="设计基本原理"><a href="#设计基本原理" class="headerlink" title="设计基本原理"></a>设计基本原理</h4><ul><li>抽象</li><li>模块化</li><li>信息隐蔽</li><li>模块独立(高内聚，低耦合)<br>  衡量模块独立程度的标准：<strong>耦合性和内聚性</strong><br>  内聚程度由低到高如下表【必考1分】<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%86%85%E8%81%9A%E7%A8%8B%E5%BA%A6%E7%94%B1%E4%BD%8E%E5%88%B0%E9%AB%98.png" alt="内聚程度由低到高"><br>  耦合程度由低到高如下表【必考1分】<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%80%A6%E5%90%88%E7%A8%8B%E5%BA%A6%E7%94%B1%E4%BD%8E%E5%88%B0%E9%AB%98.png" alt="耦合程度由低到高"></li></ul><h4 id="系统结构图"><a href="#系统结构图" class="headerlink" title="系统结构图"></a>系统结构图</h4><p>系统结构图（SC）又称为<strong>模块结构图</strong>，它是软件概要设计阶段的工具，反映系统的功能实现和模块之间的联系与通信，<strong>包括各模块之间的层次结构，即反映了系统的总体结构</strong>。</p><h2 id="详细设计"><a href="#详细设计" class="headerlink" title="详细设计"></a>详细设计</h2><h4 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h4><ol><li>分析并确定输入&#x2F;输出数据的逻辑结构。</li><li>找出输入数据结构和输出数据结构中有对应关系的数据单元。</li><li>按一定的规则由输入、输出的数据结构导出程序结构。</li><li>列出基本操作与条件，并把它们分配到程序结构图的适当位置。</li><li>用伪码写出程序。</li></ol><h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><p>详细设计的表示工具有<strong>图形工具、表格工具和语言工具</strong>。其中图形工具有<strong>业务流图、程序流程图PAD图、NS流程图</strong>。</p><ul><li>程序流程图又称为<strong>程序框图</strong>。用方框表示一个处理步骤，菱形表示一个逻辑条件，箭头表示控制流向。<ul><li>优点：<strong>结构清晰，易于理解，易于修改</strong>。</li><li>缺点：只能描述执行过程而不能描述有关的数据</li></ul></li><li>NS 流程图，也称为<strong>盒图</strong>，是一种强制使用结构化构造的图示工具，也称为方框图。其具有以下特点：<strong>功能域明确、不可能任意转移控制、很容易确定局部和全局数据的作用域、很容易表示嵌套关系及模板的层次关系</strong>。</li><li>PAD 图是一种改进的图形描述方式，可以用来取代程序流程图，相比程序流程图更直观，结构更清晰。最大的优点是<strong>能够反映和描述自顶向下的历史和过程</strong>。PAD 提供了5种基本控制结构的图示，并允许递归使用。</li></ul><h1 id="面向对象设计"><a href="#面向对象设计" class="headerlink" title="面向对象设计"></a>面向对象设计</h1><h4 id="基本过程"><a href="#基本过程" class="headerlink" title="基本过程"></a>基本过程</h4><p><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E7%BB%93%E6%9E%84%E5%9B%BE.png" alt="面向对象设计结构图"></p><h4 id="类的分类"><a href="#类的分类" class="headerlink" title="类的分类"></a>类的分类</h4><p><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%B1%BB%E7%9A%84%E5%88%86%E7%B1%BB.png" alt="类的分类"></p><h4 id="设计原则-1"><a href="#设计原则-1" class="headerlink" title="设计原则"></a>设计原则</h4><ul><li>单一职责原则：设计<strong>目的单一</strong>的类</li><li>开放-封闭原则：对扩展开放，对<strong>修改封闭</strong></li><li>李氏(Liskov)替换原则：<strong>子类可以替换父类</strong></li><li>依赖倒置原则：要依赖于抽象，而不是具体实现；<strong>针对接口编程</strong>，不要针对实现编程</li><li>接口隔离原则：使用多个专门的接口比使用单一的总接口要好</li><li>组合重用原则：要<strong>尽量使用组合</strong>，而不是继承关系达到重用目的</li><li>迪米特(Demeter)原则(最少知识原则)：一个对象应当对其他对象有<strong>尽可能少的了解</strong></li></ul><p>【<br>结构化方法的开发过程一般是先把系统功能视为一个大的模块，再根据系统分析与设计的要求对其进行进一步的模块分解或组合。</p><p>OMT方法使用了建模的思想，讨论如何建立一个实际的应用模型，包括对象模型、动态模型和功能模型。对象模型描述系统中对象的静态结构、对象之间的关系、属性和操作，主要用对象图来实现；动态模型描述与时间和操作顺序有关的系统特征，例如，激发事件、事件序列、确定事件先后关系的状态等，主要用状态图来实现动态模型；功能模型描述一个计算如何从输入值得到输出值，它不考虑计算的次序，主要用DFD来实现功能模型。<br>】</p>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-软件工程3-需求工程</title>
    <link href="/2025/08/05/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B3-%E9%9C%80%E6%B1%82%E5%B7%A5%E7%A8%8B/"/>
    <url>/2025/08/05/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B3-%E9%9C%80%E6%B1%82%E5%B7%A5%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><strong>软件需求</strong>：是指用户<strong>对系统在功能、行为、性能、设计约束等方面的期望</strong>。<br>是指<strong>用户解决问题或达到目标所需的条件或能力</strong>，是<strong>系统或系统部件要满足合同、标准、规范或其他正式规定文档所需具有的条件或能力</strong>，以及反映这些条件或能力的文档说明。<br>分为<strong>需求开发</strong>和<strong>需求管理</strong>两大过程，如下所示：<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82.png" alt="软件需求"><br>软件需求细分：</p><ul><li><strong>业务需求</strong>（整体全局）：反映<strong>企业或客户对系统高层次的目标要求</strong>，通常来自项目投资人客户、市场营销部门或产品策划部门。通过业务需求可以确定项目视图和范围。</li><li><strong>用户需求</strong>（用户视角）：描述的是<strong>用户的具体目标，或用户要求系统必须能完成的任务</strong>。即描述了<strong>用户能使用系统来做什么</strong>。通常采取<em>用户访谈</em>和<em>问卷调查</em>等方式，对用户使用的场景进行整理，从而建立用户需求。</li><li><strong>功能需求</strong>（计算机化）：从系统的角度来说明软件的需求，包括功能需求、非功能需求和设计约束等。<ol><li><strong>功能需求</strong>：也称为行为需求，规定了<strong>开发人员必须在系统中实现的软件功能</strong>，用户利用这些功能来完成任务，满足业务需要。</li><li><strong>非功能需求</strong>：指<strong>系统必须具备的属性或品质</strong>，又可以细分为软件质量属性（如可维护性、可靠性、效率等）和其他非功能需求。</li><li><strong>设计约束</strong>：也称为限制条件或补充规约，通常是<strong>对系统的一些约束说明</strong>，例如必须采用国有自主知识产权的数据库系统，必须运行在UNIX操作系统之下等。</li></ol></li></ul><p>需求工程整体图：<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E9%9C%80%E6%B1%82%E5%B7%A5%E7%A8%8B%E6%95%B4%E4%BD%93%E5%9B%BE.png" alt="需求工程整体图"></p><h1 id="需求开发"><a href="#需求开发" class="headerlink" title="需求开发"></a>需求开发</h1><h2 id="需求获取"><a href="#需求获取" class="headerlink" title="需求获取"></a>需求获取</h2><p>是一个<strong>确定和理解不同的项目干系人的需求和约束的过程</strong>。</p><h4 id="需求获取参考步骤"><a href="#需求获取参考步骤" class="headerlink" title="需求获取参考步骤"></a>需求获取参考步骤</h4><ol><li><strong>开发高层的业务模型</strong>：建立一个业务模型，描述用户的业务过程，确定用户的初始需求。</li><li><strong>定义项目范围和高层需求</strong>：项目范围描述系统的边界以及系统与系统交互的参与者之间的关系。高层需求不涉及过多的细节，主要表示系统需求的概貌。<br> 常见的建模手段包括：<strong>系统上下文图</strong>和<strong>系统顶层用例图</strong>等。</li><li><strong>识别用户角色和用户代表</strong>。用户角色可以是人，也可以是与系统打交道的其他应用程序或硬件部件。如果是其他应用程序或硬件部件，则需要以熟悉这些系统或硬件的人员作为用户代表。</li><li><strong>获取具体的需求</strong>。获取每个涉众的具体、完整和详细的需求。</li><li><strong>确定目标系统的业务工作流</strong>。具体到当前待开发的应用系统，确定系统的业务工作流和主要的业务规则。</li><li><strong>需求整理与总结</strong>。最后对上面步骤取得的需求资料进行整理和总结，确定对软件系统的综合要求即软件的需求。</li></ol><h4 id="常见的需求获取法【重要】"><a href="#常见的需求获取法【重要】" class="headerlink" title="常见的需求获取法【重要】"></a><strong>常见的需求获取法</strong>【重要】</h4><ol><li><strong>用户面谈</strong>（访谈）：1对<strong>1-3，有代表性的用户</strong>。其形式包括<strong>结构化和非结构化</strong>两种。面谈过程需要认真的计划和准备；面谈之后，需要复查笔记的准确性、完整性和可理解性；把所收集的信息转化为适当的模型和文档；确定需要进步澄清的问题。【成本高、要有领域知识支撑】</li><li><strong>需求专题讨论会</strong>：<strong>将相关涉众集中在一起集体讨论，与会者可以在应用需求上达成共识</strong>，对操作过程尽快取得统一的意见。参加会议的人员包括主持人、用户、技术人员、项目组人员。【交互好、成本高】</li><li><strong>问卷调查</strong>：<strong>用户多，无法一一访谈</strong>。可用于<strong>确认假设和收集统计倾向数据</strong>。</li><li><strong>现场观察</strong>：主要是通过<strong>观察用户实际执行业务的过程，来直观地了解业务的执行过程</strong>，全面了解需求细节。执行业务可能是手工操作，也可能是在原有的业务系统上执行。</li><li><strong>原型化方法</strong>：在需求的早期，用户往往在具体的需求定义上存在很多不确定性。此时往往可以通过<strong>在需求阶段采用原型化方法，通过开发系统原型以及与用户的多次选代反馈</strong>，解决在早期阶段需求不确定的问题，尤其是在人机界面等高度不确定的需求。</li><li><strong>头脑风暴法</strong>:在一些新业务拓展的软件项目中，由于业务是新出现的，而且<strong>业务流程存在高度的不确定性</strong>，例如互联网上的新业务系统、App等，<strong>一群人围绕该业务，发散思维，不断产生新的观点</strong>，参会者敞开思想使各种设想在相互碰撞中激起大脑的创造性风暴，从而确定具体的需求。</li></ol><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>一个好的需求应该具有<strong>无二义性、完整性、一致性、可测试性、确定性、可跟踪性、正确性、必要性</strong>等特性，因此，需要分析人员把<strong>杂乱无章的用户要求和期望转化为用户需求</strong>，这就是需求分析的工作。</p><h3 id="结构化分析"><a href="#结构化分析" class="headerlink" title="结构化分析"></a>结构化分析</h3><p><strong>结构化分析</strong>方法给出一组<strong>帮助系统分析人员产生功能规约的原理与技术</strong>。它一般利用图形表达用户需求，使用的手段主要有<strong>数据流图、数据字典、结构化语言、判定表以及判定树</strong>等。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%89%E5%A4%A7%E6%A8%A1%E5%9E%8B.png" alt="需求分析三大模型"></p><h4 id="结构化分析的步骤"><a href="#结构化分析的步骤" class="headerlink" title="结构化分析的步骤"></a>结构化分析的步骤</h4><ol><li>分析业务情况，做出<strong>反映当前物理模型的数据流图(DFD)</strong>；</li><li>推导出<strong>等价的逻辑模型的DFD（数据流图）</strong>；</li><li>设计<strong>新的逻辑系统</strong>，生成数据字典和基元描述；</li><li>建立人机接口，<strong>提出可供选择的目标系统物理模型的DFD（数据流图）</strong></li><li>确定各种方案的成本和风险等级，据此<strong>对各种方案进行分析</strong>；</li><li><strong>选择一种方案</strong>；</li><li><strong>建立完整的需求规约</strong></li></ol><h4 id="结构化特点"><a href="#结构化特点" class="headerlink" title="结构化特点"></a>结构化特点</h4><ul><li><strong>自顶向下</strong></li><li><strong>逐步分解</strong></li><li><strong>面向数据</strong></li></ul><h4 id="行为模型三大模型以及数据字典"><a href="#行为模型三大模型以及数据字典" class="headerlink" title="行为模型三大模型以及数据字典"></a>行为模型<strong>三大模型</strong>以及<strong>数据字典</strong></h4><ul><li><p><strong>功能模型(分层数据流图DFD表示)</strong><br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%88%86%E5%B1%82%E6%95%B0%E6%8D%AE%E6%B5%81%E5%9B%BE.png" alt="分层数据流图"></p><p>  基本图形元素：<strong>外部实体、加工、数据存储、数据流</strong><br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E6%95%B0%E6%8D%AE%E6%B5%81%E5%9B%BE.png" alt="数据流图"></p><ol><li><strong>数据流</strong>：由一组固定成分的数据组成，表示数据的流向。在DFD 中，<strong>数据流的流向必须经过<em>加工</em></strong>*。</li><li><strong>加工</strong>：描述了输入数据流到输出数据流之间的变换，数据流图中**常见的三种错误如图所示：<ul><li>加工3.1.2 有输入但是没有输出，称之为“黑洞</li><li>加工3.1.3 有输出但没有输入。称之为“奇迹”</li><li>加工3.1.1 中输入不足以产生输出，我们称之为“灰洞”<br> <img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E6%95%B0%E6%8D%AE%E6%B5%81%E5%9B%BE-%E5%8A%A0%E5%B7%A5.png" alt="数据流图-加工"></li></ul></li><li><strong>数据存储</strong>：用来存储数据。</li><li><strong>外部实体（外部主体）</strong>：是指存在于<strong>软件系统之外</strong>的人员或组织，它指出系统所需数据的发源地(源)和系统所产生的数据的归宿地(宿)</li></ol></li><li><p><strong>行为模型(状态转换图STD)</strong></p></li><li><p><strong>数据模型(E-R图)</strong></p></li></ul><p><strong>数据字典</strong><br>数据字典DD：是一种<strong>用户可以访问的记录数据库和应用程序元数据的目录</strong>。<br>数据字典是指对数据的<strong>数据项、数据结构、数据流、数据存储、处理逻辑</strong>等进行定义和描述，其目的是对数据流程图中的<strong>各个元素做出详细的说明</strong>。简而言之，数据字典是<strong>描述数据的信息集合</strong>，是对系统中使用的所有数据元素定义的集合。<br>数据字典各部分的描述如下：</p><ol><li><strong>数据项</strong>：数据流图中数据块的数据结构中的数据项说明。数据项是不可再分的数据单位</li><li><strong>数据结构</strong>：数据流图中数据块的数据结构说明。数据结构反映了数据之间的组合关系。</li><li><strong>数据流</strong>：数据流图中流线的说明。</li><li><strong>数据存储</strong>：数据流图中数据块的存储特性说明。</li><li><strong>处理过程</strong>：数据流图中功能块的说明。</li></ol><h3 id="面向对象的需求分析"><a href="#面向对象的需求分析" class="headerlink" title="面向对象的需求分析"></a>面向对象的需求分析</h3><p>UML：统一建模语言<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/UML%E5%BB%BA%E6%A8%A1%E8%AF%AD%E8%A8%80.png" alt="UML建模语言"><br>【规则、公共机制考的很少】<br>重点是【关系+图】<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/UML%E5%9B%BE.png" alt="UML图"></p><h2 id="需求定义"><a href="#需求定义" class="headerlink" title="需求定义"></a>需求定义</h2><p>需求规格说明书（SRS），不是需求基线</p><h3 id="严格定义法"><a href="#严格定义法" class="headerlink" title="严格定义法"></a>严格定义法</h3><ul><li>所有需求都能够被预先定义</li><li>开发人员与用户之间能够准确而清晰地交流</li><li>采用图形&#x2F;文字可以充分体现最终系统</li></ul><h3 id="原型法"><a href="#原型法" class="headerlink" title="原型法"></a>原型法</h3><ul><li>并非所有的需求都能在开发前被准确的说明</li><li>项目参加者之间通常都存在交流上的困难</li><li>需要实际的、可供用户参与的系统模型</li><li>有合适的系统开发环境</li><li>反复是完全需要和值得提倡的，需求一旦确定，就应遵从严格的方法</li></ul><h2 id="需求确认与验证"><a href="#需求确认与验证" class="headerlink" title="需求确认与验证"></a>需求确认与验证</h2><p>需求基线&#x3D;<strong>经过评审的</strong>需求规格说明书<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E9%9C%80%E6%B1%82%E9%AA%8C%E8%AF%81%E4%B8%8E%E7%A1%AE%E8%AE%A4.png" alt="需求验证与确认"></p><h1 id="需求管理"><a href="#需求管理" class="headerlink" title="需求管理"></a>需求管理</h1><h2 id="需求变更"><a href="#需求变更" class="headerlink" title="需求变更"></a>需求变更</h2><p>【一个项目，形成了需求的基线之后，就不能随便调整了】<br>为了使开发组织能够<strong>严格控制软件项目</strong>，应该确保以下事项：</p><ul><li>仔细<strong>评估已建议的变更</strong>。</li><li>挑选合适的人选<strong>对变更做出判定</strong></li><li>变更应及时<strong>通知所有相关人员</strong></li><li>项目要<strong>按一定的程序来采纳需求变更</strong>，对变更的过程和状态进行控制。</li></ul><h4 id="变更控制过程"><a href="#变更控制过程" class="headerlink" title="变更控制过程"></a>变更控制过程</h4><p><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%8F%98%E6%9B%B4%E6%8E%A7%E5%88%B6%E8%BF%87%E7%A8%8B.png" alt="变更控制过程"></p><ol><li><strong>问题分析和变更描述</strong>。当提出一份变更提议后，需要对该提议做进一步的问题分析，检查它的有效性从而产生一个更明确的需求变更提议。</li><li><strong>变更分析和成本计算</strong>。当接受该变更提议后，需要对需求变更提议进行影响分析和评估。变更成本计算应该包括对该变更所引起的所有改动的成本，例如修改需求文档、相应的设计、实现等工作成旦分析完成并且被确认，应该进行是否执行这一变更的决策。</li><li><strong>变更实现</strong>。当确定执行该变更后，需要根据该变更的影响范围，按照开发的过程模型执行相应的变更。</li></ol><p><strong>变更控制委员会</strong>(CCB)是项目所有者权益代表，负责<strong>裁定接受哪些变更</strong>。<br>CCB由项目所涉及的多方成员共同组成，通常包括用户和实施方的决策人员。<strong>CCB 是决策机构，不是作业机构</strong>，通常CCB的工作是通过评审手段来决定项目是否能变更，但<strong>不提出变更方案</strong>。</p><p>变更控制委员会应该有一个总则，用于描述变更控制委员会的目的、授权范围、成员构成、做出决策的过程及操作步骤。过程及操作步骤为：<strong>制定决策、交流情况、重新协商约定</strong><br><strong>变更控制流程的十大步骤</strong><br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%8F%98%E6%9B%B4%E5%8D%81%E5%A4%A7%E6%AD%A5%E9%AA%A4.png" alt="变更十大步骤"></p><h2 id="需求追踪"><a href="#需求追踪" class="headerlink" title="需求追踪"></a>需求追踪</h2><p>需求跟踪提供了由<strong>需求到产品实现整个过程范围的明确查阅的能力</strong>。需求跟踪的目的是建立与维护“需求一设计一编程一测试”之间的一致性，确保<strong>所有的工作成果符合用户需求</strong>。</p><p>需求开发工作不易，获取全面的正确的需求也是不易<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E9%9C%80%E6%B1%82%E8%B7%9F%E8%B8%AA%E5%9B%BE.png" alt="需求跟踪图"><br>需求跟踪有两种方式:</p><ol><li><strong>正向跟踪</strong>：检查《产品需求规格说明书》中的每个需求是否都能在后继工作成果中找到对应点。</li><li><strong>逆向跟踪</strong>：检查设计文档、代码、测试用例等工作成果是否都能在《产品需求规格说明书》中找到出处。</li></ol><p>正向跟踪和逆向跟踪合称为“<strong>双向跟踪</strong>”。不论采用何种跟踪方式，都要建立与维护<strong>需求跟踪矩阵</strong>(即表格)。需求跟踪矩阵保存了需求与后继工作成果的对应关系。</p>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>生活规划-咽喉炎反流</title>
    <link href="/2025/08/01/%E7%94%9F%E6%B4%BB%E7%90%90%E4%BA%8B/%E7%94%9F%E6%B4%BB%E8%A7%84%E5%88%92-%E5%92%BD%E5%96%89%E7%82%8E%E5%8F%8D%E6%B5%81/"/>
    <url>/2025/08/01/%E7%94%9F%E6%B4%BB%E7%90%90%E4%BA%8B/%E7%94%9F%E6%B4%BB%E8%A7%84%E5%88%92-%E5%92%BD%E5%96%89%E7%82%8E%E5%8F%8D%E6%B5%81/</url>
    
    <content type="html"><![CDATA[<h1 id="精细化饮食管理"><a href="#精细化饮食管理" class="headerlink" title="精细化饮食管理"></a>精细化饮食管理</h1><p>主旨是吃易消化的食物，哪些食物易消化，哪些避雷，按照个人喜好自己百度查阅。<br>忌口：酸，甜，辣，烟酒，高脂肪含量的，浓茶，咖啡。（比如坚果，膨化食品，蛋糕，奶茶，水果，等等零食，都不要吃）<br>水果顶多吃一点苹果，小半个最多了。<br>每餐7-8分饱，我是到下一顿之间基本上不会觉得饿，如果饿得厉害就吃一点点白馒头或者苏打饼干 </p><ul><li>吃饭前中后不喝汤不喝水，做到干湿分离。因为喝了水就稀释胃酸，影响消化。</li><li>吃饭细嚼慢咽，早餐10分钟起，午餐晚餐20分钟起。 很重要，牙齿是消化的第一步，一定要放慢速度，减轻胃的负担。 饭后1小时后再喝水，喝水要小口慢饮。 </li><li>睡前3-5小时不吃东西了，睡前1小时内尽量就别喝水。 主食避开粗粮，就吃精米精面，米饭做得烂一点。 </li><li>每天可以准备一瓶弱碱性水或者苏打水（提前放气），可以中和胃酸。</li></ul><p>每天早上空腹可以吃5-10颗生的红皮花生米，要嚼得很烂很烂，据说也是中和胃酸，修复胃黏膜。<br>举例:（我某一天的例子） </p><ul><li>起床，空腹喝100ml水，润润。 </li><li>嚼5-6颗生花生米 早餐吃半个白馒头＋2个肉馄饨or1个炖蛋（炖蛋是所有蛋的烹饪方法中最易消化的） （还有半个白馒头，留着餐间饿了吃两口）</li><li>饭后1小时开始可适当喝水补充水分。 </li><li>午餐，荤菜鸡鸭鱼肉虾牛肉猪肉，都可以。我自己的话感觉虾和鱼比牛肉猪肉好消化，所以如果吃牛肉猪肉我一般就吃2块，吃鱼的话我可以吃大半条桂鱼。 蔬菜1-2个，比如丝瓜，茭白炒蛋，花菜，青菜等等。 大半碗饭。 </li><li>饭后散步半小时。</li><li>1小时候补充水分。 </li><li>晚餐，我家主要晚上吃饭人多，所以晚上跟中午差不多这个量。 </li><li>饭后散步半小时。或者1小时后我做有氧运动，比如骑车，跳操，超慢跑，等等，交替着来。</li><li>饭后运动有利于加快胃部蠕动，尽快排空胃，减少反流。 </li><li>晚上一般10.30-11点准备睡觉。 个人感觉胃功能有问题的。</li></ul>]]></content>
    
    
    <categories>
      
      <category>生活琐事</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-软件工程5-测试</title>
    <link href="/2025/07/29/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B5-%E6%B5%8B%E8%AF%95/"/>
    <url>/2025/07/29/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B5-%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="测试原则和方法"><a href="#测试原则和方法" class="headerlink" title="测试原则和方法"></a>测试原则和方法</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>系统测试是<strong>为了发现错误而执行程序的过程，成功的测试是发现了至今尚未发现的错误的测试</strong><br>测试原则：</p><ul><li>应尽早并不断的进行测试；</li><li>测试工作应该避免由原开发软件的人或小组承担；</li><li>在设计测试方案时，不仅要确定输入数据，而且要根据系统功能确定预期的输出结果；</li><li>既包含有效、合理的测试用例，也包含不合理、失效的用例；</li><li>检验程序是否做了该做的事，且是否做了不该做的事;</li><li>严格按照测试计划进行;</li><li>妥善保存测试计划和测试用例;</li><li>测试用例可以重复使用或追加测试。</li></ul><h2 id="软件测试类型"><a href="#软件测试类型" class="headerlink" title="软件测试类型"></a>软件测试类型</h2><p>软件测试方法可分为<strong>静态测试</strong>和<strong>动态测试</strong>。</p><ul><li>【<strong>静态测试</strong>】：指被测试程序<strong>不在机器上运行</strong>，而采用<strong>人工检测和计算机辅助静态分析的手段</strong>对程序进行检测，包括对文档的静态测试和对代码的静态测试。<strong>对文档的静态测试</strong>主要以检查单的形式进行，而<strong>对代码的静态测试</strong>，包括【<strong>桌前检查】、【代码审查】、【代码走查</strong>】的方式。使用这种方法能够有效地发现30%-70%的逻辑设计和编码错误。<ul><li><strong>控制流分析</strong>：是否存在没有使用的语句&#x2F;<strong>无法达到的语句</strong>&#x2F;调用并不存在的子程序。</li><li><strong>数据流分析</strong>：<strong>引用未定义的变量</strong>、对以前未使用的变量再次赋值。</li><li><strong>接口分析</strong>：模块之间<strong>接口的一致性</strong>、子程序和函数之间的接口一致性、函数形参与实参的数量、顺序、类型的一致性。</li><li><strong>表达式分析</strong>：<strong>括号不配对</strong>、数组引用越界、除数为零。</li></ul></li><li>【<strong>动态测试</strong>】：指在计算机上<strong>实际运行程序</strong>进行软件测试，一般采用<strong>白盒测试</strong>和<strong>黑盒测试</strong>方法。<ul><li>黑盒测试：<strong>功能性测试</strong>，不了解软件代码结构，根据功能设计用例，测试软件功能。</li><li>灰盒测试</li><li>白盒测试：<strong>结构性测试</strong>，明确代码流程，根据代码逻辑设计用例，进行用例覆盖。</li></ul></li></ul><p>自动化测试：<br>先写脚本–&gt;自动化执行<br>不适合场景：项目周期短、需求变动频繁</p><h2 id="测试用例设计"><a href="#测试用例设计" class="headerlink" title="测试用例设计"></a>测试用例设计</h2><h3 id="黑盒测试用例"><a href="#黑盒测试用例" class="headerlink" title="黑盒测试用例"></a>黑盒测试用例</h3><p><strong>黑盒测试用例</strong>：将程序看做一个黑盒子，只知道输入输出，不知道内部代码，由此设计出测试用例，分为下面几类：</p><ul><li>等价类划分：把所有的数据按照某种特性进行归类，而后在每类的数据里选取一个即可。<ul><li>等价类测试用例的设计原则：<strong>设计一个新的测试用例，使其尽可能多地覆盖尚未被覆盖的有效等价类</strong>，重复这一步，直到所有的有效等价类都被覆盖为止；<strong>设计一个新的测试用例，使其仅盖一个尚未被覆盖的无效等价类</strong>，重复这一步，直到所有的无效等价类都被覆盖为止。</li></ul></li><li>边界值划分：将每类的边界值作为测试用例，边界值一般为<strong>范围的两端值以及在此范围之外的与此范围间隔最小的两个值</strong>，如年龄范围为0-150，边界值为0.150，-1.151四个。</li><li>错误推测：没有固定的方法，凭经验而言，来推测有可能产生问题的地方作为测试用例进行测试。</li><li>因果图：由一个结果来反推原因的方法，具体结果具体分析，没有固定方法。</li><li>错误推测：</li><li>判定表：</li></ul><h3 id="白盒测试用例"><a href="#白盒测试用例" class="headerlink" title="白盒测试用例"></a>白盒测试用例</h3><p><strong>白盒测试用例</strong>：知道程序的代码逻辑，按照程序的代码语句，来设计覆盖代码分支的测试用例，主要用于<strong>单元测试阶段</strong>。可分为：<strong>控制流测试、数据流测试、程序变异测试（错误驱动测试）</strong><br>控制流测试：覆盖级别从低至高分为下面几种：</p><ol><li><strong>语句覆盖SC</strong>：逻辑代码中的<strong>所有语句都要被执行一遍，覆盖层级最低</strong>，因为执行了所有的语句，不代表执行了所有的条件判断。</li><li><strong>判定覆盖DC</strong>：逻辑代码中的<strong>所有判断语句的条件的真假分支都要覆盖一次</strong></li><li><strong>条件覆盖CC</strong>：针对每一个判断条件内的**每一个独立条件都要执行一遍真和假；</li><li><strong>条件判定组合覆盖CDC</strong>：<strong>同时满足判定覆盖和条件覆盖</strong></li><li><strong>路径覆盖</strong>：逻辑代码中的<strong>所有可行路径都覆盖了，覆盖层级最高</strong><br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B1.png" alt="白盒测试用例1"><br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B2.png" alt="白盒测试用例3"><br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%99%BD%E7%9B%92%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B3.png" alt="白盒测试用例3"></li></ol><p><strong>MrCabe度量法</strong><br>McCabe度量法：又称为环路复杂度，以程序流程图为基础，有三种计算公式：</p><ol><li>边数-顶点数+2</li><li>封闭区域个数+1</li><li><strong>判定节点个数+1（推荐使用方法)</strong></li></ol><h2 id="测试阶段"><a href="#测试阶段" class="headerlink" title="测试阶段"></a>测试阶段</h2><ol><li><p>单元测试：也称为<strong>模块测试</strong>，测试的对象是<strong>可独立编译或汇编的程序模块</strong>、软件构件或OO软件中的类(统称为模块)，测试<strong>依据是软件【详细设计说明书】</strong>。主要是对该软件的模块进行测试，通过测试以发现该模块的功能不符合&#x2F;不满足期望的情况和编码错误。</p><ul><li>由于模块的规模不大，功能单一，结构较简单，且测试人员可通过阅读源程序清楚知道其逻辑结构：<ul><li><strong>首先应通过静态测试方法</strong>，比如静态分析、代码审查等，对该模块的源程序进行分析，按照模块的程序设计的控制流程图，以满足软件覆盖率要求的逻辑测试要求。</li><li>另外，<strong>也可采用黑盒测试方法提出一组基本的测试用例，再用白盒测试方法进行验证</strong>。若用黑盒测试方法所产生的测试用例满足不了软件的覆盖要求，可采用白盒法增补出新的测试用例，以满足所需的盖标准。其所需的覆盖标准应视模块的实际具体情况而定。对一些质量要求和可靠性要求较高的模块，一般要满足所需条件的组合覆盖或者路径覆盖标准。</li></ul></li></ul></li><li><p>集成测试：目的是<strong>检查模块之间，以及模块和已集成的软件之间的接口关系</strong>，并验证已集成的软件是否符合设计要求。测试<strong>依据是软件【概要设计文档】</strong>，集成测试通常要对已经严格按照程序设计要求和标准<strong>组装起来的模块同时进行测试</strong>，明确该程序结构组装的正确性，发现和<strong>接口</strong>有关的问题。</p><ul><li>在这一阶段，一般采用<strong>白盒测试和黑盒测试</strong>结合的方法进行测试，验证这一阶段设计的合理性以及需求功能的实现性。<br> 集成测试策略：<br>  一次性组装【风险高】<br>  增量式组装【测试全面】<br>  自顶向下【需要桩模块】<br>  自底向上【需要驱动模块】<br>  混合式【桩模块和驱动模块都需要】<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%A2%9E%E9%87%8F%E5%BC%8F%E7%BB%84%E8%A3%85.png" alt="增量式组装"></li></ul></li><li><p>系统测试：依据【需求文档】。</p><ul><li>本阶段的主要测试内容包括<strong>功能测试、性能测试、健壮性测试、安装或反安装测试、用户界面测试、压力测试、可靠性及安全性测试</strong>等。一般情况下，系统测试采用<strong>黑盒测试</strong>，以此来检查该系统是否符合软件需求。</li><li>测试人员必须进行<strong>多轮回归测试</strong>。</li><li>系统测试的结束标志是<strong>测试工作已满足测试目标所规定的需求覆盖率，并且测试所发现的缺陷都已全部归零</strong>。</li></ul><ol><li>【性能测试】：是通过<strong>自动化的测试工具模拟多种正常、峰值以及异常负载条件来对系统的各项性能指标进行测试</strong>。<ul><li>负载测试：各种工作负载下系统的性能</li><li>压力测试【测上限】：系统的瓶颈或不能接受的性能点</li><li>强度测试【测下限】：系统资源特别低的情况下运行</li><li>容量测试【并发测试】：同时在线的最大用户数</li><li>可靠性测试：MTTF之类的参数</li></ul><ol><li><strong>负载测试和压力测试</strong>都属于性能测试，两者可以结合进行。</li><li>通过负载测试，确定在各种工作负载下系统的性能，目标是测试当负载逐渐增加时，系统各项性能指标的变化情况。</li><li>压力测试是通过确定一个系统的瓶颈或者不能接受的性能点，<strong>来获得系统能提供的最大服务级别的测试</strong></li></ol></li><li>【验收测试】，属于确认测试的一种。主要用于<strong>验证软件的功能、性能和其他特性是否与用户需求一致</strong>。根据用户的参与程度，通常包括以下类型：<ol><li>内部确认测试：主要由<strong>软件开发组织内部按照SRS进行测试</strong>。</li><li>Alpha测试：用户在开发环境下进行测试。</li><li>Beta测试：用户在实际使用环境下进行测试，通过该测试后，产品才能交付用户。</li><li>验收测试：在真实的用户工作环境下，检验软件系统是否满足开发技术合同或SRS。</li></ol></li></ol></li><li><p>其他测试：</p><ol><li><strong>AB 测试是为Web 或App 界面或流程制作两个或多个版本</strong>，在同一时间维度，分别让组成成分相同(相似)的访客群组(目标人群)随机的访问这些版本，收集各群组的用户体验数据和业务数据，最后分析、评估出最好版本，正式采用。</li><li>Web测试是软件测试的一部分，<strong>是针对web 应用的一类测试</strong>。由于Web 应用与用户直接相关，又通常需要承受长时间的大量操作，因此Web项目的功能和性能都必须经过可靠的验证。</li><li>链接测试。链接是Web应用系统的一个主要特征，它是在页面之间切换和指导用户去一些未知地址页面的主要手段。链接测试可分为3个方面。首先，<strong>测试所有链接是否按指示那样确实链接到了该链接的页面:其次，测试所链接的页面是否存在:最后，保证Web 应用系统上没有孤立的页面</strong>。</li><li>表单测试。当<strong>用户通过表单提交信息的时候</strong>，都希望表单能正常工作。如果使用表单来进行在线注册，要确保<strong>提交按钮能正常工作，当注册完成后应返回注册成功的消息</strong>。如果使用表单收集配送信息，应确保程序能够正确处理这些数据，最后能让用户收到信息。</li><li>回归测试：测试目的是<strong>测试软件变更之后，变更部分的正确性和对变更需求的符合性，以及软件原有的、正确的功能、性能和其他规定的要求的不损害性</strong>。</li></ol></li></ol><h1 id="系统运行与维护"><a href="#系统运行与维护" class="headerlink" title="系统运行与维护"></a>系统运行与维护</h1><h2 id="系统转换"><a href="#系统转换" class="headerlink" title="系统转换"></a>系统转换</h2><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p><strong>遗留系统</strong>是指任何基本上<strong>不能进行修改和演化以满足新的变化了的业务需求的信息系统</strong>，它通常具有以下特点：</p><ol><li>系统虽然完成企业中许多重要的业务管理工作，但仍然<strong>不能完全满足要求</strong>。一般实现业务处理电子化及部分企业管理功能，很少涉及经营决策。</li><li>系统在性能上已经落后，采用的<strong>技术已经过时</strong>。例如，多采用主机&#x2F;终端形式或小型机系统，软件使用汇编语言或第三代程序设计语言的早期版本开发，使用文件系统而不是数据库。</li><li>通常是大型的软件系统，已经融入企业的业务运作和决策管理机制之中，<strong>维护工作十分困难</strong></li><li>没有使用现代信息系统建设方法进行管理和开发，现在基本上已经没有文档，<strong>很难理解</strong><br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E9%81%97%E7%95%99%E7%B3%BB%E7%BB%9F.png" alt="遗留系统"></li></ol><h3 id="策略"><a href="#策略" class="headerlink" title="策略"></a>策略</h3><p>系统转换是指<strong>新系统开发完毕，投入运行，取代现有系统的过程</strong>，需要考虑多方面的问题，以实现与老系统的交接，有以下三种转换计划</p><ul><li><strong>直接转换：现有系统被新系统直接取代了</strong>，风险很大，适用于新系统不复杂或者现有系统已经不能使用的情况。优点是节省成本。</li><li><strong>并行转换:新系统和老系统并行工作一段时间</strong>，新系统经过试运行后再取代若新系统在试运行过程中有问题，也不影响现有系统的运行，风险极小，在试运行过程中还可以比较新老系统的性能，适用于大型系统。缺点是耗费人力和时间资源，难以控制两个系统间的数据转换。</li><li><strong>分段转换:分期分批逐步转换</strong>，是直接和并行转换的集合，<strong>将大型系统分为多个子系统</strong>，依次试运行每个子系统，成熟一个子系统，就转换一个子系统。同样适用于大型项目，只是更耗时，而且现有系统和新系统间混合使用，需要协调好接口等问题。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AC%E6%8D%A2%E7%AD%96%E7%95%A5.png" alt="转换策略"></li></ul><h3 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h3><p><strong>数据转换与迁移</strong>：将数据从旧数据库迁移到新数据库中。有三种方法：</p><ul><li>系统切换前通过工具迁移</li><li>系统切换前采用手工录入</li><li>系统切换后通过新系统生成<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/ETL.png" alt="ETL"></li></ul><h2 id="系统维护性"><a href="#系统维护性" class="headerlink" title="系统维护性"></a>系统维护性</h2><p>系统的<strong>可维护性</strong>可以定义为<strong>维护人员理解、改正、改动和改进这个软件的难易程度</strong>，其评价指标如下：</p><ol><li><strong>易分析性</strong>。软件产品诊断软件中的缺陷或失效原因或识别待修改部分的能力。</li><li><strong>易改变性</strong>。软件产品使指定的修改可以被实现的能力，实现包括编码、设计和文档的更改。</li><li><strong>稳定性</strong>。软件产品避免由于软件修改而造成意外结果的能力。</li><li><strong>易测试性</strong>。软件产品使已修改软件能被确认的能力。</li><li><strong>维护性的依从性</strong>。软件产品遵循与维护性相关的标准或约定的能力。</li></ol><p>【以下来自希赛】<br>【可理解性】是指通过阅读源代码和相关文档，了解软件的功能和如何运行的容易程度。<br>【可修改性】是指修改软件的难易程度。<br>【可测试性】是指验证软件程序正确的难易程度。可测试性好的软件，通常意味着软件设计简单、复杂性低。因为软件的复杂性越大，测试的难度也就越大。<br>【可靠性】一个软件的可靠性越高，需要维护的概率就会越低。<br>【可移植性】是指将软件从一个环境移植到新的环境下正确运行的难易程度。<br>软件运行环境的变化是软件维护的一种常见情形，可移植性好的软件会降低维护的概率。</p><h3 id="维护类型"><a href="#维护类型" class="headerlink" title="维护类型"></a>维护类型</h3><p>系统维护包括<strong>硬件维护、【软件维护】和数据维护</strong>，其中<strong>软件维护类型</strong>如下：</p><ul><li><strong>正确性维护</strong>【修BUG】：发现了bug而进行的修改。</li><li><strong>适应性维护</strong>【应变】：由于外部环境发生了改变，被动进行的对软件的修改和升级。</li><li><strong>完善性维护</strong>【新需求】：基于用户主动对软件提出更多的需求，修改软件，增加更多的功能，使其比之前的软件功能、性能更高，更加完善。</li><li><strong>预防性维护</strong>【针对未来】：对未来可能发生的bug进行预防性的修改。</li></ul>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-软件工程2-工程</title>
    <link href="/2025/07/28/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B2-%E5%B7%A5%E7%A8%8B/"/>
    <url>/2025/07/28/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B2-%E5%B7%A5%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="逆向工程"><a href="#逆向工程" class="headerlink" title="逆向工程"></a>逆向工程</h1><p><strong>软件复用</strong>是<strong>将已有软件的各种有关知识用于建立新的软件，以缩减软件开发和维护的花费</strong>。<br>软件复用是提高软件生产力和质量的一种重要技术。早期的软件复用主要是<strong>代码级复用</strong>，被复用的知识专指程序，后来扩大到包括<strong>领域知识、开发经验、设计决定、体系结构、需求、设计、代码和文档等一切有关方面</strong><br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E5%9B%BE.png" alt="逆向工程图"></p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>软件的逆向工程是<strong>分析程序，力图在比源代码更高抽象层次上建立程序的表示过程</strong>，逆向工程是<strong>设计的恢复过程</strong>。<br>逆向工程的四个级别：</p><ul><li><strong>实现级</strong>：包括程序的抽象<strong>语法树</strong>、符号表、过程的设计表示。</li><li><strong>结构级</strong>：包括反映<strong>程序分量</strong>之间相互依赖关系的信息，例如调用图、结构图、程序和数据结构。</li><li><strong>功能级</strong>：包括反映<strong>程序段功能</strong>及程序段之间关系的信息，例如数据和控制流模型</li><li><strong>领域级</strong>：包括反映程序分量或程序诸实体与<strong>应用领域</strong>概念之间对应关系的信息，例如E-R模型。<br>其中，<strong>领域级抽象级别最高，完备性最低，实现级抽象级别最低，完备性最高</strong></li></ul><p>与逆向工程相关的概念有<strong>重构、设计恢复、再工程和正向工程</strong></p><ol><li>重构&#x2F;充足：是指在<strong>同一抽象级别上转换系统描述形式</strong></li><li>设计恢复：是指借助工具<strong>从已有程序中抽象出有关数据设计</strong>、总体结构设计和过程设计等方面的信息。</li><li>再工程：是指<strong>在逆向工程所获得信息的基础上，修改或重构已有的系统，产生系统的一个新版本</strong>。再工程是对<strong>现有系统的重新开发过程</strong>，包括<strong>逆向工程、新需求的考虑过程和正向工程</strong>三个步骤。在利用再工程重构现有系统的同时，一般会增加新的需求，包括增加新的功能和改善系统的性能<ol><li>正向工程：它不仅能从已存在的程序中重新获得设计信息，而且还能使用这些信息来重构现有系统，以改进它的综合质量。</li><li>逆向工程：<strong>分析程序，力图在比源代码更高抽象层次上建立程序的表示过程</strong>，逆向工程是<strong>设计的恢复过程</strong>。</li></ol></li></ol><h1 id="净室软件工程"><a href="#净室软件工程" class="headerlink" title="净室软件工程"></a>净室软件工程</h1><p>净室软件工程是一种<strong>应用数学与统计学理论以经济的方式生产高质量软件的工程技术</strong>，力图通过<strong>严格的工程化的软件过程达到开发中的零缺陷或接近零缺陷</strong>。<br>净室方法不是先制作一个产品，再去消除缺陷，而是<strong>要求在规约和设计中消除错误，然后以“净”的方式制作</strong>，可以降低软件开发中的风险，以合理的成本开发出高质量的软件。</p><p>在净室软件工程背后的哲学是：通过在<strong>第1次</strong>正确地书写代码增量，并在<strong>测试前验证它们的正确性</strong>，来避免对成本很高的错误消除过程的依赖。它的过程模型是在代码增量积聚到系统的过程的同时，进行代码增量的统计质量验证。它甚至<strong>提倡开发者不需要进行单元测试</strong>，而是进行正确性验证和统计质量控制。</p><p><strong>净室软件工程(CSE)的理论基础</strong>主要是<strong>函数理论</strong>和<strong>抽样理论</strong>。</p><p>净室软件工程应用技术手段：</p><ol><li>统计过程控制下的增量式开发：<strong>控制迭代</strong></li><li>基于函数的规范与设计：盒子结构<br> 定义3种抽象层次：行为视图（黑盒）-&gt;有限状态机图（状态盒）-&gt;过程视图（明盒）</li><li>正确性验证。CSE的核心</li><li>统计测试和软件认证：使用统计学原理，总体太大时必须采用抽样方法</li></ol><p>净室软件工程在使用过程的一些<strong>缺点</strong>:</p><ol><li>CSE太理论化，需要更多的数学知识。其正确性验证的步骤比较困难且比较耗时。</li><li>CSE 开发小组不进行传统的模块测试，这是不现实的。</li><li>CSE也会带有传统软件工程的一些弊端。</li></ol><h1 id="基于构件的软件工程"><a href="#基于构件的软件工程" class="headerlink" title="基于构件的软件工程"></a>基于构件的软件工程</h1><p>基于构件的软件工程(CBSE)是一种基于<strong>分布对象技术</strong>、强调通过<strong>可复用构件设计与构造软件系统</strong>的软件复用途径。CBSE 体现了“<strong>购买而不是重新构造</strong>”的哲学，将软件开发的重点<strong>从程序编写转移到了基于己有构件的组装</strong>。<br>用于CBSE 的构件应该具备以下特征：</p><ol><li><strong>可组装型</strong>：对于可组装的构件，所有外部交互必须通过公开定义的接口进行。同时它还必须对自身信息的外部访问。</li><li><strong>可部署性</strong>:软件必须是自包含的，必须能作为一个独立实体在提供其构件模型实现的构件平台上运行。构件总是二进制形式，无须在部署前编译。</li><li><strong>文档化</strong>：构件必须是完全文档化的，用户根据文档来判断构件是否满足需求。</li><li><strong>独立性</strong>：构件应该是独立的，应该可以在无其他特殊构件的情况下进行组装和部署，如确实需要其他构件提供服务，则应显示声明。</li><li><strong>标准化</strong>：构件标准化意味着在CBSE过程中使用的构件必须符合某种标准化的构件模型构件模型定义了构件实现、文档化以及开发的标准，其包含的模型要素为：<ul><li><strong>接口</strong>。构件通过构件接口来定义，构件模型规定应如何定义构件接口以及在接口定义中应该包含的要素，如操作名、参数以及异常等。</li><li><strong>使用信息</strong>。为使构件远程分布和访问，必须给构件一个特定的、全局唯一的名字或句柄。构件元数据是构件本身相关的数据，比如构件的接口和属性信息。</li><li><strong>部署</strong>。构件模型包括一个规格说明，指出应该如何打包构件使其部署成为一个独立的可执行实体。部署信息中包含有关包中内容的信息和它的二进制构成的信息。</li></ul></li></ol><p>构件模型提供了一组<strong>被构件使用的通用服务</strong>，这种服务包括以下两种：</p><ul><li><strong>平台服务</strong>，允许构件在分布式环境下通信和互操作。。</li><li><strong>支持服务</strong>，这是很多构件需要的共性服务。例如，构件都需要的身份认证服务。</li><li><strong>中间件</strong>：实现共性的构件服务，并提供这些服务的接口。</li></ul><p>CBSE过程是支持基于构件组装的软件开发过程，过程中的6个主要活动：</p><ol><li>系统需求概览、</li><li>识别候选构件、</li><li>根据发现的构件修改需求、</li><li>体系结构设计、</li><li>构件定制与适配、</li><li>组装构件创建系统。</li></ol><p>CBSE过程与传统软件开发过程不同点：</p><ol><li>CBSE早期<strong>需要完整的需求</strong>，以便尽可能多地识别出可复用的构件。</li><li>在过程早期阶段根据<strong>可利用的构件来细化和修改需求</strong>。如果可利用的构件不能满足用户需2’就应该考虑由复用构件支持的相关需求。</li><li>在系统体系结构设计完成后，会有一个<strong>进一步的对构件搜索及设计精化的活动</strong>。可能需要为某些构件寻找备用构件，或者修改构件以适合功能和架构的要求。</li><li>开发就是将<strong>已经找到的构件集成在一起的组装过程</strong>。</li></ol><p>构件组装是指构件相互直接集成或是用专门编写的“<strong>胶水代码</strong>”将它们整合在一起来创造一个系统或另一个构件的过程。<br>常见的组装构件有以下3种组装方式。</p><ol><li><strong>顺序组装</strong>。通过<strong>按顺序调用己经存在的构件</strong>，可以用两个已经存在的构件来创造一个新的构件。如一个构件输出作为下一个构件的输入</li><li><strong>层次组装</strong>。这种情况发生在一个构件<strong>直接调用自另一个构件所提供的服务时</strong>。被调用的构件为调用的构件提供所需的服务。二者之间接口匹配兼容。</li><li><strong>叠加组装</strong>。这种情况发生在<strong>两个或两个以上构件放在一起来创建一个新构件</strong>的时候。这个新构件合并了原构件的功能，从而对外提供了新的接口。外部应用可以通过新接口来调用原有构件的接口，而原有构件不互相依赖，也不互相调用。这种组装类型适合于构件是程序单元或者构件是服务的情况。<br> <img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E6%9E%84%E4%BB%B6%E7%9A%84%E7%BB%84%E8%A3%85.png" alt="构件的组装"></li></ol><p>构件组装的三种不兼容问题(通过编写适配器解决)：</p><ol><li><strong>参数不兼容</strong>。接口每一侧的操作有相同的名字，但参数类型或参数个数不相同。</li><li><strong>操作不兼容</strong>。提供接口和请求接口的操作名不同。</li><li><strong>操作不完备</strong>。一个构件的提供接口是另一个构件请求接口的一个子集，或者相反。</li></ol>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客嵌入pdf.js</title>
    <link href="/2025/07/27/%E6%8A%80%E6%9C%AF%E6%9D%82%E7%B3%85/Hexo%E5%8D%9A%E5%AE%A2%E5%B5%8C%E5%85%A5pdf-js/"/>
    <url>/2025/07/27/%E6%8A%80%E6%9C%AF%E6%9D%82%E7%B3%85/Hexo%E5%8D%9A%E5%AE%A2%E5%B5%8C%E5%85%A5pdf-js/</url>
    
    <content type="html"><![CDATA[<p>鉴于小孩子要读一年级了，想着对电子版课本进行收集，提前看起来，网盘查看不方便，想着放博客里，但是发现，没法用PDF显示。琢磨着查找了下，找到此方案。<br>【参考：<a href="https://xiao-h.com/2025/02/19/Hexo%E5%8D%9A%E5%AE%A2%E5%B5%8C%E5%85%A5pdf-js/">Hexo 博客嵌入 pdf.js - 小H的博客</a>】<br>尝试过 <a href="https://github.com/superalsrk/hexo-pdf">hexo-pdf</a>，在WEB端显示挺好的，还能在Obsidian里预览显示，但是无法再手机端显示。</p><ol><li>首先来<a href="https://mozilla.github.io/pdf.js/getting_started/#download">这里</a>下载 pdf.js，解压后把里面的所有内容放到放到博客根目录的 <code>source/js/pdfjs</code> 里面。</li><li>在 <code>_config.yml</code> （注意<strong>不是</strong>主题的配置文件）里面添加这些东西（这里根据实际情况指定名称）：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yarm">pdfjs:  <br>enable: true  <br>src: /js/pdfjs/build/pdf.mjs  <br>workerSrc: /js/pdfjs/build/pdf.worker.mjs<br></code></pre></td></tr></table></figure><ol start="3"><li>在 <code>skip_render</code> 这一项里加上 <code>js</code> 目录：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yarm">skip_render: [js/**]<br></code></pre></td></tr></table></figure><ol start="4"><li>接下来可以通过这样的方式来使用 pdf.js：</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pdf-container&quot;</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/pdfjs/web/viewer.html?file=/assets/GAMES101.pdf&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;600px&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>file</code> 后面是文件的地址，比如说我在 <code>source/assets</code> 目录下有 <code>GAMES101.pdf</code> 这个文件，执行 <code>hexo g</code> 后会被复制到网站的根目录，所以这里用 <code>/assets/GAMES101.pdf</code> 来指定这个文件。</p><p><code>/js/pdfjs/web</code> 下面有个似乎是用来测试的论文，想删也可以删了。</p>]]></content>
    
    
    <categories>
      
      <category>技术杂糅</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PDF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一上语文24新-教师用书</title>
    <link href="/2025/07/27/%E5%B0%8F%E5%88%9D%E9%AB%98/%E4%B8%80%E4%B8%8A%E8%AF%AD%E6%96%8724%E6%96%B0-%E6%95%99%E5%B8%88%E7%94%A8%E4%B9%A6/"/>
    <url>/2025/07/27/%E5%B0%8F%E5%88%9D%E9%AB%98/%E4%B8%80%E4%B8%8A%E8%AF%AD%E6%96%8724%E6%96%B0-%E6%95%99%E5%B8%88%E7%94%A8%E4%B9%A6/</url>
    
    <content type="html"><![CDATA[<div class="pdf-container">  <div class="pdf-container">  <iframe src="/js/pdfjs/web/viewer.html?file=/files/小初高/教师用书：一上语文24新.pdf" width="100%" height="600px"></iframe>  </div>]]></content>
    
    
    <categories>
      
      <category>小初高</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>一上语文24新</title>
    <link href="/2025/07/27/%E5%B0%8F%E5%88%9D%E9%AB%98/%E4%B8%80%E4%B8%8A%E8%AF%AD%E6%96%8724%E6%96%B0/"/>
    <url>/2025/07/27/%E5%B0%8F%E5%88%9D%E9%AB%98/%E4%B8%80%E4%B8%8A%E8%AF%AD%E6%96%8724%E6%96%B0/</url>
    
    <content type="html"><![CDATA[<div class="pdf-container">  <div class="pdf-container">  <iframe src="/js/pdfjs/web/viewer.html?file=/files/小初高/一上语文24新.pdf" width="100%" height="600px"></iframe>  </div>]]></content>
    
    
    <categories>
      
      <category>小初高</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>一下语文24新-教师用书</title>
    <link href="/2025/07/27/%E5%B0%8F%E5%88%9D%E9%AB%98/%E4%B8%80%E4%B8%8B%E8%AF%AD%E6%96%8724%E6%96%B0-%E6%95%99%E5%B8%88%E7%94%A8%E4%B9%A6/"/>
    <url>/2025/07/27/%E5%B0%8F%E5%88%9D%E9%AB%98/%E4%B8%80%E4%B8%8B%E8%AF%AD%E6%96%8724%E6%96%B0-%E6%95%99%E5%B8%88%E7%94%A8%E4%B9%A6/</url>
    
    <content type="html"><![CDATA[<div class="pdf-container">  <div class="pdf-container">  <iframe src="/js/pdfjs/web/viewer.html?file=/files/小初高/教师用书：一下语文24新.pdf" width="100%" height="600px"></iframe>  </div>]]></content>
    
    
    <categories>
      
      <category>小初高</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>一下语文24新</title>
    <link href="/2025/07/27/%E5%B0%8F%E5%88%9D%E9%AB%98/%E4%B8%80%E4%B8%8B%E8%AF%AD%E6%96%8724%E6%96%B0/"/>
    <url>/2025/07/27/%E5%B0%8F%E5%88%9D%E9%AB%98/%E4%B8%80%E4%B8%8B%E8%AF%AD%E6%96%8724%E6%96%B0/</url>
    
    <content type="html"><![CDATA[<div class="pdf-container">  <div class="pdf-container">  <iframe src="/js/pdfjs/web/viewer.html?file=/files/小初高/一下语文25新.pdf" width="100%" height="600px"></iframe>  </div>]]></content>
    
    
    <categories>
      
      <category>小初高</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-软件工程1-概述</title>
    <link href="/2025/07/26/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B1-%E6%A6%82%E8%BF%B0/"/>
    <url>/2025/07/26/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B1-%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="软件工程概述（原）"><a href="#软件工程概述（原）" class="headerlink" title="软件工程概述（原）"></a>软件工程概述（原）</h1><h2 id="软件开发生命周期"><a href="#软件开发生命周期" class="headerlink" title="软件开发生命周期"></a>软件开发生命周期</h2><ul><li><strong>软件定义时期</strong>：包括<strong>可行性研究和详细需求分析过程</strong>，任务是确定软件开发工程必须完成的总目标，具体可分成问题定义、可行性研究、需求分析等。</li><li><strong>软件开发时期</strong>：就是软件的<strong>设计与实现</strong>，可分成概要设计、详细设计、编码、测试等。</li><li><strong>软件运行和维护</strong>：就是把<strong>软件产品移交给用户使用</strong>。</li></ul><h2 id="软件系统的文档"><a href="#软件系统的文档" class="headerlink" title="软件系统的文档"></a>软件系统的文档</h2><ul><li><strong>用户文档</strong>：用户文档主要描述<strong>系统功能和使用方法</strong>，并不关系这些功能是怎样实现的；</li><li><strong>系统文档</strong>：系统文档描述<strong>系统设计、实现和测试等各方面的内容</strong></li></ul><h2 id="软件工程过程"><a href="#软件工程过程" class="headerlink" title="软件工程过程"></a>软件工程过程</h2><p>软件工程过程是指为获得软件产品包括以下4个方面活动：</p><ol><li>P(Plan)——<strong>软件规格说明</strong>。规定软件的功能及其运行时的限制。</li><li>D(Do)——<strong>软件开发</strong>。开发出满足规格说明的软件。</li><li>C(Check)——<strong>软件确认</strong>。确认开发的软件能够满足用户的需求，</li><li>A(Action)——<strong>软件演进</strong>。软件在运行过程中不断改进以满足客户新的需求。</li></ol><h2 id="软件系统工具"><a href="#软件系统工具" class="headerlink" title="软件系统工具"></a>软件系统工具</h2><p>通常可以按软件过程活动将软件工具分为：</p><ul><li><strong>软件开发工具</strong>：需求分析工具、设计工具、编码与排错工具、测试工具等。</li><li><strong>软件维护工具</strong>：版本控制工具、文档分析工具、开发信息库工具、逆向工程工具、再工程工具。</li><li><strong>软件管理和软件支持工具</strong>：项目管理工具、配置管理工具、软件评价工具、软件开发工具的评价和选择</li></ul><h2 id="软件设计四个活动"><a href="#软件设计四个活动" class="headerlink" title="软件设计四个活动"></a>软件设计四个活动</h2><ul><li>数据设计</li><li>架构(体系结构)设计</li><li>人机界面(接口)设计</li><li>过程设计</li></ul><h1 id="能力成熟度模型"><a href="#能力成熟度模型" class="headerlink" title="能力成熟度模型"></a>能力成熟度模型</h1><h2 id="能力成熟度模型CMM"><a href="#能力成熟度模型CMM" class="headerlink" title="能力成熟度模型CMM"></a>能力成熟度模型CMM</h2><p><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%83%BD%E5%8A%9B%E6%88%90%E7%86%9F%E5%BA%A6%E6%A8%A1%E5%9E%8BCMM.png" alt="能力成熟度模型CMM"></p><h2 id="能力成熟度模型集成CMMI"><a href="#能力成熟度模型集成CMMI" class="headerlink" title="能力成熟度模型集成CMMI"></a>能力成熟度模型集成CMMI</h2><p>是<strong>若干过程模型的综合和改进</strong>，不仅仅软件，而是支持<strong>多个工程学科和领域的</strong>、系统的、一致的过程改进框架，能适应现代工程的特点和需要，能提高过程的质量和工作效率。<br>CMMI两种表示方法:</p><ol><li><strong>阶段式模型</strong>：类似于CMM，它<strong>关注组织的成熟度</strong>，五个成熟度模型如下：<br> <img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E9%98%B6%E6%AE%B5%E5%BC%8F%E6%A8%A1%E5%9E%8B.png" alt="阶段式模型"></li><li>连续式模型：关注每个过程域的能力，一个组织对不同的过程域可以达到不同的过程域能力等级。</li></ol>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-软件工程2-概述</title>
    <link href="/2025/07/26/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B2-%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/"/>
    <url>/2025/07/26/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B2-%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h2><p>瀑布模型(SDLC)：瀑布模型是一个经典的软件生命周期模型。<br>一般<strong>将软件开发分为</strong>：</p><ul><li>可行性分析(计划)</li><li>需求分析、</li><li>软件设计(概要设计、详细设计)、</li><li>编码(含单元测试)、</li><li>测试、</li><li>运行维护</li></ul><p>瀑布模型特点：</p><ol><li>从<strong>上一项开发活动接受该项活动的工作对象作为输入</strong></li><li>利用这一输入，<strong>实施该项活动应完成的工作内容</strong></li><li>给出该项活动的<strong>工作成果</strong>，<strong>作为输出</strong>传给下一项开发活动</li><li>对<strong>该项活动的实施工作成果进行评审</strong>。若其工作成果得到确认，则继续进行下一项开发活动；否则返回前一项，甚至更前项的活动。尽量减少多个阶段间的反复。以相对来说较小的费用来开发软件</li><li>适用于需求明确的项目</li></ol><p>缺点：</p><ul><li>软件需求完整性、正确性难确定</li><li>严格串行化，很长时间才能看到结果</li><li>瀑布模型要求每个阶段一次性完全解决该阶段工作，这不现实。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%80%91%E5%B8%83%E6%A8%A1%E5%9E%8B.png" alt="瀑布模型"><br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%80%91%E5%B8%83%E6%A8%A1%E5%9E%8B2.png" alt="瀑布模型2"></li></ul><h2 id="原型化模型"><a href="#原型化模型" class="headerlink" title="原型化模型"></a>原型化模型</h2><p>原型化模型<strong>第一步就是创建一个快速原型</strong>，能够满足项目干系人与未来的用户可以与原型进行交互，再通过与相关干系人进行充分的讨论和分析，<strong>最终弄清楚当前系统的需求</strong>，进行了充分的了解之后，在原型的基础上开发出用户满意的产品。<br>原型法认为在很难一下子全面准确地提出用户需求的情况下，原型应当具备的特点如下：</p><ol><li><strong>实际可行</strong></li><li>具有<strong>最终系统的基本特征</strong></li><li><strong>构造方便、快速，造价低</strong>。原型法的特点在于原型法对用户的需求是<strong>动态响应、逐步纳入的</strong>。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%8E%9F%E5%9E%8B%E6%B3%95.png" alt="原型法"><br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%8E%9F%E5%9E%8B%E7%9B%B8%E5%85%B3%E6%A8%A1%E5%9E%8B.png" alt="原型相关模型"></li></ol><hr><h2 id="V模型"><a href="#V模型" class="headerlink" title="V模型"></a>V模型</h2><p>V模型从整体上看起来，就是一个V字型的结构，由左右两边组成。<br>左边的下画线分别代表了需求分析、概要设计、详细设计、编码。<br>右边的上画线代表了单元测试、集成测试、系统测试与验收测试。<br>【测试贯穿于始终】<br>V模型的特点如下：</p><ol><li><strong>单元测试</strong>的主要目的是针对<strong>编码过程中</strong>可能存在的各种错误</li><li><strong>集成测试</strong>的主要目的是针对<strong>详细设计</strong>中可能存在的问题</li><li><strong>系统测试</strong>主要针对<strong>概要设计</strong>，检查系统作为一个整体是否有效地得到运行</li><li><strong>验收测试</strong>通常由业务专家或者用户进行，以确认产品能真正符合用户业务上的需要</li><li>V模型<strong>用于需求明确和需求变更不频繁</strong>的情形。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/V%E6%A8%A1%E5%9E%8B.png" alt="V模型"></li></ol><h2 id="W模型"><a href="#W模型" class="headerlink" title="W模型"></a>W模型</h2><p>【测试和开发并行】<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/W%E6%A8%A1%E5%9E%8B.png" alt="W模型"></p><hr><h2 id="螺旋模型"><a href="#螺旋模型" class="headerlink" title="螺旋模型"></a>螺旋模型</h2><p>螺旋模型是一个<strong>演化软件过程模型</strong>，将<strong>原型实现的迭代特征与线性顺序（瀑布）模型中控制的和系统化的方面结合起来</strong>。在螺旋模型中，<strong>软件开发是一系列的增量发布</strong><br>开发过程具有<strong>周期性重复的螺旋线状</strong>。<br>四个象限分别标志每个周期所划分的四阶段：<strong>制订计划、风险分析、实施工程和客户评估</strong>。<br>螺旋模型<strong>强调了【风险】分析</strong>，特别<strong>适用于庞大而复杂的、高风险的系统</strong><br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%9E%BA%E6%97%8B%E6%A8%A1%E5%9E%8B.png" alt="螺旋模型"></p><h2 id="基于构件的开发模型CBSD"><a href="#基于构件的开发模型CBSD" class="headerlink" title="基于构件的开发模型CBSD"></a>基于构件的开发模型CBSD</h2><p>利用<strong>预先包装的构件来构造应用系统</strong>。构件可以是组织内部开发的构件，也可以是商品化成品软件构件。<br>特点是<strong>增强了复用性</strong>，在系统开发过程中，会构建一个构件库，供其他系统复用，因此可以提高可靠性，节省时间和成本。<br>【优点】易扩展、易重用、降低成本、安排任务更灵活。<br>【缺点】构件设计要求经验丰富的架构师、设计不好的构件难重用、强调重用可能牺牲其他指标(如性能)、第三方构件质量难控制。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%9F%BA%E4%BA%8E%E6%9E%84%E4%BB%B6.png" alt="基于构件"></p><h2 id="快速应用开发模型（RAD）"><a href="#快速应用开发模型（RAD）" class="headerlink" title="快速应用开发模型（RAD）"></a>快速应用开发模型（RAD）</h2><p>早先的可视化开发<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%BF%AB%E9%80%9F%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E6%A8%A1%E5%9E%8B.png" alt="快速应用开发模型"></p><hr><h2 id="统一过程模型（RUP）【重】"><a href="#统一过程模型（RUP）【重】" class="headerlink" title="统一过程模型（RUP）【重】"></a>统一过程模型（RUP）【重】</h2><p>RUP 描述了<strong>如何有效地利用商业的、可靠的方法开发和部署软件</strong>，是一种重量级过程。<br>RUP 类似一个在线的指导者，它可以<strong>为所有方面和层次的程序开发提供指导方针、本模版以及事例支持</strong>。</p><p>RUP 把软件开发生命周期划分为<strong>多个循环</strong>，每个循环生成产品的一个新的版本，<strong>每个循环依次由4 个连续的阶段组成</strong>，每个阶段完成确定的任务。这4个阶段如下：</p><ul><li><strong>初始阶段</strong>：定义最终产品视图和业务模型，并确定系统范围。</li><li><strong>细化阶段</strong>：设计及确定<strong>系统的体系结构</strong>，制订工作计划及资源要求。</li><li><strong>构造阶段</strong>：<strong>构造产品并继续演进需求</strong>、体系结构、计划直至产品提交</li><li><strong>移交阶段</strong>：把产品提交给用户使用。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E7%BB%9F%E4%B8%80%E8%BF%87%E7%A8%8B%E5%9B%BE.png" alt="统一过程图"><br>RUP 软件开发生命周期是一个<strong>二维的软件开发模型</strong>，RUP中有<strong>9个核心工作流</strong>，如下：</li><li><strong>业务建模</strong>：理解待开发系统所在的机构及其商业运作，确保所有参与人员对待开发系统所在的机构有共同的认识，评估待开发系统对所在机构的影响。</li><li><strong>需求</strong>：定义系统功能及用户界面，使客户知道系统的功能，使开发人员理解系统的需求，为项目预算及计划提供基础。</li><li><strong>分析与设计</strong>：把需求分析的结果转化为分析与设计模型。</li><li><strong>实现</strong>：把设计模型转换为实现结果，对开发的代码做单元测试，将不同实现人员开发的模块集成为可执行系统。</li><li><strong>测试</strong>：检查各子系统之间的交互、集成，验证所有需求是否均被正确实现，对发现的软件质量上的缺陷进行归档，对软件质量提出改进建议。</li><li><strong>部署</strong>：打包、分发、安装软件，升级旧系统；培训用户及销售人员，并提供技术支持。</li><li><strong>配置与变更管理</strong>：跟踪并维护系统开发过程中产生的所有制品的完整性和一致性。</li><li><strong>项目管理</strong>：为软件开发项目提供计划、人员分配、执行、监控等方面的指导，为风险管理提供框架。</li><li><strong>环境</strong>：为软件开发机构提供软件开发环境，即提供过程管理和工具的支持。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/9%E4%B8%AA%E6%A0%B8%E5%BF%83%E5%B7%A5%E4%BD%9C%E6%B5%81.png" alt="9个核心工作流"><br>RUP 中定义了如下一些<strong>核心概念</strong>，理解这些概念对于理解RUP很有帮助。</li><li>角色：<strong>Who 的问题</strong>。角色描述某个人或一个小组的行为与职责。RUP预先定义了很多角色，如体系结构师、设计人员、实现人员、测试员和配置管理人员等，并对每一个角色的工作和职责都做了详尽的说明。</li><li>活动：<strong>How 的问题</strong>。活动是一个有明确目的的独立工作单元。</li><li>制品：<strong>What的问题</strong>。制品是活动生成、创建或修改的一段信息。</li><li>工作流：When 的问题。工作流描述了一个有意义的连续的活动序列，每个工作流产生一些有价值的产品，并显示了角色之间的关系。</li></ul><p>RUP的<strong>特点</strong></p><ol><li><strong>用例驱动</strong>：需求分析、设计、实现和测试等活动都是用例驱动的</li><li><strong>以体系结构为中心</strong>：包括系统的总体组织和全局控制、通信协议等。是一个多维的结构，会采用多个视图来描述。在典型的4+1视图模型中：<ul><li><strong>分析人员和测试人员</strong>关心的是系统的行为，会侧重于用例视图；</li><li><strong>最终用户</strong>关心的是系统的功能，会侧重于逻辑视图；</li><li><strong>程序员</strong>关心的是系统的配置、装配等问题，会侧重于实现视图；</li><li><strong>系统集成人员</strong>关心的是系统的性能、可伸缩性、吞吐率等问题，会侧重于进程视图；</li><li><strong>系统工程师</strong>关心的是系统的发布、安装、拓扑结构等问题，会侧重于部署视图。<br> <img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/RUA%E5%85%B8%E5%9E%8B%E8%A7%86%E5%9B%BE.png" alt="RUA典型视图"></li></ul></li><li><strong>迭代与增量</strong>。把整个项目开发分为<strong>多个迭代过程</strong>。在每次选代中，只考虑系统的一部分需求，进行分析、设计、实现、测试和部署等过程;每次迭代是在已完成部分的基础上进行的，每次增加一些新的功能实现，以此进行下去，直至最后项目的完成。</li></ol><hr><h2 id="敏捷模型【重】"><a href="#敏捷模型【重】" class="headerlink" title="敏捷模型【重】"></a>敏捷模型【重】</h2><p>发展过程<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E6%95%8F%E6%8D%B7%E6%96%B9%E6%B3%95%E5%8F%91%E5%B1%95%E8%B7%AF%E7%BA%BF.png" alt="敏捷方法发展路线"><br>开发宣言：<br><strong>个体和交豆 胜过 过程和工具</strong>、<br><strong>可以工作的软件 胜过 面面俱到的文档</strong>、<br><strong>客户合作 胜过合同谈判、</strong><br><strong>响应变化 胜过 遵循计划</strong><br>敏捷方法区别于其他方法的两个特点：</p><ol><li>是“适应性”而非“预设性”</li><li>是“面向人的”而非“面向过程的”</li></ol><p>敏捷方法的核心思想：</p><ol><li>敏捷方法是<strong>适应型</strong>，而非可预测型。拥抱变化，适应变化。</li><li>敏捷方法是<strong>以人为本</strong>，而非以过程为本。发挥人的特性。</li><li><strong>迭代增量式</strong>的开发过程。以原型开发思想为基础，采用法代增量式开发，发行版本小型化。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E6%95%8F%E6%8D%B7%E6%A8%A1%E5%9E%8B-%E6%A6%82%E5%BF%B5.png" alt="敏捷模型-概念"></li></ol><p>主要敏捷方法:</p><ul><li>极限编程(XP)。基础和价值观是<strong>交流、朴素、反馈和勇气</strong>，即任何一个软件项目都可以从4个方面入手进行改善：**（1）加强交流（2）从简单做起（3）寻求反馈（4）勇于实事求是。<ul><li>XP 是一种<strong>近螺旋式</strong>的开发方法，它将<strong>复杂的开发过程分解为一个个相对比较简单的小周期</strong>：通过积极的交流、反馈以及其他一系列的方法，开发人员和客户可以非常清楚开发进度、变化待解决的问题和潜在的困难等，并根据实际情况及时地调整开发过程。</li><li>XP提倡<strong>测试先行</strong>，为了将以后出现bug的几率降到最低。</li></ul></li><li>水晶系列方法。与XP方法一样，都有<strong>以人为中心</strong>的理念，但在实践上有所不同。其目的是发展一种提倡“机动性的”方法，包含具有共性的核心元素，<strong>每个都含有独特的角色、过程模式工作产品和实践</strong>。</li><li>并列争球法(Scrum)。是一种迭代的增量化过程，把<strong>每段时间(如30天)一次的选代称为(Sprint)</strong>，并<strong>按需求的优先级别</strong>来实现产品，多个自组织和自治的小组并行地递增”冲刺”实现产品。</li><li>特性驱动开发方法(FDD)：是一个<strong>迭代</strong>的开发模型。<ul><li>有效的软件开发需要3个要素：<strong>人、过程和技术</strong>。</li><li>有效的软件开发有5个核心过程：<strong>开发整体对象模型、构造特征列表、计划特征开发、特征设计和特征构建</strong><br>补充开发方法：<br>【<br>(1) XP (Extreme Programming，极限编程)在所有的敏捷型方法中，XP是最引人瞩目的。它源于Smalltalk圈子，特别是Kent Beck和Ward Cunningham在20世纪80年代末的密切合作。XP在一些对费用控制严格的公司中的使用，已经被证明是非常有效的。</li></ul></li></ul><p>(2) Cockburn的水晶系列方法，水晶系列方法是由Alistair Cockburn提出的。它与XP方法一样，都有以人为中心的理念，但在实践上有所不同。Alistair考虑到人们一般很难严格遵循一个纪律约束很强的过程，因此，与XP的高度纪律性不同，Alistair探索了用最少纪律约束而仍能成功的方法，从而在产出效率与易于运作上达到一种平衡。也就是说，虽然水晶系列不如XP那样的产出效率，但会有更多的人能够接受并遵循它。</p><p>(3) 开放式源码，这里提到的开放式源码指的是开放源码界所用的一种运作方式。开放式源码项目有一个特别之处，就是程序开发人员在地域上分布很广，这使得它和其他敏捷方法不同，因为一般的敏捷方法都强调项目组成员在同一地点工作。开放源码的一个突出特点就是查错排障(debug)的高度并行性，任何人发现了错误都可将改正源码的”补丁”文件发给维护者。然后由维护者将这些”补丁”或是新增的代码并入源码库。</p><p>(4) SCRUM。SCRUM己经出现很久了，像前面所论及的方法一样，该方法强调这样一个事实，即明确定义了的可重复的方法过程只限于在明确定义了的可重复的环境中，为明确定义了的可重复的人员所用，去解决明确定义了的可重复的问题。</p><p>(5) Coad的功用驱动开发方法(FDD-Feature Driven Development)FDD是由Jeff De Luca和大师Peter Coad提出来的。像其他方法一样，它致力于短时的迭代阶段和可见可用的功能。在FDD中，一个迭代周期一般是两周。</p><p>在FDD中，编程开发人员分成两类：首席程序员和”类”程序员(class owner)。首席程序员是最富有经验的开发人员，他们是项目的协调者、设计者和指导者，而”类”程序员则主要做源码编写。</p><p>(6) ASD方法，ASD (Adaptive Software Development)方法由Jim Highsmith提出，其核心是三个非线性的、重叠的开发阶段：猜测、合作与学习。<br>】</p><h2 id="形式化方法模型"><a href="#形式化方法模型" class="headerlink" title="形式化方法模型"></a>形式化方法模型</h2><p>建立在<strong>严格数学基础上</strong>的一种软件开发方法，主要活动是生成计算机软件形式化的数学规格说明。</p><h2 id="喷泉模型"><a href="#喷泉模型" class="headerlink" title="喷泉模型"></a>喷泉模型</h2><p>是一种<strong>以用户需求为动力，以对象作为驱动</strong>的模型，适合于<strong>面向对象</strong>的开发方法。使开发过程具有迭代性和无间隙性。</p><h2 id="增量模型"><a href="#增量模型" class="headerlink" title="增量模型"></a>增量模型</h2><p>增量模型：首先<strong>开发核心模块功能</strong>，而后与用户确认，之后再开发次核心模块的功能，即每次开发一部分功能，并与用户需求确认，最终完成项目开发，<strong>优先级最高的服务最先交付</strong>。<br>特点：但由于并不是从系统整体角度规划各个模块，因此<strong>不利于模块划分</strong><br>难点在于<strong>如何将客户需求划分为多个增量</strong>。与原型不用的是<strong>增量模型的每一次增量版本都可作为独立可操作的作品</strong>，而<em>原型的构造一般是为了演示</em>。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E5%A2%9E%E9%87%8F%E6%A8%A1%E5%9E%8B.png" alt="增量模型"></p>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-计算机网络</title>
    <link href="/2025/07/25/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    <url>/2025/07/25/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="网络功能和分类"><a href="#网络功能和分类" class="headerlink" title="网络功能和分类"></a>网络功能和分类</h1><p>计算机网络是计算机技术与通信技术相结合的产物，它体现了远程通信、远程信息处理和资源共享<br>功能：<strong>数据通信、资源共享、管理集中化、实现分布式处理、负载均衡</strong></p><ul><li><strong>性能</strong>指标：速率、带宽（频带宽度或传输线路速率）、吞吐量、时延、往返时间、利用率</li><li><strong>非性能</strong>指标：费用、质量、标准化、可靠性、可扩展性、可升级性、易管理性和可维护性。</li></ul><p>按<strong>分布范围</strong>划分：<br><img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/%E5%88%86%E5%B8%83%E8%8C%83%E5%9B%B4%E5%92%8C%E6%8B%93%E6%89%91%E7%BB%93%E6%9E%84.png" alt="分布范围和拓扑结构"><br>LAN（Local）</p><p>按<strong>拓扑结构划</strong>分</p><ul><li>总线型（利用率低、干扰大、价格低）</li><li>星型（交换机形成的局域网、中央单元负荷大）</li><li>环型（流动方向固定、效率低扩充难）</li><li>树型（总线型的扩充、分级结构）</li><li>分布式（任意节点连接、管理难成本高）<br><img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/%E7%BD%91%E7%BB%9C%E5%88%86%E7%B1%BB.png" alt="网络分类"></li></ul><h1 id="通信技术"><a href="#通信技术" class="headerlink" title="通信技术"></a>通信技术</h1><p>计算机网络是<strong>利用通信技术将数据从一个结点传送到另一个结点的过程</strong>。<br>通信技术是计算机网络的<strong>基础</strong><br>信道：</p><ul><li>物理信道：由<strong>传输介质</strong>和<strong>设备</strong>组成，根据传输介质不同，分为：<ul><li>无线信道：</li><li>有线信道：</li></ul></li><li>逻辑信道：指在数据发送端和接收端之间存在的一条<strong>虚拟线路</strong>，可以是有连接的或无连接的。<strong>逻辑信道以物理信道为载体</strong>。</li></ul><p>发信机进行的信号处理包括：信源编码、信道编码、交织、脉冲成形和调制。<br>收信机进行的信号处理包括：解调、采样判决、去交织、信道译码和信道译码<br>如果<strong>同时传递多路数据就需要复用技术和多址技术</strong></p><ul><li>复用技术：指在一条信道上同时传输多路数据的技术，如TDM时分复用、FDM频分复用和CDM码分复用等</li><li>多址技术：指在一条线上同时传输多个用户数据的技术，在接收端把多个用户的数据分离（TDMA时分多址、FDMA频分多址和CDMA码分多址）</li></ul><p>新一代移动通信技术，5G特征体现在以下方面：</p><ol><li>基于OFDM优化的波形和多址接入</li><li>实现可扩展的OFDM间隔参数配直</li><li>OFDM加窗提高多路传输效率</li><li>灵活框架设计</li><li>大规模MIMO：最多256根天线</li><li>毫米波：频率大于24GHz以上的频率</li><li>频谱共享</li><li>先进的信道编码设计</li></ol><p>5G的主要特征：<strong>服务化架构</strong>、<strong>网络切片</strong></p><h1 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h1><p><img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/OSI%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B.png" alt="OSI七层模型"></p><p>数据链路层：–局域网，MAC<br>网络层：IP地址<br>传输层：提供端–端 服务，PORT</p><h1 id="局域网和广域网协议"><a href="#局域网和广域网协议" class="headerlink" title="局域网和广域网协议"></a>局域网和广域网协议</h1><h2 id="有线局域网"><a href="#有线局域网" class="headerlink" title="有线局域网"></a>有线局域网</h2><p>典型代表：以太网，【数据链路层】<br>以太网是一种计算机局域网组网技术<br>以太网规范<em><strong>IEEE 802.3</strong></em>是重要的局域网协议，包括：<br><img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/%E4%BB%A5%E5%A4%AA%E7%BD%91%E8%A7%84%E8%8C%83.png" alt="以太网规范"></p><h2 id="无线局域网"><a href="#无线局域网" class="headerlink" title="无线局域网"></a>无线局域网</h2><p>【数据链路层】<br>无线局域网那个WLAN技术标准：<em><strong>IEEE 802.11</strong></em><br>通常使用的拓扑结构：</p><ul><li>点对点型、</li><li>HUB型：类似于星型</li><li>全分布型：类似于网状</li></ul><h2 id="广域网"><a href="#广域网" class="headerlink" title="广域网"></a>广域网</h2><p>广域网相关技术：</p><ul><li>同步光网络（SONET，利用光纤进行数字化信息通信）</li><li>数字数据网（DDN，利用数字信道提高半永久型链接电路以传输数据）</li><li>帧中继（FR，数据包交换技术）</li><li>异步传输技术（ATM，以信元为基础的面向连接的一种分组交换和复用技术）</li></ul><p>具有以下特点：</p><ol><li>提供<strong>面向数据通信的服务</strong>，支持用户使用计算机进行远距离信息交换</li><li><strong>覆盖范围广，通信的距离远</strong>，广域网没有固定拓扑结构</li><li>由<strong>电信部门或公司负责组建</strong>、管理和维护，并向全设备提供面向通信的有偿服务等</li></ol><p>广域网可分为：<strong>公共传输网络</strong>、<strong>专用传输网络</strong>和<strong>无线传输网络</strong></p><ol><li>公共传输网络：可分电路交换网络和分组交换网络</li><li>专用传输网络：主要是数字数据网DDN</li><li>无线传输网络：主要是移动无线网，GSM\TDSCDMA等</li></ol><h2 id="城域网"><a href="#城域网" class="headerlink" title="城域网"></a>城域网</h2><p>单个城市范围内所建立的计算机通信网，简称<strong>MAN</strong>。<br>分3个层次：由上而下</p><ol><li>核心层：提供高带宽的业务承载和传输</li><li>汇聚层：给业务接入结点提供用户业务数据的汇聚和分发处理</li><li>接入层：利用多种接入技术，进行带宽和业务分配，实现用户的接入</li></ol><h1 id="TCP-IP协议"><a href="#TCP-IP协议" class="headerlink" title="TCP&#x2F;IP协议"></a>TCP&#x2F;IP协议</h1><p>网络协议三要素：</p><ul><li>语法：规定传输数据的格式</li><li>语义：规定索要完成的功能</li><li>时序：规定各种操作的条件、顺序关系等<br><img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/TCP-IP%E5%8D%8F%E8%AE%AE.png" alt="TCP-IP协议"><br><strong>四层协议</strong>：</li></ul><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><ul><li>IP：网络层最重要的核心协议，在源地址和目的地址之间传送数据报，无连接、不可靠。</li><li>ICMP：因特网控制报文协议，用于在IP主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否可达、路由是否可用等网络本身的消息。</li><li>ARP和RARP：地址解析协议。<ul><li>ARP是将IP地址转换为物理地址</li><li>RARP是将物理地址转换为IP地址。</li></ul></li><li>IGMP：网络组管理协议，允许因特网中的计算机参加多播，是计算机用做向相邻多目路由器报告多目组成员的协议，支持组播。</li></ul><h2 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h2><ul><li>TCP：整个TCP&#x2F;IP协议族中最重要的协议之一，在IP协议提供的不可靠数据数据基础上，采用<br>了重发技术，为应用程序提供了一个<strong>可靠的、面向连接的、全双工</strong>的数据传输服务。一般用于传<br>输数据量比较少，且对可靠性要求高的场合。</li><li>UDP：是一种<strong>不可靠、无连接</strong>的协议，有助于提高传输速率，一般用于传输数据量大，对可靠<br>性要求不高，但要求速度快的场合。</li></ul><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><p>基于TCP的FTP、HTTP等都是可靠传输。基于UDP的DHCP、DNS等都是不可靠传输。</p><ul><li>FTP：可靠的文件传输协议，用于因特网上的控制文件的双向传输。</li><li>HTTP：超文本传输协议，用于从WWW服务器传输超文本到本地浏览器的传输协议。使用SSL加密后的安全网页协议为HTTPS</li><li>SMTP和POP3：简单邮件传输协议，是一组用于由源地址到目的地址传送邮件的规则，邮件报文采用ASCI I格式表示。</li><li>Telnet：远程连接协议，是因特网远程登录服务的标准协议和主要方式。</li></ul><hr><ul><li>TFTP：不可靠的、开销不大的小文件传输协议。</li><li>SNMP：简单网络管理协议，由一组网络管理的标准协议，包含一个应用层协议、数据库模型和一组资源对象。该协议能够支持网络管理系统，泳衣监测连接到网络上的设备是否有任何引起管理师行关注的情况。</li><li>DHCP：动态主机配置协议，基于UDP,基于C&#x2F;S模型，为主机动态分配IP地址，有三种方式：<strong>固定分配、动态分配、自动分配</strong>。</li><li>DNS：域名解析协议，通过域名解析出IP地址。<br><strong>协议和端口</strong><br><img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/%E5%8D%8F%E8%AE%AE%E5%92%8C%E7%AB%AF%E5%8F%A3.png" alt="协议和端口"></li></ul><h1 id="网络技术"><a href="#网络技术" class="headerlink" title="网络技术"></a>网络技术</h1><h2 id="交换技术"><a href="#交换技术" class="headerlink" title="交换技术"></a>交换技术</h2><p>数据在网络中<strong>转发</strong>离不开<strong>交换机</strong>。计算机通常通过交换机接入网络<br>交换机功能：</p><ul><li>集线功能。提供大量可供线缆连接的端口达到部署星状拓扑网络的目的。</li><li>中继功能。在转发帧时重新产生不失真的电信号。 </li><li>桥接功能。在内置的端口上使用相同的转发和过滤逻辑。</li><li>隔离冲突域功能。将部署好的局域网分为多个冲突域，而每个冲突域都有自己独立的带宽，以提 高交换机整体宽带利用效率</li></ul><p>交换机需要实现的功能：</p><ol><li>转发路径学习。根据收到数据帧中的源MAC地址建立该地址同交换机端口的映射，写入MAC 地址表中。 </li><li>数据转发。如果交换机根据数据帧中的目的MAC地址在建立好的MAC地址表中查询到了， 就向对应端口进行转发。 </li><li>数据泛洪。如果数据帧中的目的MAC地址不在MAC地址表中，则向所有端口转发，也就是泛洪。广播帧和组播帧向所有端口(不包括源端口)进行转发。 </li><li>链路地址更新。MAC地址表会每隔一定时间(如300s )更新一次。</li></ol><h2 id="路由技术"><a href="#路由技术" class="headerlink" title="路由技术"></a>路由技术</h2><p>路由功能由路由器来提供，具体包括： </p><ol><li>异种网络互连，比如具有异种子网协议的网络互连</li><li>子网协议转换，不同子网间包括局域网和广域网之间的协议转换</li><li>数据路由，即将数据从一个网络依据路由规则转发到另一个网络</li><li>速率适配，利用缓存和流控协议进行适配</li><li>隔离网络，防止广播风暴，实现<strong>防火墙</strong></li><li>报文分片和重组，超过接口的MTU报文被分片，到达目的地之后的报文被重组</li><li>备份、流量控制，如主备线路的切换和复杂流量控制等。</li></ol><p>路由器工作在<strong>OSI七层协议</strong>中的<strong>第3层，即网络层</strong>。主要任务是接收来源于一个网络接口的数据包，通常根据此数据包的目地址决定待转发的下一个地址（即下一跳地址）。<br>路由器中维持着数据转发所需的路由表，所有数据包的发送或转发都通过查找路由表来实现。这个路由表可以静态配置，也可以通过动态路由协议自动生成。<br>一般来说，路由协议可分为<strong>内部网关协议</strong>（IGP）和<strong>外部网关协议</strong>（EGP）两类。<br>网络建设工程可分为<strong>网络规划、网络设计和网络实施</strong>三个环节。</p><h2 id="通信方式和交换方式"><a href="#通信方式和交换方式" class="headerlink" title="通信方式和交换方式"></a>通信方式和交换方式</h2><h3 id="通信方向"><a href="#通信方向" class="headerlink" title="通信方向"></a>通信方向</h3><p>数据通信是指发送方发送数据到接收方，这个传输过程可以分类如下:</p><ul><li>单工：只能由设备A发给设备B,即数据流只能单向流动。</li><li>半双工：设备A和设备B可以互相通信，但是同一时刻数据流只能单向流动。</li><li>全双工：设备A和设备B在任意时刻都能互相通信。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F.png" alt="通信方式"></li></ul><h3 id="同步方式"><a href="#同步方式" class="headerlink" title="同步方式"></a>同步方式</h3><ul><li>异步传输：发送方每发送一个字符，需要约定一个起始位和停止位插入到字符的起始和结尾处,这样当接收方接收到该字符时能够识别，但是这样会造成资源浪费，传输效率降低。</li><li>同步传输：以数据块为单位进行传输，当发送方要发送数据时，先发送一个同步帧，接收方收到后做好接收准备，开始接收数据块，结束后又会有结束帧确认，这样一次传输一个数据块，效率高。</li><li>串行传输：只有<strong>一根数据线</strong>，数据只能1bit挨个排队传送，适合低速设备、远距离的传送，一般用于<strong>广域网</strong>中。</li><li>并行传输：有<strong>多根数据线</strong>，可以同时传输多个bit数据，适合高速设备的传送，常用于<strong>计算机内部各硬件模块</strong>之间。</li></ul><h3 id="交换方式"><a href="#交换方式" class="headerlink" title="交换方式"></a>交换方式</h3><ul><li>电路交换：通信一方进行呼叫，另一方接收后，在二者之间会<strong>建立一个专用电路</strong>，特点为<strong>面向连接、实时性高、链路利用率低</strong>，一般用于<em>语音视频通信</em>。</li><li>报文交换：<strong>以报文为单位，存储转发模式</strong>，接收到数据后先存储，进行差错校验，没有错误则转发，有错误则丢弃，因此<strong>会有延时，但可靠性高，是面向无连接的</strong>。</li><li>分组交换：<strong>以分组为单位，也是存储转发模式</strong>，因为分组的长度比报文小，所以时延小于报文交换，又可分为三种方式：<ul><li>数据报：是现在主流的交换方式，<strong>各个分组携带地址信息，自由的选择不同的路由路径</strong>传送到接收方，接收方接收到分组后再根据地址信息重新组装成原数据，是<strong>面向无连接的，但是不可靠的</strong></li><li>虚电路：发送方发送一个分组，接收方收到后<strong>二者之间就建立了一个虚拟的通信线路</strong>，二者之间的分组数据交互都通过这条线路传送，在空闲的时候这条线路也可以传输其他数据，是<strong>面向连接的，可靠的</strong>。</li><li>信元交换：<strong>异步传输模式ATM采用的交换方式</strong>，本质是按照虚电路方式进行转发，只不过<strong>信元是固定长度的分组</strong>，共53B，其中5B为头部，48B为数据域，也是<strong>面向连接的，可靠的</strong>。</li></ul></li></ul><h1 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h1><p>机器中存放的<strong>IP地址是32位的二进制代码</strong>，<strong>每隔8位</strong>插入一个空格，可提高可读性，为了便于理解和设置，一般会采用<strong>点分十进制</strong>方法来表示：<br>将32位二进制代码<strong>每8位二进制转换成十进制，就变成了4个十进制数</strong>，而后在每个十进制数间隔中插入.，如下所示，最终为128. 11.3.31：<br><img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/IP%E8%A1%A8%E7%A4%BA.png" alt="IP表示"><br>因为每个十进制数都是由8个二进制数转换而来，因此<strong>每个十进制数的取值范围为0-255</strong>（掌握二进制转十进制的快速计算方法，牢记2的幕指数值，实现快速转换）。</p><h2 id="分类IP地址"><a href="#分类IP地址" class="headerlink" title="分类IP地址"></a>分类IP地址</h2><p>IP地址分四段，每段八位，共32位二进制数组成。<br>在逻辑上，这32位IP地址分为<strong>网络号和主机号</strong>，依据网络号位数的不同，可以将IP地址分为以下几类：<br><img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/%E5%88%86%E7%B1%BBIP%E5%9C%B0%E5%9D%80.png" alt="分类IP地址"></p><h2 id="无分类编址"><a href="#无分类编址" class="headerlink" title="无分类编址"></a>无分类编址</h2><p>即不按照A、B、C类规则，自动规定网络号，无分类编址格式为：IP地址&#x2F;网络号，<br>示例：128.168.0.11&#x2F;20表示的IP地址为128.168.0.11，其网络号占20位，因此主机号占32-20&#x3D;12位，也可以划分子网。</p><h2 id="特殊IP地址"><a href="#特殊IP地址" class="headerlink" title="特殊IP地址"></a>特殊IP地址</h2><ul><li>公有地址：<strong>通过它可以直接访问因特网。是全网唯一的IP地址</strong></li><li>私有地址：属于<strong>非注册地址，专门为组织机构内部使用</strong>。不能直接访问英特网。<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/%E7%A7%81%E6%9C%89%E5%9C%B0%E5%9D%80.png" alt="私有地址"><br>其他特殊地址如下：<br><img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/%E5%85%B6%E4%BB%96%E7%89%B9%E6%AE%8A%E5%9C%B0%E5%9D%80.png" alt="其他特殊地址"></li></ul><h2 id="子网划分"><a href="#子网划分" class="headerlink" title="子网划分"></a>子网划分</h2><p>子网划分：一般公司在申请网络时，会直接获得一个范围很大的网络，如一个B类地址，因为<strong>主机数之间相差的太大了，不利于分配</strong>，我们一般采用<strong>子网划分的方法来划分网络</strong>，即<strong>自定义网络号位数</strong>，就能自定义主机号位数，就能<strong>根据主机个数来划分出最适合的方案，不会造成资源的浪费</strong>。<br>因此就有子网的概念，一般的IP地址按标准划分为ABC类后，可以进行再步的划分，将<strong>主机号拿出几位作为子网号</strong>，就可以划分出多个子网，此时IP地址组成为：<strong>网络号+子网号+主机号</strong>。<br>【<strong>网络号和子网号都为1，主机号都为0，这样的地址为子网掩码</strong>】<br>要注意的是：子网号可以为全0和全1，<strong>主机号不能为全0或全1</strong>，因此，主机数需要-2，而子网数不用。<br>还可以<strong>聚合网络为超网</strong>，就是划分子网的逆过程，将<strong>网络号取出几位作为主机号</strong>，此时，这个网络内的主机数量就变多了，成为一个更大的网络。</p><h1 id="IPV6"><a href="#IPV6" class="headerlink" title="IPV6"></a>IPV6</h1><h2 id="概述："><a href="#概述：" class="headerlink" title="概述："></a>概述：</h2><p>主要是为了解决IPv4地址数不够用的情况而提出的设计方案，<br>IPv6具有以下特性：</p><ul><li>IPv6地址长度为128位，地址空间增大了2~96倍；</li><li>灵活的IP报文头部格式，使用一系列固定格式的扩展头部取代了IPv4中可变长度的选项字段。IPv6中选项部分的出现方式也有所变化，使路由器可以简单撸过选项而不做任何处理，加快了报文处理速度；</li><li>IPv6简化了报文头部格式，加快报文转发，提高了吞吐量；</li><li>提高安全性，身份认证和隐私权是IPv6的关键特性；</li><li>支持更多的服务类型:</li><li>允许协议继续演变，增加新的功能，使之适应未来技术的发展；</li></ul><p>IPv4和IPv6的过渡期间，主要采用三种基本技术：</p><ol><li>双协议栈：主机同时运行IPv4和IPv6两套协议栈，同时支持两套协议，一般来说IPv4和IPv6地址之间存在某种转换关系，如IPv6的低32位可以直接转换为IPv4地址，实现互相通信。</li><li>隧道技术：这种机制用来在IPv4网络之上建立一条能够传输IPv6数据报的隧道，例如可以将IPv6数据报当做IPv4数据报的数据部分加以封装，只需要加一个IPv4的首部，就能在IPv4网络中传输IPv6报文。</li><li>翻译技术：利用一台专门的翻译设备（如转换网关），在纯IPv4和纯IPv6网络之间转换IP报头的地址，同时根据协议不同对分组做相应的语义翻译，从而使纯IPv4和纯IPv6站点之间能够透明通信。</li></ol><h1 id="磁盘冗余阵列"><a href="#磁盘冗余阵列" class="headerlink" title="磁盘冗余阵列"></a>磁盘冗余阵列</h1><p><strong>RAID即磁盘冗余阵列技术</strong>，将数据分散存储在不同磁盘中，可并行读取，可冗余存储，提高磁盘访问速度，保障数据安全性。</p><ul><li><p>*<strong>RAID0</strong>将数据分散的存储在不同磁盘中，磁盘利用率100%，访问速度最快，但是没有提供冗余和错误修复技术；</p></li><li><p>*<strong>RAID1</strong>在成对的独立磁盘上产生互为备份的数据，增加存储可靠性，可以纠错，但磁盘利用率只有50%；</p></li><li><p><strong>RAID2</strong>将数据条块化的分布于不同硬盘上，并使用海明码校验；</p></li><li><p><strong>RAID3</strong>使用奇偶校验，并用单块磁盘存储奇偶校验信息(可靠性低于RAID5)</p></li><li><p><strong>RAID5</strong>在所有磁盘上交叉的存储数据及奇偶校验信息(所有校验信息存储总量为一个磁盘容量但分布式存储在不同的磁盘上)，读&#x2F;写指针可同时操作；<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%971.png" alt="磁盘阵列1"><br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%972.png" alt="磁盘阵列2"></p></li><li><p>RAID0+1(是两个RAID0，若一个磁盘损坏，则当前RAID0无法工作，即有一半的磁盘无法工作)；</p></li><li><p>RAID1+0(是两个RAID1，不允许同一组中的两个磁盘同时损坏)与RAID1原理类似，磁盘利用率都只有50%，但安全性更高。<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/RAID+X.png" alt="RAID+X"><br>【参考：<a href="https://blog.csdn.net/lebeiweilanhu/article/details/145928684">Raid0、Raid1、Raid5、Raid6、Raid10的区别-CSDN博客</a>】</p></li></ul><h1 id="网络存储技术"><a href="#网络存储技术" class="headerlink" title="网络存储技术"></a>网络存储技术</h1><h2 id="直接附加存储-DAS"><a href="#直接附加存储-DAS" class="headerlink" title="直接附加存储(DAS)"></a>直接附加存储(DAS)</h2><p>直接附加存储(DAS)（Direct）是指将存储设备通过SCSI接口直接连接到一台服务器上使用，其本身是硬件的堆叠，存储操作依赖于服务器，不带有任何存储操作系统。<br>存在问题：在传递距离、连接数量、传输速率等方面都受到限制。</p><ul><li>容量难以扩展升级</li><li>数据处理和传输能力降低</li><li>服务器异常会波及存储器</li></ul><h2 id="网络附加存储-NAS"><a href="#网络附加存储-NAS" class="headerlink" title="网络附加存储(NAS)"></a>网络附加存储(NAS)</h2><p>网络附加存储(NAS)（Net）通过网络接口与网络直接相连，由用户通过网络访问，有独立的存储系统。<br>NAS存储设备类似于一个专用的文件服务器，去掉了通用服务器大多数计算功能，而仅仅提供文件系统功能。<br>以数据为中心，将存储设备与服务器分离，其存储设备在功能上完全独立于网络中的主服务器。<br>客户机与存储设备之间的数据访问不再需要文件服务器的干预，同时它允许客户机与存储设备之间进行直接的数据访问，所以不仅响应速度快，而且数据传输速率也很高。<br>NAS的性能特点是</p><ul><li>进行小文件级的共享存取；</li><li>支持即插即用；</li><li>可以很经济的解决存储容量不足的问题，但难以获得满意的性能。</li></ul><h2 id="存储区域网-SAN"><a href="#存储区域网-SAN" class="headerlink" title="存储区域网(SAN)"></a>存储区域网(SAN)</h2><p>SAN是通过专用交换机将磁盘阵列与服务器连接起来的高速专用子网。<br>它没有采用文件共享存取方式，而是采用块(block)级别存储。<br>SAN是通过专用高速网将一个或多个网络存储设备和服务器连接起来的专用存储系统，其最大特点是将存储设备从传统的以太网中分离了出来，成为独立的存储区域网络SAN 的系统结构。<br>根据数据传输过程采用的协议，其技术划分为FCSAN(光纤通道)、IPSAN(IP网络)和IBSAN(无线带宽)技术。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E7%BD%91%E7%BB%9C/NAS%E5%92%8CSAN%E5%AD%98%E5%82%A8%E6%9E%B6%E6%9E%84.png" alt="NAS和SAN存储架构"></p>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-嵌入式技术</title>
    <link href="/2025/07/25/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E5%B5%8C%E5%85%A5%E5%BC%8F%E6%8A%80%E6%9C%AF/"/>
    <url>/2025/07/25/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E5%B5%8C%E5%85%A5%E5%BC%8F%E6%8A%80%E6%9C%AF/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-数据库系统3-新技术</title>
    <link href="/2025/07/22/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F3-%E6%96%B0%E6%8A%80%E6%9C%AF/"/>
    <url>/2025/07/22/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F3-%E6%96%B0%E6%8A%80%E6%9C%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="数据库安全"><a href="#数据库安全" class="headerlink" title="数据库安全"></a>数据库安全</h1><p><img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E5%85%A8.png" alt="数据库安全"></p><ul><li>静态转存：冷备份。转存期间不允许对数据库进行任何存取、修改操作<ul><li>优点：非常快速的备份方法、容易归档（直接物理复制操作）</li><li>缺点：只能提供到某一时间点上的恢复，不能做其他工作，不能按表或按用户恢复</li></ul></li><li>动态转存：热备份。在转储期间允许对数据库进行存取、修改操作，因此，转储和用户事务可并发执行；<ul><li>优点：可在表空间或数据库文件级备份，数据库仍可使用，可达到秒级恢复；</li><li>缺点：不能出错，否则后果严重，若热备份不成功，所得结果几乎全部失效。</li></ul></li></ul><hr><ul><li>完全备份：备份所有数据</li><li>差量备份：仅备份上一次完全备份之后变化的数据</li><li>增量备份：备份上一次备份之后变化的数据</li></ul><hr><ul><li>日志文件： 在事务处理过程中，DBMS把事务开始、事务结束以及对数据库的插入、删除和修改的每一次操作写入日志文件。一旦发生故障，DBMS的恢复子系统利用日志文件撤销事务对数据库的改变，回退到事务的初始状态</li></ul><h1 id="分布式数据库"><a href="#分布式数据库" class="headerlink" title="分布式数据库"></a>分布式数据库</h1><p>局部数据库位于不同的物理位置，使用一个全局DBMS将所有局部数据库联网管理，这就是分布式数据库。<br><strong>分片模式</strong></p><ul><li>水平分片：将表中<strong>水平的记录</strong>分别存放在不同的地方</li><li>垂直分片：将表中<strong>垂直的列植</strong>分别存放在不同的地方</li></ul><p><strong>分布透明性</strong></p><ul><li>分片透明性：用户和应用程序<strong>不需要知道逻辑上访问的表具体是如何分块存储的</strong></li><li>位置透明性：应用程序<strong>不关心数据存户物理位置的改变</strong></li><li>逻辑透明性：用户或应用程序<strong>无需知道局部使用的是哪种数据模型</strong></li><li>复制透明性：用户或应用程序<strong>不关心复制的数据从何而来</strong><br><img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93.png" alt="分布式数据库"></li></ul><h1 id="数据仓库技术"><a href="#数据仓库技术" class="headerlink" title="数据仓库技术"></a>数据仓库技术</h1><p>数据仓库是一个<strong>面向主题的、集成的、非易失的、且随时间变化</strong>的数据集合，用于支持管理决策。</p><ul><li><strong>面向主题</strong>：按照一定的主题域进行组织的。</li><li><strong>集成的</strong>：数据仓库中的数据实在对原有分散的数据库数据抽取、清理的基础上经过系统加工、汇总和整理得到的，必须消除源数据中的不一致性，以保证数据仓库内的信息是关于整个企业的一致的全局信息</li><li><strong>相对稳定的</strong>：数据仓库的数据主要供企业决策分析之用，所涉及的数据操作主要是数据查询，一旦某个数据进入数据仓库以后，一般情况将被长期保留，也就是数据仓库中一般有大量的查询操作，但<strong>修改和删除操作很少</strong>，通常只需要定期的加载、刷新。</li><li><strong>反映历史变化</strong>：数据仓库中的数据通常包含历史信息，系统记录了企业从过去某一时点（如开始应用数据仓库的时点）到目前各个阶段的额信息，通过这些信息，可以对企业的发展历程和未来趋势做出定量分析和预测</li></ul><h2 id="体系机构"><a href="#体系机构" class="headerlink" title="体系机构"></a>体系机构</h2><p>包括四个层次</p><ol><li><strong>数据源</strong>：数据仓库系统的基础，是整个系统的数据源泉。</li><li><strong>数据的存储与管理</strong>：整个数据仓库系统的核心。</li><li><strong>OLAP（联机分析处理）服务器</strong>：对分析需要的的数据进行有效集成，按多维模型组织，以便进行多角度、多层次的分析，并发现趋势</li><li><strong>前端工具</strong>：包括各种报表工具、查询工具、数据分析工具、数据挖掘工具一级各种基于数据仓库和数据集市的应用开发工具<br><img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84.png" alt="数据仓库体系结构"></li></ol><h2 id="商业智能（BI）"><a href="#商业智能（BI）" class="headerlink" title="商业智能（BI）"></a>商业智能（BI）</h2><p>BI系统主要包括<strong>数据预处理、建立数据仓库、数据分析和数据展现</strong>四个主要阶段。</p><ul><li>数据预处理：第一步，包括数据的抽取（Extraction）、转换（Transformation）和加载（Load）三个过程（ETL过程）</li><li>建立数据仓库：处理海量数据的基础</li><li>数据分析：体现系统智能的关键，采用<strong>联机分析处理</strong>（OLAP） 和<strong>数据挖掘</strong>两大技术。<ul><li>联机分析处理：步进进行数据汇聚&#x2F;聚集，还提供切片、切块、下钻、上卷和旋转等数据分析功能，用户可以方便地对海量数据进行多为分析。</li><li>数据挖掘：目标则是挖掘数据背后隐藏的知识，通过关联分析、聚类和分类等方法建立分析模型，预测企业未来发展趋势和将要面临的问题；</li></ul></li><li>在海量数据和分析手段增多的情况下，数据展现主要保障系统分析结果的可视化</li></ul><h1 id="反规范化技术"><a href="#反规范化技术" class="headerlink" title="反规范化技术"></a>反规范化技术</h1><p>规范化设计后，数据库设计者希望<strong>牺牲部分规范化来提高性能</strong><br>益处：<strong>降低连接操作的需求、降低外码和索引的数目，还可能减少表的数目，能够提高查询效率</strong>；<br>问题：数据的<strong>重复存储</strong>，浪费磁盘空间；可能出现数据的完整性问题，为了保障数据的一致性，增加了数据维护的复杂性，会<strong>降低修改速度</strong>；<br>具体方法：</p><ol><li>增加冗余列：在<strong>多个表中保留相同的列</strong>，通过增加数据冗余减少或避免查询时的连接操作；</li><li>增加派生列：增加由<strong>本表或其他表中数据计算生成的列</strong>，减少查询时连接操作并避免计算或使用集合函数</li><li>重新组表：如果许多用户需要查看两个表连接出来的结果数据，则吧这<strong>两个表重新组成一个表来减少连接而提高性能</strong>。</li><li>水平分割表：根据一列或多列数据的值，把<strong>数据放到多个独立的表中</strong>，主要用于表数据规模很大、表中数据相对独立或数据需要存放到多个介质上时使用。</li><li>垂直分割表：对表进行分割，将<strong>主键与部分列放到一个表中</strong>，主键与其他列放到另一个表中，在查询时减少I&#x2F;O次数</li></ol><h1 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h1><p>特点：</p><ul><li>大量化</li><li>多样化</li><li>价值密度低</li><li>快速化<br>大数据和传统数据的比较如下：<br><img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%92%8C%E4%BC%A0%E7%BB%9F%E6%95%B0%E6%8D%AE%E5%8C%BA%E5%88%AB.png" alt="大数据和传统数据区别"></li></ul><p>要处理大数据，一般使用集成平台，成为大数据处理系统，特征有：</p><ul><li>高度可扩展性</li><li>高性能</li><li>高度容错</li><li>支持异构环境</li><li>较短的分析延迟</li><li>易用且开放的接口</li><li>较低成本</li><li>向下兼容性</li></ul><h1 id="SQL语言"><a href="#SQL语言" class="headerlink" title="SQL语言"></a>SQL语言</h1><p>略</p>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-数据库系统2-规范化和并发控制</title>
    <link href="/2025/07/22/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F2-%E8%A7%84%E8%8C%83%E5%8C%96%E5%92%8C%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6/"/>
    <url>/2025/07/22/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F2-%E8%A7%84%E8%8C%83%E5%8C%96%E5%92%8C%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="函数依赖"><a href="#函数依赖" class="headerlink" title="函数依赖"></a>函数依赖</h1><p>给定一个X，能唯一确定一个Y，就称X确定Y，或者说Y依赖于X，例如Y&#x3D;X* X函数<br>两个规则：</p><ul><li>完全函数依赖：</li><li>部分函数依赖：A可确定C，（A，B）也可确定C，<strong>（A，B）中的一部分（即A）可以确定C</strong>，成为部分函数依赖</li><li>传递函数依赖：当A和B不等价时，<strong>A可确定B，B可确定C，则A可确定C</strong>，是传递函数依赖；若A和B等价，则不存在传递，直接可确定C。<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E9%83%A8%E5%88%86_%E4%BC%A0%E9%80%92%E5%87%BD%E6%95%B0%E4%BE%9D%E8%B5%96.png" alt="部分_传递函数依赖"></li></ul><p><strong>公理系统</strong><br>设关系模式R&lt;U，F&gt;，U是关系模式R的属性全集，F是关系模式R的一个函数依赖集。<br>对于R&lt;U，F&gt;来说有以下：</p><ul><li>自反律：若Y⊆X⊆U，则X→Y为F所逻辑蕴含</li><li>增广律：若X→Y为F所逻辑蕴含，且Z⊆U，则XZ→YZ为F所逻辑蕴含</li><li>传递律：若X→Y和Y→Z为F所逻辑蕴含，则X→Z为F所逻辑蕴含</li><li>合并规律：若X→Y，X→Z，则X→YZ为F所蕴含</li><li>伪传递律：若X→Y，WY→Z，则XW→Z为F所蕴含</li><li>分解规律：若X→Y，Z⊆Y，则X→Z为F所蕴含</li></ul><h1 id="键与约束"><a href="#键与约束" class="headerlink" title="键与约束"></a>键与约束</h1><ul><li><p>超键：能<strong>唯一标识</strong>此表的属性的组合</p></li><li><p>候选键：超键中<strong>去掉冗余的属性</strong>，剩余的属性就是候选键</p></li><li><p>主键：<strong>任选一个候选键</strong>，即可作为主键</p></li><li><p>外键：<strong>其他表中的主键</strong></p></li><li><p>主属性：<strong>候选键内的属性为主属性</strong>，其他属于非主属性</p></li><li><p>实体完整性约束：即<strong>主键约束，主键不能为空，也不能重复</strong></p></li><li><p>参照完整性约束：即外键约束，<strong>外键必须是其他表中已经存在的主键的值，或者为空</strong></p></li><li><p>用户自定义完整性约束：<strong>自定义表达式约束</strong>，如设定年龄属性的值必须在0到150之间</p></li></ul><h1 id="范式【难】"><a href="#范式【难】" class="headerlink" title="范式【难】"></a>范式【难】</h1><h2 id="第一范式1NF"><a href="#第一范式1NF" class="headerlink" title="第一范式1NF"></a>第一范式1NF</h2><p>关系中<strong>每一个分量必须是一个不可分的数据项</strong>。<br>通俗地说，第一范式就是表中不允许有小表的存在。比如，下表的员工表，就不属于第一范式。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E7%AC%AC%E4%B8%80%E8%8C%83%E5%BC%8F-%E5%91%98%E5%B7%A5%E8%A1%A8.png" alt="第一范式-员工表"></p><ul><li>实例：用一个单一的关系模式学生来描述学校的教务系统：学生（学好、学生姓名、系号、系主人姓名、课程号、成绩）</li><li>依赖关系：（学号-&gt;学生姓名，学号-&gt;系号，系号-&gt;系主人姓名，学号-&gt;课程号，（学生，课程号）-&gt;成绩）<br><img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E7%AC%AC%E4%B8%80%E8%8C%83%E5%BC%8F-%E5%AE%9E%E4%BE%8B.png" alt="第一范式-实例"></li></ul><h2 id="第二范式2NF"><a href="#第二范式2NF" class="headerlink" title="第二范式2NF"></a>第二范式2NF</h2><p>【消除部分依赖】<br>如果<strong>关系R属于1NF</strong>，且<strong>每一个非主属性完全函数依赖于任何一个候选码</strong>，则R属于2NF。<br>通俗地说，2NF就是在1NF的基础上，表中的<strong>每一个非主属性不会依赖复合主键中的某一个列</strong>。<br>按照定义，上面的学生表就不满足2NF，因为学号不能完全确定课程号和成绩（每个学生可以选多门课）</p><p>将学生表分解为：<br>学生（学号，学生姓名，系编号，系名，系主任）<br>选课（学号，课程号，成绩）<br>每张表均属于2NF<br>【参考：<a href="https://blog.csdn.net/Dream_angel_Z/article/details/45175621">数据库（第一范式，第二范式，第三范式）_数据库第一范式-CSDN博客</a>】</p><h2 id="第三范式3NF"><a href="#第三范式3NF" class="headerlink" title="第三范式3NF"></a>第三范式3NF</h2><p>【消除传递依赖】<br>在<strong>满足1NF的基础上，表中不存在非主属性对码的传递依赖</strong><br>学生关系模型就不属于3NF，因为学生无法直接决定系主任和系名，是由学号-&gt;系编号，再由系编号-&gt;系主任，系编号-&gt;系名，因此存在非主属性对主属性的传递依赖</p><p>进一步分解为<br>学生（学号，学生姓名，系编号）<br>系（系编号，系名，系主任）<br>选课（学号，课程号，成绩）<br>每张表均属于3NF</p><h2 id="BC范式"><a href="#BC范式" class="headerlink" title="BC范式"></a>BC范式</h2><p>【消除主属性部分传递和传递依赖】<br>BC模式可以理解为3NF的优化，修正的3NF。<br>指<strong>在第三范式的基础上，进一步消除主属性对于码的部分函数传递和传递依赖</strong><br>通俗地说，就是<strong>在每一种情况下，每一个依赖的左边决定因素都必然包含候选键</strong>，如下：<br><img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/BC%E8%8C%83%E5%BC%8F.png" alt="BC范式">【参考：<a href="https://cloud.tencent.com/developer/article/2089714">第一范式、第二范式、第三范式、BCNF范式详解-腾讯云开发者社区-腾讯云</a>】<br>【参考：<a href="https://www.bilibili.com/video/BV1wv4y1m7J2?spm_id_from=333.788.videopod.sections&vd_source=bbf7b29e72c0e9767fcb7d2bcf904c64">数据库第6章 关系数据理论（第二部分：范式理论 1NF-2NF-3NF）_哔哩哔哩_bilibili</a>】</p><h1 id="模式分解【难】"><a href="#模式分解【难】" class="headerlink" title="模式分解【难】"></a>模式分解【难】</h1><p>范式之间的转换一般都通过拆分属性，即<strong>模式分解</strong>，将具有部分函数依赖和传递依赖的属性分离出来，一般以下两种：</p><ul><li>保持函数依赖分解<br>  对于关系模式R，有依赖集F，若对R进行分解，<strong>分解出来的多个关系模式，保持原来的依赖集不变</strong>，则为保持函数依赖分解。另外，注意要消除掉冗余依赖（如传递依赖）<br>  实例：R(A,B,C),F(A-&gt;B,B-&gt;C,A-&gt;C)，将其分解为两个关系模式R1(A,B)和R2(B,C)，此时R1保持依赖A-&gt;B，R2包吃依赖B-&gt;C，说明分解后的R1和R2包吃函数依赖分解，因为A-&gt;C这个函数以来实际是一个冗余依赖，可以由前两个传递得到，所以需不要管。</li><li>无损分解：分解后的关系模式能够还原出原关系模式。<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%A8%A1%E5%BC%8F%E5%88%86%E8%A7%A3-%E6%97%A0%E6%8D%9F%E5%88%86%E8%A7%A3.png" alt="模式分解-无损分解"><br>  【？需要学习视频】</li></ul><h1 id="并发控制"><a href="#并发控制" class="headerlink" title="并发控制"></a>并发控制</h1><ul><li>事务：由一系列操作组成，这些操作，要么全做，要么全不做，拥有四种特性：<ul><li>（操作）<strong>原子性</strong>：要么全做，要么全不做</li><li>（数据）<strong>一致性</strong>：事务发生后数据是一致的，例如银行转账，不会存在A账户转出，B账户没收到的情况</li><li>（执行）<strong>隔离性</strong>：任一事务的更新操作知道其成功提交的整个过程对其他事物都是不可见的，不同事务之间是隔离的，互不干涉</li><li>（改变）<strong>持续性</strong>：事务操作的结果是持续性的</li></ul></li></ul><p>事务是并发控制的前提条件，并发控制就是<strong>控制不同的事务并发执行</strong>，提高系统效率，但是并发控制中存在下面三个问题：</p><ul><li><strong>丢失更新</strong>：事务1对数据A进行了修改并写回，事务2也对A进行了修改并写回，此时事务2写回的数据会覆盖事务1写回的数据，就丢失了事务1对A的更新。即数据A的更新会被覆盖</li><li><strong>不可重复读</strong>：事务2读A，而后事务1对数据A进行了修改并写回，此时若事务2再读A，发现数据不对。即一个事务重复读A两次，会发现数据A有误。</li><li><strong>读脏数据</strong>：事务1对数据A进行了修改后，事务2读数据A，而后事务1回滚，数据A恢复了原来的值，那么事务2对数据A的事是无效的，读到了脏数据<br><img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6.png" alt="并发控制"></li></ul><h1 id="封锁协议"><a href="#封锁协议" class="headerlink" title="封锁协议"></a>封锁协议</h1><ul><li><strong>X锁是排它锁（写锁）</strong>。若事务T对数据对象A加上X锁，则只允许T读取和修改A，<strong>其他事务都不能再对A加任何类型的锁</strong>，直到T释放A上的锁</li><li><strong>S锁是共享锁（读锁）</strong>。若事务T对数据对象A加上S锁，则只允许T读取A，但是不能修改A，<strong>其他事务只能在对A加S锁</strong>（也即能读不能修改），直到T释放A上的S锁。</li></ul><p>共分为三级封锁协议，如下：</p><ul><li>一级封锁协议：事务在<strong>修改数据R之前必须对其加X锁</strong>，直到事务结束才释放。<strong>可解决丢失更新问题</strong>。<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E4%B8%80%E7%BA%A7%E5%B0%81%E9%94%81%E5%8D%8F%E8%AE%AE.png" alt="一级协议封锁"></li><li>二级封锁协议：一级封锁协议的基础上加上事务T在<strong>读数据R之前必须对其加S锁，读完后即可释放S锁</strong>。可<strong>解决丢失更新、读脏数据问题</strong><br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E4%BA%8C%E7%BA%A7%E5%B0%81%E9%94%81%E5%8D%8F%E8%AE%AE.png" alt="二级协议封锁"></li><li>三级封锁协议：一级封锁协议加上事务T在读取数据R之前必须现对其加S锁，直到<strong>事务结束才释放</strong>。可<strong>解决丢失更新、读脏数据、数据重复读问题</strong>。<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E4%B8%89%E7%BA%A7%E5%B0%81%E9%94%81%E5%8D%8F%E8%AE%AE.png" alt="三级协议封锁"></li></ul>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-数据库系统1-基本概念</title>
    <link href="/2025/07/21/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F1-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <url>/2025/07/21/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F1-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><strong>数据</strong>：时数据库中存储的基本对象，是描述事物的符号记录。<br><strong>种类</strong>有：文本、图形、图像、音频、视频、学生的档案记录、货物的运输情况等</p><p><strong>数据库DB</strong>：长期存储在计算机内、有组织的、可共享的大量数据的集合；<br>基本特征：</p><ul><li>数据按一定的数据模型组织、描述和存储</li><li>可为各种用户共享</li><li>冗余度较小</li><li>数据独立性较高</li><li>易扩展</li></ul><p><strong>数据库系统DBS</strong>：一个采用数据库技术、有组织地、动态地存储大量相关数据，方便多用户访问的计算机系统。<br>由四个部分组成：</p><ul><li>数据库DB：统一管理、长期存储在计算机内，有组织的相关数据的集合</li><li>硬件：构成计算机系统包括存储数据所需的外部设备</li><li>软件：操作系统、数据库管理系统及应用程序</li><li>人员：系统分析和数据库设计人员、应用程序员、最终用户、数据库管理员DBA</li></ul><p><strong>数据库管理系统DBMS</strong>功能：（数据库的管理软件）</p><ul><li>实现对共享数据有效的组织、管理和存取</li><li>包括数据定义、数据库操作、数据库运行管理、数据的存储管理、数据库的建立和维护等</li></ul><h1 id="三级模式-两级映像"><a href="#三级模式-两级映像" class="headerlink" title="三级模式-两级映像"></a>三级模式-两级映像</h1><ul><li><p>内模式：管理如何存储物理的数据，对应具体物理存储文件</p></li><li><p>模式：又称为<strong>概念模式</strong>，就是我们通常使用的基本表，根据应用、需求将物理数据划分成一张张表</p></li><li><p>外模式：对应数据库中的视图这个级别，将表进行一定的处理后再提供给用户使用。</p><hr></li><li><p>外模式-模式映射：是<strong>表</strong>和<strong>视图</strong>之间的映射，存在于<strong>概念级</strong>和<strong>外部级</strong>之间，若表中数据发生了修改，只需要修改此映射，而无需修改应用程序</p></li><li><p>模式-内模式映射：是<strong>表</strong>和数据的<strong>物理存储</strong>之间的映射，存在于<strong>概念级</strong>和<strong>内部级</strong>之间，若修改了数据的存储方式，只需修改此映射，而不需要修改应用程序<br>【映射的目的：确保数据的修改，而不需要修改应用程序】<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E4%B8%89%E7%BA%A7%E6%A8%A1%E5%BC%8F-%E4%B8%A4%E7%BA%A7%E6%98%A0%E5%83%8F.png" alt="三级模式-两级映射"></p></li></ul><h1 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h1><ol><li><strong>需求分析</strong>：分析数据存储要求，产出物有<strong>数据流图、数据字典、需求说明书</strong><br> 获得用户对系统的三个要求：<ol><li>信息要求</li><li>处理要求</li><li>系统要求</li></ol></li><li><strong>概念结构设计</strong>：涉及<strong>E-R图</strong>，也即实体-联系图。<br> 工作步骤包括：选择局部应用、逐一设计分E-R图、E-R图合并。<br> 分E-R图进行合并时，它们之间存在的冲突主要有以下3类：<ul><li><strong>属性冲突</strong>：同一属性可能会存在于不统的E-R图中</li><li><strong>命名冲突</strong>：相同意义的属性，在不统的分E-R图上悠着不同的命名，或是名称相同的属性在不同的分E-R图中代表不仝的意义</li><li><strong>结构冲突</strong>：同一实体在不同的分E-R图中有不同的属性，同一对象在某一分E-R图中被抽象为实体而在另一E-R图中又被抽象为属性</li></ul></li><li><strong>逻辑结构设计</strong>：将E-R图转换成关系模式。<br> 工作步骤包括：确定数据模型、将E-R图转换成为指定的数据模型、确定完整性约束和确定用户视图。</li><li><strong>物理设计</strong>：包括确定数据分布、存储结构和访问方式</li><li><strong>数据库实施阶段</strong>：根据逻辑设计和物理设计阶段的结果，建立数据库，便携与调试应用程序，组织数据入库，并进行试运行。</li><li><strong>数据库运行和维护阶段</strong>：数据库应用系统经过试运行即可投入运行，但该阶段需要不断地对系统进行评价、调整与修改。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1.png" alt="数据库设计"></li></ol><h1 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h1><ul><li><p><strong>关系模型</strong>：<strong>二维表的形式表示的实体-联系模型</strong>，是将实体-联系模型转换而来，经过开发人员设计的；<br>  逻辑结构式一张二维表，由<strong>行</strong>和<strong>列</strong>组成。用<strong>表格结构</strong>表达<strong>实体集</strong>，用<strong>外键</strong>表示实体键的<strong>联系</strong>。如下图：【行–元祖、水平记录；列属性】<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E6%A8%A1%E5%9E%8B-%E4%BA%8C%E7%BB%B4%E8%A1%A8.png" alt="关系模型-二维表"></p><ul><li>优点：严格的数学概念的基础之上；概念单一、结构简单、清晰，用户易懂易用；存取路径对用户透明，从而数据独立性，安全性好，简化数据库开发工作</li><li>缺点：由于存取路径对用户是透明的，查询效率往往不如非关系型数据模型<br>  【E-R模型转换成关系模型】<br>   <strong>每个实体都对应一个关系模式</strong>；联系分三种</li><li>1:1联系中，联系可以<strong>放到任意的两端实体中</strong>，作为一个属性（要保证1:1的两端关联），也可以转成一个单独的关系模式</li><li>1:N联系中，联系可以单独作为一个关系模型，也可以在N端中加入1端实体的主键</li><li>M:N联系中，联系必须作为一个单独的关系模式，其主键是M和N端的联合主键</li></ul></li><li><p><strong>概念模型</strong>：<strong>从用户的角度进行建模的</strong>，是现实世界到信息世界的第一抽象，是真正的实体-联系模型；<br>  常用E-R图来描述，世界是由一组称做实体的基础对象和这些对象之间的联系构成的。</p><ul><li><p>属性：椭圆表示</p></li><li><p>实体：长方形</p></li><li><p>联系：菱形，联系的两端要填写联系类型（如1、N）<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/E-R%E5%9B%BE.png" alt="E-R图"><br>  【方框–强实体；方框里划线–弱实体】</p></li><li><p>实体：<strong>客观存在并可相互区别的事物</strong>。可以是具体的人、事、物或抽象概念。如人、汽车、图书、账户、贷款。</p><ul><li>弱实体和强实体：<strong>弱实体</strong>依赖于<strong>强实体</strong>的存在而存在</li><li>实体集：具有相同类型和共享属性的实体的集合，如学生、课堂</li></ul></li><li><p>属性：<strong>实体所具有的特性</strong></p><ul><li>属性分类：简单属性和复合属性；单值属性和多值属性；NULL属性；派生属性；</li><li>域：属性的取值范围成为该属性的域；</li><li>码（键key）：唯一标识实体的属性集。</li></ul></li><li><p>联系：现实世界中<strong>实物内部以及事物之间的联系</strong>，在E-R图中反映为<strong>实体内部的联系和实体之间的联系</strong>。<br>   联系的类型有以下三种</p><ul><li>一对一 1:1</li><li>一对多 1:N</li><li>多对多 N:N<br>   两个以上实体型的联系，如下图，涉及3个实体，1个联系<br>   <img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E4%B8%A4%E4%B8%AA%E4%BB%A5%E4%B8%8A%E5%AE%9E%E4%BD%93%E5%9E%8B%E7%9A%84%E8%81%94%E7%B3%BB.png" alt="两个以上实体型的联系"></li></ul></li></ul></li><li><p>网状模型：表示实体类型及其实体之间的联系，一个事物和另外几个都有联系，形成一张网；</p></li><li><p>面向对象模型：采用面向对象的方法设计数据库，以对象为单位，每个对象包括属性和方法，具有类和继承等特点；</p></li></ul><p><strong>三要素</strong></p><ul><li>数据结构：所研究的对象类型的集合</li><li>数据操作：对数据库中各种对象的实例允许执行的操作的集合</li><li>数据的约束条件：一组完整性规则的集合</li></ul><h1 id="关系代数"><a href="#关系代数" class="headerlink" title="关系代数"></a>关系代数</h1><ul><li>并：结果是两张表中所有记录的合并，相同记录只显示一次</li><li>交：结果是两张表中相同的记录</li><li>差：S1-S2，结果是S1中有而S2中没有的那些记录<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0-%E4%BA%A4%E5%B9%B6%E5%B7%AE.png" alt="关系代数"></li><li>笛卡尔积：S1* S2，产生的结果包括S1和S2的所有属性列，并且S1中每条记录一次和S2中所有记录组成成一条记录，最终属性列为S1+S2属性列，记录数为S1* S2记录数</li><li>投影：实际是按条件选择某关系模式中的<strong>某列</strong>，列也可以用数字表示，符号：<strong>π</strong></li><li>选择：实际是按条件选择某关系模式中的<strong>某条</strong>记录，符号：<strong>σ</strong><br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0-%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF-%E6%8A%95%E5%BD%B1-%E9%80%89%E6%8B%A9.png" alt="关系代数-笛卡尔积-投影-选择"></li><li>自然连接：结果<strong>显示全部的属性列，但是相同属性列只显示一次，显示两个关系中属性相同且值相同的记录</strong>。<br>  设有关系R、S如下左图所示，自然连接结果如下有图所示：<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93/%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0-%E8%87%AA%E7%84%B6%E8%BF%9E%E6%8E%A5.png" alt="关系代数-自然连接"></li></ul>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-计算机基础3-软件-操作系统</title>
    <link href="/2025/07/20/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%803-%E8%BD%AF%E4%BB%B6-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <url>/2025/07/20/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%803-%E8%BD%AF%E4%BB%B6-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<p><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F.png" alt="计算机系统"></p><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><ul><li>有效地组织和管理系统中的各种软件&#x2F;硬件资源，</li><li>合理地组织计算机系统工作流程，</li><li>控制程序的执行，</li><li>并且向用户提供一个良好的工作环境和友好的接口<br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%B1%82%E6%AC%A1%E5%9B%BE.png" alt="计算机层次图"></li></ul><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><ul><li>管理计算机中运行的程序和分配各种软硬件资源</li><li>为用户提供友善的人机界面</li><li>未应用程序的开发和运行提供一个高效的平台</li></ul><h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><ul><li>并发性（最基本属性）：宏观上并行，微观上串行。时间上很小。和“并行”区别。<br>  <em>并行是微观的，并发是宏观的</em></li><li>共享性（最基本属性）：文件数据共享，内存、资源等共享</li><li>虚拟性：设备管理技术，Spooling技术，如打印机共享给多个程序使用</li><li>不确定性（异步性）：运行的程序中间步骤不确定</li></ul><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li><strong>进程管理</strong>：对处理器的执行“时间”进行管理，采用多道程序等技术将CPU的时间合理地分配，包括进程控制、进程同步、进程通信和进程调度</li><li><strong>文件管理</strong>：包括文件存储空间管理、目录管理、文件的读写管理和存取控制</li><li><strong>存储管理</strong>：对主存储器“空间”进行管理，主要包括存储分配与回收、存储保护、地址映射和主存扩充</li><li><strong>设备管理</strong>：对硬件设备的管理，包括输入输出设备的分配、启动、完成和回收</li><li><strong>作业管理</strong>：包括任务、界面管理、人机交互、图形界面、语音控制盒虚拟现实</li></ul><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ul><li><strong>批处理操作系统</strong>：<ul><li>单道批：一次一个作业写入内存，作业由程序、数据、作业说明书组成</li><li>多道批：一次多个作业写入内存，特点：多道、宏观上并行微观上串行</li></ul></li><li><strong>分时操作系统</strong>：<br>  一个计算机系统与多个终端设备连接。将CPU化为多个时间片轮转为多个用户提供服务，特点：多路性、独立性、交互性、及时性</li><li><strong>实时操作系统</strong>：<br>  实时是指计算机对于外来信息能够以足够快的速度进行处理，并在被控对象允许的时间范围内做出快速反应。<br>  实时控制系统和实时信息系统。交互能力不高，可靠性要求高</li><li><strong>网络操作系统</strong>：<br>  使联网计算机能够方面有效地共享网络资源，为网络用户提供各种服务的软件和协议的集合。Unix、Linux和Windows Server<br>  三种模式：<ul><li>集中模式</li><li>客户端&#x2F;服务器模式</li><li>对等模式</li></ul></li><li><strong>分布式操作系统</strong>：<br>  由多个分散的计算机经连接而成的计算机系统，系统中的计算机无主、次之分，任意两台计算机可以通过通信交换信息</li><li><strong>微型计算机操作系统</strong>：<ul><li>Windows：Microsoft 图形界面、多任务、多线程</li><li>Linux：类Unix操作系统，多用户、多任务、多线程和多CPU</li></ul></li><li><strong>嵌入式操作系统</strong>：运行在智能芯片中。特点：<ul><li>微型化：性能成本考虑，希望占用的资源和代码量少，如内存少、字长短、运行速度有限、能源少（微小型电池）</li><li>可定制：成本研发周期考虑，不同微处理器平台上，对硬件变化进行结构和功能上的配置，满足不同的需求</li><li>实时性：过程控制、数据采集、传输通信、多媒体信息及关键要害领域需要迅速响应的场合，对实时性要求较高</li><li>可靠性：系统构件、模块和体系结构必须达到应用的可靠性，关键要害应用还要提供容错和预故障措施</li><li>易移植性（HAL和BSP支持）：采用硬件抽象层和板级支撑包<br>  嵌入式系统初始化过程：自底向上，从硬件到软件依次：片级初始化-&gt;板级初始化-&gt;系统初始化</li></ul></li></ul><h1 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>进程是程序在一个数据集上运行的过程，它由<strong>系统进行资源分配和调度的一个独立单元</strong>。<br>主要组成部分：</p><ul><li><strong>进程控制块PCB</strong>（唯一标志）：包含进程标识符、状态、位置信息、控制信息、队列指针（链接同一状态的进程）、优先级、现场保护区等；</li><li><strong>程序</strong>（描述进行要做什么）</li><li><strong>数据</strong>（存放进程执行时所需数据）</li></ul><h2 id="三态图"><a href="#三态图" class="headerlink" title="三态图"></a>三态图</h2><ul><li>运行：当一个进程在CPU上运行时。（单处理器处于运行态的进程只有一个，多进程CPU上交替运行）</li><li>就绪：一个进程获得了除CPU外的一切所需资源，一旦得到处理器即可运行</li><li>阻塞：阻塞也成等待或者睡眠状态，一个进程正在等待某一时间的发生（例如请求I&#x2F;O、等待I&#x2F;O完成等）而暂时停止运行，此时即使CPU分配给进程也无法运行<br>【能够记住并背下来】<br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%B8%89%E6%80%81%E5%9B%BE.png" alt="三态图"></li></ul><h2 id="前趋图"><a href="#前趋图" class="headerlink" title="前趋图"></a>前趋图</h2><p>用来表示哪些任务可以并行执行，哪些任务之间有顺序关系。</p><ul><li>任务间的并行</li><li>任务间的先后顺序<br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%89%8D%E8%B6%8B%E5%9B%BE.png" alt="前趋图"></li></ul><h2 id="进程资源图"><a href="#进程资源图" class="headerlink" title="进程资源图"></a>进程资源图</h2><p>表示进程和资源之间的分配和请求关系。<strong>可判断是否死锁</strong>。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E8%BF%9B%E7%A8%8B%E8%B5%84%E6%BA%90%E5%9B%BE.png" alt="进程资源图"></p><h2 id="进程同步与互斥"><a href="#进程同步与互斥" class="headerlink" title="进程同步与互斥"></a>进程同步与互斥</h2><p>临界资源：各进程间需要以互斥方式对其进行访问的资源<br>临界区：进程中对临界资源实施操作的那段程序。本职是一段程序代码</p><ul><li><p>互斥：某资源（临界资源）在同一时间内只能由一个任务单独使用，使用时需要加锁，使用后解锁才能被其他任务使用；如打印机</p></li><li><p>同步：多个任务可以并发执行，只不过有速度上的差异，在一定情况下停下等待，不存在资源是否单独或共享的问题；如自行车和汽车；<br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5%E4%B8%8E%E4%BA%92%E6%96%A5.png" alt="进程同步与互斥"></p></li><li><p>互斥信号量：对临界资源采用互斥访问，使用互斥信号量后其他进程无法访问，初值为1；</p></li><li><p>同步信号量：对共享资源的访问，初值一般是共享资源的数量。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5%E4%BA%92%E6%96%A5PV.png" alt="进程同步互斥PV"><br>经典问题：<strong>生产者和消费者问题</strong><br>三个信号量：互斥信号量S0（仓库独立使用权），同步信号量S1（仓库空闲个数）、同步信号量S2（仓库商品个数）</p></li></ul><h2 id="进程调度"><a href="#进程调度" class="headerlink" title="进程调度"></a>进程调度</h2><p>方式：指挡有更高优先级的进程到来时如何分配CPU</p><ul><li>可剥夺：更高来临时，强行将正在运行进程的CPU分配更高的</li><li>不可剥夺：高优先级进程必须等待当前进程自动释放CPU</li></ul><p>一个作业从提交到完成需要经历高、中、低三级调度</p><ul><li>高级调度。长调度、作业调度或接纳调度。决定输入池中哪个后备作业可以调入主系统做好运行的准备，成为一个或一组继续进程。一个作业只需经过一次高级调用</li><li>中级调度。中程调度、兑换调度。处于交换区中哪个就绪进程可以调入内存，以便直接参与CPU竞争。</li><li>低级调度。短程调度、进程调度。处于内存中的哪个就绪进程可以占用CPU。是最活跃、最重要的调度程序，</li></ul><p><strong>调度算法</strong></p><ul><li>先来先服务FCFS：先到达的进程优先分配CPU。用于宏观调度</li><li>时间片轮转：每个进程CPU时间片，轮流使用CPU，进程时间大小相同、很公平，用于微观调度；</li><li>优先级调度：每个进程都甬有一个优先级，优先级大的先分配CPU</li><li>多级反馈调度：<em>时间片轮转</em>和<em>优先级调度</em>结合而成，设置多个就绪队列1.2.3…，每个队列赋予不同的优先级，分配不同的时间片长度；新进程先进入队列1末尾，按FCFS原则，执行队列1的时间片；若未能执行完进程，则转入队列2末尾，如此重复。<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%A4%9A%E7%BA%A7%E5%8F%8D%E9%A6%88%E8%B0%83%E5%BA%A6.png" alt="多级反馈调度"></li></ul><h2 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h2><p>当一个进程在等待永远不可能发生的事件时，就会产生死锁，若系统中有多个进程处于死锁状态，就会造成系统死锁<br><em>四个必要条件</em>：</p><ul><li>资源互斥</li><li>每个进程占有资源并等待其他资源</li><li>系统不能剥夺进程资源</li><li>进程资源图是一个环路</li></ul><p><em>解决措施是打破四大条件</em>：</p><ul><li>死锁预防：采用某种策略限制并发进程对于资源的请求，破坏死锁产生的四个条件之一，使系统任何时刻都不满足死锁的条件。</li><li>死锁避免：一般采用银行家算法，银行家算法，就是提前计算出一条不会死锁的资源分配方法，才分配资源，否则不分配资源，相当于接待，考虑对方还的起才节前，提前考虑好以后，就可以避免死锁。</li><li>死锁检测：允许死锁发生，但系统定时运行一个检测死锁的程序，若检测到系统中发生死锁，则设法加以接触。</li><li>死锁解除：即死锁发生后的接触方法，如强制剥夺资源、撤销进程等。</li><li>死锁资源计算：系统内有N个进程，每个进程都需要R个资源，发生死锁的最大资源数为n*(R-1)。不发生死锁的最小资源数为n*(R-1)+1。</li></ul><h2 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h2><p>传统进程属性：</p><ul><li>可拥有资源的独立单位；</li><li>可独立调度和分配的基本单位。</li></ul><p>引入线程原因：<br>进程在创建、撤销和切换中，系统必须为之付出较大的时空开销。故在系统中设置的（1）<strong>进程数目不宜过多</strong>，（2）<strong>切换频率不宜过高</strong>。<br><br>引入线程后，将传统进程的两个基本属性分开：（从2个属性可看出线程不拥有资源）</p><ul><li>线程作为调度和分配的基本单元</li><li>进程作为独立分配资源单位。</li></ul><p>线程是进程中的一个<strong>实体</strong>，被<em>系统独立分配和调度的基本单元</em>。<br>线程基本上不拥有资源，只拥有一点运行中必不可少的资源（如程序计数器、一组寄存器和栈）</p><ul><li><strong>与可同属一个进程的其他线程共享进程所拥有的全部资源</strong>，例如进程的公共数据、全局变量、代码、文件等资源，</li><li><strong>不能共享线程独有的资源</strong>，如线程的栈指针等标识数据<br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%E5%85%B3%E7%B3%BB%E5%9B%BE.png" alt="进程线程关系图"></li></ul><h1 id="存储管理"><a href="#存储管理" class="headerlink" title="存储管理"></a>存储管理</h1><h2 id="分区存储管理"><a href="#分区存储管理" class="headerlink" title="分区存储管理"></a>分区存储管理</h2><p>分区存储组织：<strong>整存</strong>，将某进程运行所需的内存整体一起分配给它，然后再执行。<br><em>三种分区方式</em>：</p><ul><li><strong>固定分区</strong>：静态分区方法，将主存分为若干个固定嗯分区，将要运行的作业装配进去，由于分区固定，大小和作业需要的大小不同，会产生<strong>内部碎片</strong>；</li><li><strong>可变分区</strong>：动态分区方法，主存空间的分区是在作业转入时划分，正好划分为作业需要的大小，这样就<em>不存在内存碎片</em>，但容易将正片主存空间切割成许多块，会产生<strong>外部碎片</strong>。<br>   已经分配后以后，还需要分配9k，可采用以下算法：<ul><li><em><strong>首次适应法</strong></em>：按内存地址顺序从头查找，找到第一个&gt;&#x3D;9k空间的空闲块，即切割9k空间分配给进程；</li><li><em><strong>最佳适应法</strong></em>：将内存中所有空闲内存块按从小到大的排序，找到第一个&gt;&#x3D;9k空间的空闲块，切割分配，这个将会找到与9k空间大小最相近的空闲块；</li><li><em><strong>最差适应法</strong></em>：和最佳适应法想法，将内存中空闲块最大的，切割成9k空间分配给进程，这事为了预防系统中产生过多的细小空闲块。</li><li><em><strong>循环首次适应法</strong></em>：按内存地址顺序查找，找到第一个&gt;&#x3D;9k空间的空闲块，而后若还需分配，则找下一个，<strong>不用每次都从头查找，这与首次适应法不同的地方</strong>。</li></ul></li><li><strong>可重定位分区</strong>：可解决碎片问题，移动所有已经分配好的区域，使其成为一个连续的区域，这样其他外部细小的分区碎片可以合并成大的分区，满足作业要求。<strong>只有外部作业请求空间得不到满足时进行</strong>。</li></ul><h2 id="分页存储管理"><a href="#分页存储管理" class="headerlink" title="分页存储管理"></a>分页存储管理</h2><p>逻辑页</p><ul><li>页号</li><li>页内地址：物理偏移地址</li></ul><p><strong>页号</strong>和<strong>物理块号</strong>并非按序对应的，需要查询页表，才能得知页号对应的物理块号，在用物理块号，加上偏移地址，才能得出真正运行时的物理地址。</p><p><strong>逻辑地址&#x3D;页号+页内地址</strong><br><strong>物理地址&#x3D;页帧号（物理块号）+页内地址</strong><br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E9%A1%B5%E5%BC%8F%E5%AD%98%E5%82%A8.png" alt="页式存储"><br><strong>优点</strong>：利用率高，碎片小，分配及管理简单；<br><strong>缺点</strong>：增加了系统开销，可能产生抖动现象<br>“抖动现象”，指的是当系统为进程分配的物理块数量少于进程所需的最小数量时，进程频繁地进行页面置换，导致系统性能急剧下降的一种现象。简单来说，就是页面在内存和外存之间来回频繁地“抖动”，大量时间被用于页面调度，而进程实际执行的时间却很少，严重影响系统效率，甚至可能导致系统崩溃。<br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%88%86%E9%A1%B5%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86.png" alt="分页存储管理"><br>【页号：和容量有关，页内地址，和存储大小有关。<br>如有4GB内存，以4KB为页面大小，则有2的20次方个。页号有<em>2的20次方</em>，即页号有20位，页内地址，就是4KB大小。】</p><p><strong>页面置换算法</strong>：</p><ul><li>最优算法：OPT（Optimal Replacement Algorithm），理论上的算法，<strong>无法实现</strong>，是在进程执行完后进行的最佳效率计算，用来让其他算法比较差距。<br>  原理：选择未来最长时间内不被访问的页面置换，这样可以保证未来执行的都是马上要访问的</li><li>先进先出算法：FIFO（First Input First Output），先调入内存的页先被置换淘汰，会产生<strong>抖动现象</strong>，即分配的页数越多，缺页率可能越多（即效率越低）</li><li>最近最少使用：LRU（Least Recently Used），在最近的过去，进程执行过程中，过去最少使用的页面被置换淘汰，根据局部性原理，这种方式效率高，且不会产生抖动现象，使用大量计数器，但没有LFU(Least Frequently Used)多。<ul><li>LFU（最不经常使用页置换算法）是一种根据页面的历史访问频率来决定置换页面的算法</li></ul></li><li>淘汰原则：有限淘汰，最近未访问的，后淘汰最近未被修改的页面。</li></ul><p><strong>快表&amp;慢表</strong><br>快表是一块<strong>小容量的相联存储器</strong>，由快速存储器组成，<em>按内容访问，速度快</em>，并且可以从硬件上保证按内容并行查找，一般用来存放当前访问最频繁的少数活动页面的页号。</p><ul><li>快表：将页面存在Cache中，访问一次Cache和一次内存，更快；</li><li>慢表：将页表存于内存上，需要访问两次内容才能取出页；</li></ul><h2 id="分段存储管理"><a href="#分段存储管理" class="headerlink" title="分段存储管理"></a>分段存储管理</h2><p>将进程空间分为一个个段，<strong>每段也有段号和端内地址</strong>，与页式存储不同的是，<strong>每段物理大小普通，分段是根据逻辑整体分段的</strong>，因此段表和页表的内容不同，页表中直接是逻辑页对应的物理块号，<strong>段表有段长和基址两个属性</strong>，才能确定一个逻辑段在物理段中的位置。<strong>分页每段大小是固定的，分段不固定</strong><br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%AE%B5%E5%BC%8F%E5%AD%98%E5%82%A8.png" alt="段式存储"><br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%88%86%E6%AE%B5%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86.png" alt="分段存储管理"></p><ul><li>优点：多道程序共享内存，各段程序修改互不影响</li><li>缺点：内存利用率低，内存碎片浪费大。</li></ul><h2 id="段页式存储管理"><a href="#段页式存储管理" class="headerlink" title="段页式存储管理"></a>段页式存储管理</h2><p>对进程空间先分段、后分页。</p><ul><li>优点：空间浪费小、存储共享容易、存储保护容易、能动态链接</li><li>缺点：由于管理软件的增加，复杂性和开销随之增加，需要的硬件以及占用的内容也有所增加，使得执行速度大大下降<br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%AE%B5%E9%A1%B5%E5%BC%8F%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86.png" alt="段页式存储管理"><br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%AE%B5%E9%A1%B5%E5%BC%8F%E5%AD%98%E5%82%A8.png" alt="段页式存储"></li></ul><h1 id="设备管理"><a href="#设备管理" class="headerlink" title="设备管理"></a>设备管理</h1><p>设备是计算机系统与外界交互的工具，具体负责计算机与外部的输入、输出工作，所以常称为外部设备（简称外设）。<br>在计算机系统中，将负责管理设备和输入&#x2F;输出的机构成为I&#x2F;O系统，因此I&#x2F;O系统由<strong>设备、控制器、通道（具体通道的计算机系统）、总线和I&#x2F;O软件</strong>组成</p><h2 id="设备的分类"><a href="#设备的分类" class="headerlink" title="设备的分类"></a>设备的分类</h2><ul><li>按数据组织分类：块设备、字符设备</li><li>按设备功能分类：输入设备、输出设备、存储设备、网络联网设备、供电设备</li><li>资源分配角度分类：独占设备、共享设备和虚拟设备</li><li>数据传输速率分类：低速设备、中速设备、告诉设备</li></ul><p>设备管理任务：<br>在多道程序环境下，当<strong>多个进程竞争使用设备时</strong>，按一定的策略分配和管理各种设备，控制设备的各种操作，完成I&#x2F;O设备与主存之间的数据交换<br>设备管理功能：<br><strong>动态掌握并记录设备的状态</strong>、设备分配和释放、缓存区管理、实现物理I&#x2F;O设备的操作、提供设备使用的用户接口及访问和控制</p><h2 id="I-O软件"><a href="#I-O软件" class="headerlink" title="I&#x2F;O软件"></a>I&#x2F;O软件</h2><p>I&#x2F;O设备管理软件的所有层次及每一层功能如下图<br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/IO%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86%E5%B1%82%E6%AC%A1.png" alt="IO设备管理层次"><br>实例：<strong>用户程序</strong>试图访问一个硬盘文件时，需要通过操作系统来实现-&gt;<strong>设备无关软件</strong>检查告诉缓存中有无要读的数据块-&gt;若没有，调用<strong>设备驱动程序</strong>，向I&#x2F;O硬件发送一个请求-&gt;用户进程阻塞并等待磁盘操作完成-&gt;磁盘处理完成，产生一个中断，转入<strong>中断处理程序</strong>-&gt;中断处理程序检查终端原因，认为磁盘读取已完成，唤醒用户进程取回信息，结束此次I&#x2F;O请求。</p><h2 id="设备管理技术"><a href="#设备管理技术" class="headerlink" title="设备管理技术"></a>设备管理技术</h2><p>一个独占设备，同一时间只能由一个进程使用，其他进程只能等待。<br>引入<strong>SPOOLING（外围设备联机操作）技术</strong>：在外设上建立两个数据缓冲区，分别成为<strong>输入井</strong>和<strong>输出井</strong>，无论多少进程，都可以共用一个打印机，只需要将命令发出，数据就会排队在缓冲区，打印机会自动按顺序打印，实现了物理外设的共享，使得每个进程都感觉在使用一个打印机，这就是<strong>物理设备的虚拟化</strong><br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%89%A9%E7%90%86%E8%AE%BE%E5%A4%87%E8%99%9A%E6%8B%9F%E5%8C%96.png" alt="物理设备虚拟化"></p><h1 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h1><p><strong>文件</strong>：具有符号名的，在逻辑上具有完整意义的一组相关信息的集合。是一种<strong>抽象机制</strong>，隐藏了硬件和实现细节，</p><ul><li>文件体：文件真实的内容</li><li>文件说明：操作系统为了管理文件所用到的信息，包括文件名、文件内部表示、文件类型、存储地址、文件长度、访问权限、建立时间和访问时间等</li></ul><p><strong>文件系统</strong>：实现<em>文件</em>统一管理的一组软件和相关数据的集合，专门管理和存储文件信息的软件机构。<br><em>功能</em> 有：按名存取、统一的用户接口、并发访问和控制、安全性控制、优化性能、差错恢复。</p><p><strong>文件的类型</strong></p><ul><li>性质和用户：系统文件、库文件、用户文件</li><li>保存期限：临时文件、档案文件、永久文件</li><li>保护方式：只读、读&#x2F;写、可执行、不保护</li><li>UNIX：普通文件、目录文件、设备文件（特殊文件）</li></ul><h2 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h2><ul><li>逻辑结构：<ul><li>有记录的记录式文件：所有的记录通常都描述一个实体集，记录的长度分定长和不定长</li><li>无结构的流式文件：文件体为字节流。通常采用顺序访问方式，读写可以任意长度</li></ul></li><li>物理结构：<em>文件在屋里设备上的存放方法</em><ul><li>连续结构（顺序结构）：<strong>将逻辑上连续的文件信息（如记录）一次存放在连续编号的物理块上</strong></li><li>链接结构（串联结构）：<strong>将逻辑上连续的文件信息（如记录）存放在不连续的物理块上</strong>，每个物理块<strong>设有一个指针指向下一个物理块</strong></li><li>索引结构：将<strong>逻辑上连续大大文件信息（如记录）存放在不连续的物理块上</strong>，系统为每个文件监力一张索引表。<strong>索引表记录了文件信息所在的逻辑块号对应的物理块号</strong>，并将索引表的起始地址放在与文件对应的文件目录中。<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%B4%A2%E5%BC%95%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84.png" alt="索引文件结构"><br>  如图，系统中存在13个索引结点（0-12）。<br>  0-9为直接索引，即每个索引节点存放得是内容。假设每个物理盘大小为4KB，共可存放4KB * 10&#x3D;40KB数据<br>  10号索引节点为一级简介索引，大小为4KB，存放得<strong>并非直接数据</strong>，而是链接倒直接物理盘块的地址。假设每个地址占4B，共有1024个地址，对应1024个物理盘，可存放1024* 4KB&#x3D;4096KB数据<br>  二级索引节点类似，直接盘存放一级地址，一级地址再存放物理块地址，而后连接到存放数据的物理盘块，容量又扩大了一个数量级，为1024* 1024* 4KB数据</li><li>多个物理块的索引表（链接文件和多重索引方式）：索引表是在文件创建时由系统自动建立的，并于文件一起存放在同一文件卷上。根据一个文件大小的不统，其索引表占用物理块的个数不等，一般占一个或几个物理块</li></ul></li></ul><h2 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h2><p>定义：文件控制块的有序稽核成为<strong>文件目录</strong><br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95.png" alt="文件目录"><br>文件控制块包含一下三类信息：</p><ul><li>基本信息类：例如文件名、文件的物理地址、文件长度何文件块数等</li><li>存取控制类：文件的存取权限，像UNIX用户分成文件主、同组用户何一般用户三类，这三类用户的读写执行RWX权限</li><li>使用信息类：文件建立日期、最后一次修改日期、最后一次访问的日期、当前使用的信息（如打开文件的进程数、在文件上的等待队列）等</li></ul><p>路径：</p><ul><li>相对路径：</li><li>绝对路径：</li><li>全文件名：绝对路径+文件名。</li></ul><h2 id="存储空间管理"><a href="#存储空间管理" class="headerlink" title="存储空间管理"></a>存储空间管理</h2><p>读取方式是指读&#x2F;写文件存储器上的一个物理块的方法。</p><ul><li>顺序存取：依次进行读写</li><li>随机存取：按任意的次序随机地读写</li></ul><p><strong>空间管理</strong><br>数据结构通常称为磁盘分配表；<em>（外存往往指硬盘）</em><br>管理方法：</p><ul><li>空闲区表。 连续未分配区域称为空闲区。<br>      操作系统为磁盘外存上的所有空闲区建立一张空闲表，每个表项对应一个空闲区。<br>      <img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A9%BA%E9%97%B2%E5%8C%BA%E8%A1%A8.png" alt="空闲区表"></li><li><strong>位示图</strong>。 外存上建立一张位示图（Bitmap），记录文件存储器使用情况。<br>   每一位对应文件存储器上的一个物理块，用0和1表示空闲和占用。<br>   <img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E4%BD%8D%E7%A4%BA%E5%9B%BE.png" alt="位示图"></li><li>空闲块链。每个空闲物理块指向下一个空闲物理块的指针，构成一个链表。</li><li>成组链接法。  UNIX采用该方法。<br>       实现时系统将空闲块分成若干组，每100个空闲块未一组，每组第1个空闲块等级了下一组的物理块号和空闲块总数。</li></ul><p><strong>文件保护</strong><br>对文件的保护长采用<strong>存取控制</strong>的方式</p><ul><li>存取控制矩阵</li><li>存取控制表（Linux使用，列出一个文件的所有权限用户）</li><li>用户权限表（列出一个用户能够访问的所有文件）</li><li>密码</li></ul><h2 id="文件共享"><a href="#文件共享" class="headerlink" title="文件共享"></a>文件共享</h2><ul><li>硬链接： 两个文件目录表目指向同一个索引结点的链接，也称基于索引结点的链接。<br>   硬连接是指不同文件名与同一个文件实体的链接。<strong>不利于删除</strong></li><li>符号链接：建立新的文件或目录，并与原来文件或目录的路径名进行映射。</li></ul><h1 id="作业管理"><a href="#作业管理" class="headerlink" title="作业管理"></a>作业管理</h1><p>不考</p><h1 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h1><p>存取时间&#x3D;<strong>寻道时间</strong>+<strong>等待时间</strong>。<br><strong>寻道时间</strong>：磁头移动到磁道所需的时间。<br><strong>等待时间</strong>：等待读取的扇区转到磁头下方所用的时间。</p><p><strong>读取磁盘数据的时间</strong>主要由以下三部分：<br>1.找磁道的时间<br>2.找块（扇区）的时间，即旋转延迟时间<br>3.传输时间<br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86.png" alt="磁盘管理"><br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A3%81%E7%9B%98%E9%80%BB%E8%BE%91%E5%9B%BE.png" alt="磁盘逻辑图"><br><strong>移臂调度算法</strong>：</p><ul><li>先来先服务FCFS<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%85%88%E6%9D%A5%E5%85%88%E6%9C%8D%E5%8A%A1.png" alt="先来先服务"></li><li>最短寻道时间优先SSTF<br>  <img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%9C%80%E7%9F%AD%E5%AF%BB%E9%81%93%E6%97%B6%E9%97%B4%E4%BC%98%E5%85%88.png" alt="最短寻道时间优先"></li><li>扫描算法SCAN（电梯算法）</li><li>循环扫描算法CSCAN<br>【补充】<a href="https://www.cnblogs.com/linfangnan/p/15166726.html">操作系统：磁盘的结构和调度 - 乌漆WhiteMoon - 博客园</a><br>【补充】《计算机操作系统(第四版)》，汤小丹 梁红兵 哲凤屏 汤子瀛 编著，西安电子科技大学出版社</li></ul>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-计算机基础4-其他</title>
    <link href="/2025/07/19/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%804-%E5%85%B6%E4%BB%96/"/>
    <url>/2025/07/19/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%804-%E5%85%B6%E4%BB%96/</url>
    
    <content type="html"><![CDATA[<h1 id="嵌入式系统及软件"><a href="#嵌入式系统及软件" class="headerlink" title="嵌入式系统及软件"></a>嵌入式系统及软件</h1><a href="/2025/07/25/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E5%B5%8C%E5%85%A5%E5%BC%8F%E6%8A%80%E6%9C%AF/" title="架构-嵌入式技术">架构-嵌入式技术</a><h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><a href="/2025/07/25/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/" title="架构-计算机网络">架构-计算机网络</a><h1 id="计算机语言、多媒体、系统工程"><a href="#计算机语言、多媒体、系统工程" class="headerlink" title="计算机语言、多媒体、系统工程"></a>计算机语言、多媒体、系统工程</h1><p>见后续</p><h1 id="系统性能"><a href="#系统性能" class="headerlink" title="系统性能"></a>系统性能</h1><p>见后续</p><h2 id="硬件性能指标"><a href="#硬件性能指标" class="headerlink" title="硬件性能指标"></a>硬件性能指标</h2><p><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%A1%AC%E4%BB%B6%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87.png" alt="硬件性能指标"></p><h2 id="软件性能指标"><a href="#软件性能指标" class="headerlink" title="软件性能指标"></a>软件性能指标</h2><p><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E8%BD%AF%E4%BB%B6%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87.png" alt="软件性能指标"><br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87.png" alt="性能指标"></p><h1 id="性能设计"><a href="#性能设计" class="headerlink" title="性能设计"></a>性能设计</h1><p><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%80%A7%E8%83%BD%E8%AE%BE%E8%AE%A1.png" alt="性能设计"><br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%80%A7%E8%83%BD%E8%AE%BE%E8%AE%A1%E8%AE%A1%E7%AE%97.png" alt="性能设计计算"></p><h1 id="性能评估"><a href="#性能评估" class="headerlink" title="性能评估"></a>性能评估</h1><p><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%80%A7%E8%83%BD%E8%AF%84%E4%BC%B0%E6%96%B9%E6%B3%95.png" alt="性能评估方法"></p><ul><li><strong>Dhrystone基准程序</strong>：它是一个综合性的整数基准测试程序，是为了测试编译器和CPU处理整数指令和控制功能的有效性，人为地选择一些典型指令综合起来形成的测试程序。</li><li><strong>Linpack基准程序</strong>：它是国际上最流行的用于测试高性能计算机系统浮点性能的测试。</li><li><strong>Whetstone基准程序</strong>：它是用Fortran语言编写的综合性测试程序，主要由执行浮点运算功能调用、数组变址、条件转移和超越函数的程序组成。</li><li><strong>SPEC基准程序</strong>：一种是测试计算机完成单项任务有多快，称为速度测试;另一种是测试计算机在一定时间内能完成多少项任务，称为吞吐率测试。</li><li><strong>TPC基准程序</strong>：TPC(TransactionProcessingCouncil，事务处理委员会)基准程序用以评测计算机在事务处理、数据库处理、企业管理与决策支持系统等方面的性能。该基准程序的评测结果用每秒完成的事务处理数TPC来表示。<ul><li>TPC-A基准程序规范用于评价在OLTP环境下的数据库和硬件的性能;</li><li>TPC-B测试的是不包括网络的纯事务处理量，用于模拟企业计算环境;</li><li>TPC-C测试的是联机订货系统(在线事务处理);</li><li>TPC-D、TPC-H和TPC-R测试的都是决策支持系统，其中TPC-R允许有附加的优化选项;</li><li>TPC-E测试的是大型企业信息服务系统。</li><li>TPC-W是基于Web 应用的基准程序，用来测试一些通过Internet进行市场服务和销售的商业行为，所以TPC-W可以看作是一个服务器的测试标准。</li></ul></li></ul><p><strong>Web服务器的性能评估</strong></p><ul><li>在Web服务器的测试中，反映其性能的指标主要有：<strong>最大并发连接数、响应延迟和吞吐量等</strong>。</li><li>常见的Web服务器性能评测方法有<strong>基准性能测试、压力测试和可靠性测试</strong>。</li></ul><p><strong>系统监视</strong><br>进行系统监视通常有3种方式：一是通过<strong>系统本身提供的命令</strong>，如UNIX&#x2F;Linux系统中的W、ps、last，Windows中的netstat等；二是通过<strong>系统记录文件</strong>查阅系统在特定时间内的运行状态；三是集成命令、文件记录和可视化技术的监控工具，如<strong>Windows的Perfmon应用程序</strong>。</p>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-计算机基础2-软件</title>
    <link href="/2025/07/18/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%802-%E8%BD%AF%E4%BB%B6/"/>
    <url>/2025/07/18/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%802-%E8%BD%AF%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F.png" alt="系统图"></p><ul><li>系统软件：为整个计算机系统配置的不依赖特定应用领域的通用软件，对硬件和软件资源进行控制和管理，为用户使用和其他软件运行提供服务</li><li>应用软件：为某类应用需要或解决特定问题涉及的软件。如图形图像处理、财务软件、游戏软件和各种软件包等；</li></ul><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><a href="/2025/07/20/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%803-%E8%BD%AF%E4%BB%B6-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/" title="架构-计算机基础3-软件-操作系统">架构-计算机基础3-软件-操作系统</a><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><a href="/2025/07/21/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F1-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/" title="架构-数据库系统1-基本概念">架构-数据库系统1-基本概念</a>  <a href="/2025/07/22/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F2-%E8%A7%84%E8%8C%83%E5%8C%96%E5%92%8C%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6/" title="架构-数据库系统2-规范化和并发控制">架构-数据库系统2-规范化和并发控制</a>  <a href="/2025/07/22/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F3-%E6%96%B0%E6%8A%80%E6%9C%AF/" title="架构-数据库系统3-新技术">架构-数据库系统3-新技术</a>  <h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h1><a href="/2025/07/20/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%803-%E8%BD%AF%E4%BB%B6-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/" title="架构-计算机基础3-软件-操作系统">架构-计算机基础3-软件-操作系统</a><h1 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>中间件：应用软件与操作系统之间使用的标准化编程接口和协议，承上启下作用，使应用软件的开发相对独立于计算机硬件和操作系统，能在不同的系统上运行。</p><ul><li>通信处理（消息）中间件</li><li>事务处理（交易）中间件</li><li>数据存取管理中间件：为网络上虚拟缓存存取、格式转换、解压等带来方便</li><li>Web服务器中间件</li><li>安全中间件</li><li>跨平台和架构中间件</li><li>专用平台中间件</li><li>网络中间件：包括网管、接入、网络测试、虚拟社区和虚拟缓存等；</li></ul><h2 id="构件"><a href="#构件" class="headerlink" title="构件"></a>构件</h2><p>构件又称为组件，自包容、可复用的程序集。构件是一个程序集或者一组程序的集合。这个集合向外提供统一的访问接口，外部只能通过接口访问，不能直接访问内部。<br>搭积木式开发，即<strong>构建组装模型</strong>：<br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%9E%84%E4%BB%B6%E7%BB%84%E8%A3%85%E6%A8%A1%E5%9E%8B.png" alt="存储"><br><strong>构件标准规范</strong></p><ul><li>对象管理组织（OMG）的CORBA<ul><li>对象请求代理（ORB）（最底层）：规定了分布对象的定义（接口）和语言映射，实现对象间的通信和互操作，是分布对象系统中的“软总线”</li><li>公共对象服务（第二层）：提供并发服务、名字服务、事物（交易）服务等</li><li>公共设施（最上层）：定义了构件框架，提供可直接未业务对象使用的服务，规定业务对象有效协作所需的协议规定<br>  CCM构件模型，OMG制定，用于<em>开发和配置</em>分布式应用的服务端构建模型规范</li><li>抽象构件模型：描述服务器端构件结构及构件间互操作的结构</li><li>构件容器结构：通用的构件运行和管理环境</li><li>构件的配置和打包规范：打包技术管理构件的二进制、多语言版本的可执行代码和配置信息，并制定了构建包的具体内容和文档内容标准。</li></ul></li><li>Sun的J2EE：同时支持<strong>远程方法调用RMI</strong>和<strong>互联网内部对象请求代理协议IIOP</strong></li><li>Microsoft DNA（Windows 分布式集成网络应用体系结构）：DCOM&#x2F;COM&#x2F;COM+在DNA 2000分步计算结构基础上，展现了一个全新的分布构件应用模型。<ul><li>COM：未本地的对象链接与嵌入应用服务；</li><li>DCOM&#x2F;COM&#x2F;COM+：扩充未面向服务器端分布应用的业务逻辑中间件</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-计算机基础1-硬件</title>
    <link href="/2025/07/17/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%801-%E7%A1%AC%E4%BB%B6/"/>
    <url>/2025/07/17/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%801-%E7%A1%AC%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F.png" alt="系统图"></p><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p><strong>冯诺依曼结构</strong>，整体结构可如图</p><ul><li>运算器</li><li>控制器</li><li>存储器</li><li>输入设备</li><li>输出设备<br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%86%AF%E8%AF%BA%E4%BE%9D%E6%9B%BC.png" alt="冯诺依曼"></li></ul><h1 id="处理器"><a href="#处理器" class="headerlink" title="处理器"></a>处理器</h1><p><strong>运算器</strong>和<strong>控制器</strong>是处理器的核心部件<br>指令集：复杂指令集CISC、精简指令集RISC<br>常见处理芯片：<strong>图形处理器GPU</strong>，<strong>信号处理器DSP</strong>，<strong>可编程逻辑门阵列FPGA</strong>等<br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%8C%87%E4%BB%A4%E9%9B%86.png" alt="指令集"></p><h1 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h1><p><strong>存储器</strong>：用于存储数据的电子设备。<br><strong>按硬件接口分分：</strong></p><ul><li>SRAM</li><li>DRAM</li><li>NVRAM</li><li>Flash</li><li>EPROM</li><li>Disk</li></ul><p><strong>按与处理器的物理距离分：</strong></p><ul><li>片上缓存：在处理器核心<strong>中</strong>，一般为SRAM，快速读取，容量小，16kB-512kB，可分一级或二级</li><li>片外缓存：在处理器核心<strong>外</strong>，需要交换互联开关，一般SRAM，256kB-4MB，称为L2Cache或L3Cache，平台Cache</li><li>主存（内存）：DRAM，独立部件&#x2F;芯片，通过<strong>总线</strong>与处理器连接。需要持续供电，数百MB-数十GB</li><li>外存：磁带、磁盘、Flash等，速度慢、容量大、掉电仍保存数据</li></ul><p><em>SRAM、DRAM掉电数据丢失。SRAM读取10-20ns，直接通过晶体管状态，面积大，成本高；DRAM读取50ns，通过充放电</em><br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%AD%98%E5%82%A8.png" alt="存储"></p><p><strong>时间局限性</strong>：指程序中某条指令一旦执行，不久以后该指令可能再次执行，典型原因是由于程序中存在大量的<em>循环操作</em><br><strong>空间局限性</strong>：指一旦程序访问了某个存储单元，不久之后，其附近的存储单元也将被访问，即程序在一段时间内所访问的地址可能集中在一定范围内，其典型情况是程序<em>顺序执行</em></p><h1 id="总线"><a href="#总线" class="headerlink" title="总线"></a>总线</h1><p><strong>总线</strong>：计算机内部间遵循某一特定协议实现数据交互的形式。总线之间通过【<strong>桥</strong>】实现连接，它是一种特殊的外设，主要实现<strong>总线协议间的转换</strong></p><ul><li>内总线：用于芯片内部互联，又称<strong>片上总线</strong>、<strong>片内总线</strong></li><li>系统总线：包括 数据总线、地址总线和控制总线<ul><li>狭义上：CPU、主存、IO接口的总线</li><li>广义上：经由系统总线再次级联的总线，常称为<strong>局部总线</strong></li></ul></li><li>外部总线：计算机板和外部设备，计算机系统之间互联的总线，又称<strong>通信总线</strong></li></ul><h2 id="性能指标"><a href="#性能指标" class="headerlink" title="性能指标"></a>性能指标</h2><ul><li>总线带宽</li><li>总线服务质量QoS</li><li>总线时延</li><li>总线抖动</li></ul><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><ul><li>并行总线：PCI、PCIe和ATA（IDE）</li><li>串行总线：USB、SATA、CAN、RS-232、RS-485、RapidIO和以太网</li></ul><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>接口是同一计算机不同功能层之间的通信规则</p><ul><li>显示类接口：HDMI、DVI、VGA</li><li>音频输入输出类接口：TRS、RCA、XLR</li><li>网络类接口：RJ45、FC</li><li>PS&#x2F;2接口</li><li>USB接口</li><li>SATA接口</li><li>LPT打印接口</li><li>RS-232接口</li></ul><p><strong>对于总线而言，一种总线可能存在多种接口</strong><br><img src="/images/%E6%9E%B6%E6%9E%84-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%88%E7%8E%87%E9%AB%98%E4%BD%8E.png" alt="系统图"></p>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>架构-软考之路</title>
    <link href="/2025/07/16/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E8%80%83%E4%B9%8B%E8%B7%AF/"/>
    <url>/2025/07/16/%E6%9E%B6%E6%9E%84/%E6%9E%B6%E6%9E%84-%E8%BD%AF%E8%80%83%E4%B9%8B%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<h2 id="软考日记"><a href="#软考日记" class="headerlink" title="软考日记"></a>软考日记</h2><p><strong>7.16</strong> 开始复习，计划今天看一遍408，网上找到了一个经验分享<br><a href="https://blog.csdn.net/pushiqiang/article/details/144618179">https://blog.csdn.net/pushiqiang/article/details/144618179</a><br>7.20 完成讲稿计算机基础讲稿+视频学习，<br>学习部分操作系统讲稿+视频<br>7.21 学完操作系统讲稿+视频，<br>开始学习数据库讲稿<br>7.22 学习数据库模型设计、关系代数等<br>7.23 学习数据库规划内容<br>7.24 学习数据库范式<br>7.25 学习数据库新技术<br>7.26 学习网络<br>7.27 学习网络<br>7.28 学习软件工程概述<br>7.29 学习软件工程工程<br>7.30 学习软件工程其他<br>7.31 学习数据库，听W老师视频</p><p><strong>8.31前完成录播课程，完成选择题，完成课后习题，达到正确率，刷题</strong><br><strong>10.15突破案例+论文，<br>案例视频、真题，陌生架构图，常规软件工程<br>论文一周一片，至少5篇</strong><br><strong>11.7 考试串讲，冲刺</strong><br>7.20-导读课</p>]]></content>
    
    
    <categories>
      
      <category>软考</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>古诗</title>
    <link href="/2025/07/09/%E5%B0%8F%E5%88%9D%E9%AB%98/%E5%8F%A4%E8%AF%97/"/>
    <url>/2025/07/09/%E5%B0%8F%E5%88%9D%E9%AB%98/%E5%8F%A4%E8%AF%97/</url>
    
    <content type="html"><![CDATA[<h2 id="春晓"><a href="#春晓" class="headerlink" title="春晓"></a>春晓</h2><p><strong>唐 孟浩然</strong><br>春眠不觉晓，处处闻啼鸟。<br>夜来风雨声，花落知多少。  </p><h2 id="江雪"><a href="#江雪" class="headerlink" title="江雪"></a>江雪</h2><p><strong>唐 柳宗元</strong><br>千山鸟飞绝，万径人踪灭。<br>孤舟蓑笠翁，独钓寒江雪。  </p><h2 id="清明"><a href="#清明" class="headerlink" title="清明"></a>清明</h2><p><strong>唐 杜牧</strong><br>清明时节雨纷纷，路上行人欲断魂<br>借问酒家何处有，牧童遥指杏花村  </p><h2 id="草"><a href="#草" class="headerlink" title="草"></a>草</h2><p><strong>唐 白居易</strong><br>离离原上草，一岁一枯荣。<br>野火烧不尽，春风吹又生。  </p><h2 id="登鹳雀楼"><a href="#登鹳雀楼" class="headerlink" title="登鹳雀楼"></a>登鹳雀楼</h2><p><strong>唐 王之涣</strong><br>白日依山尽，黄河入海流。<br>欲穷千里目，更上一层楼。  </p><h2 id="咏鹅"><a href="#咏鹅" class="headerlink" title="咏鹅"></a>咏鹅</h2><p><strong>唐 骆宾王</strong><br>鹅鹅鹅，曲项向天歌。<br>白毛浮绿水，红掌拨清波。  </p><h2 id="悯农"><a href="#悯农" class="headerlink" title="悯农"></a>悯农</h2><p><strong>唐 李绅</strong><br>锄禾日当午，汗滴禾下土。<br>谁知盘中餐，粒粒皆辛苦。  </p><h2 id="题临安邸"><a href="#题临安邸" class="headerlink" title="题临安邸"></a>题临安邸</h2><p><strong>宋 林升</strong><br>山外青山楼外楼，西湖歌舞几时休？<br>暖风熏得游人醉，直把杭州作汴州。  </p><h2 id="静夜思"><a href="#静夜思" class="headerlink" title="静夜思"></a>静夜思</h2><p><strong>唐 李白</strong><br>床前明月光，疑是地上霜。<br>举头望明月，低头思故乡。  </p><h2 id="梅花"><a href="#梅花" class="headerlink" title="梅花"></a>梅花</h2><p><strong>宋代 王安石</strong><br>墙角数枝梅，凌寒独自开。<br>遥知不是雪，为有暗香来。  </p><h2 id="游子吟"><a href="#游子吟" class="headerlink" title="游子吟"></a>游子吟</h2><p><strong>唐 孟郊</strong><br>慈母手中线，游子身上衣。<br>临行密密缝，意恐迟迟归。<br>谁言寸草心，报得三春晖。  </p><h2 id="望庐山瀑布"><a href="#望庐山瀑布" class="headerlink" title="望庐山瀑布"></a>望庐山瀑布</h2><p><strong>唐 李白</strong><br>日照香炉生紫烟，遥看瀑布挂前川。<br>飞流直下三千尺，疑是银河落九天。  </p><h2 id="早发白帝城"><a href="#早发白帝城" class="headerlink" title="早发白帝城"></a>早发白帝城</h2><p><strong>唐 李白</strong><br>朝辞白帝彩云间，千里江陵一日还。<br>两岸猿声啼不住，轻舟已过万重山。  </p><h2 id="红豆"><a href="#红豆" class="headerlink" title="红豆"></a>红豆</h2><p><strong>唐 王维</strong><br>红豆生南国，春来发几枝。<br>愿君多采撷，此物最相思。  </p><h2 id="秋浦歌"><a href="#秋浦歌" class="headerlink" title="秋浦歌"></a>秋浦歌</h2><p><strong>唐 李白</strong><br>白发三千丈，缘愁似个长。<br>不知明镜里，何处得秋霜。  </p><h2 id="夜宿山寺"><a href="#夜宿山寺" class="headerlink" title="夜宿山寺"></a>夜宿山寺</h2><p><strong>唐 李白</strong><br>危楼高百尺，手可摘星辰。<br>不敢高声语，恐惊天上人。  </p><h2 id="登鹳雀楼-1"><a href="#登鹳雀楼-1" class="headerlink" title="登鹳雀楼"></a>登鹳雀楼</h2><p><strong>唐 王之焕</strong><br>白日依山尽，黄河入海流。<br>欲穷千里目，更上一层楼。  </p><h2 id="赠汪伦"><a href="#赠汪伦" class="headerlink" title="赠汪伦"></a>赠汪伦</h2><p><strong>唐 李白</strong><br>李白乘舟将欲行，忽闻岸上踏歌声。<br>桃花潭水深千尺，不及汪伦送我情。  </p><h2 id="山村咏怀"><a href="#山村咏怀" class="headerlink" title="山村咏怀"></a>山村咏怀</h2><p><strong>宋 邵雍</strong><br>一去二三里，烟村四五家。<br>亭台六七座，八九十枝花。  </p><h2 id="出塞"><a href="#出塞" class="headerlink" title="出塞"></a>出塞</h2><p><strong>唐 王昌龄</strong><br>秦时明月汉时关，万里长征人未还。<br>但使龙城飞将在，不教胡马度阴山。<br>姑苏城外寒山寺，夜半钟声到客船。  </p>]]></content>
    
    
    <categories>
      
      <category>小初高</category>
      
    </categories>
    
    
    <tags>
      
      <tag>语文</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>群晖安装Tailscale</title>
    <link href="/2025/07/09/%E6%8A%80%E6%9C%AF%E6%9D%82%E7%B3%85/%E7%BE%A4%E6%99%96%E5%AE%89%E8%A3%85Tailscale/"/>
    <url>/2025/07/09/%E6%8A%80%E6%9C%AF%E6%9D%82%E7%B3%85/%E7%BE%A4%E6%99%96%E5%AE%89%E8%A3%85Tailscale/</url>
    
    <content type="html"><![CDATA[<p>NAS存储不够了，因此对其进行了扩容，好多插件都要重新安装，记录下Tailscale安装过程，其他插件直接修复就安装完毕了</p><h2 id="安装包下载"><a href="#安装包下载" class="headerlink" title="安装包下载"></a>安装包下载</h2><p>Tailscale按照说明套件中心应该存在，但是实际没找到，网上找到了下载地址，下载架构对应的版本即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">https://pkgs.tailscale.com/stable/#spks<br></code></pre></td></tr></table></figure><h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p>进入群晖套件中心–&gt;所有套件 右上角部分有个手动安装，安装后即可</p><h2 id="登录Tailscale"><a href="#登录Tailscale" class="headerlink" title="登录Tailscale"></a>登录Tailscale</h2><p>安装过程没任何问题，但是点击安装后图标，进行登录时报Failed Login，Google了报错原因，参考此文档解决，总结下来主要登录SSH，手动up</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">https://tailscale.com/kb/1131/synology<br></code></pre></td></tr></table></figure><p>详细步骤如下：<br>1.SSH登录Nas，涵盖开启端口、放通防火墙，putty连接等<br>2.执行以下命令，需要输入密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo tailscale up<br></code></pre></td></tr></table></figure><p>3.将输出地址在浏览器输入，按提示登录即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">To authenticate, visit:<br>https://login.tailscale.com/a/xxxxxxxxxx<br>Success.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术杂糅</category>
      
    </categories>
    
    
    <tags>
      
      <tag>群晖</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github Pages搭建Hexo博客</title>
    <link href="/2025/07/04/%E6%8A%80%E6%9C%AF%E6%9D%82%E7%B3%85/Github%20Pages%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
    <url>/2025/07/04/%E6%8A%80%E6%9C%AF%E6%9D%82%E7%B3%85/Github%20Pages%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>GitHub Actions 是 GitHub 推出的持续集成服务，入门教程可参考:GitHub Actions 入门教程。</p><h2 id="新建两个仓库"><a href="#新建两个仓库" class="headerlink" title="新建两个仓库"></a>新建两个仓库</h2><p>_www : 私有仓库，存储源代码内容，生成文件<br>xxx.github.io ： 公开仓库，主要存在编译后的public内容</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>1.获取 GH_TOKEN<br>首先到个人中心设置Setting-&gt;Developer Settings-&gt; Personal access tokens-&gt;tokens (classic)，新建一个token即可。<br>token 能让 GitHub Actions 构建所在的虚拟系统对发布仓库拥有权限可以进行推送操作。</p><p>2.设置 Actions Secrets<br>新建 _www 仓库，将本地目录的 hexo 源码推送到_www 仓库里，然后进到 _www 仓库的 Setting-&gt;secrets and variables -&gt;Actions 在Repository secrets里新建一个名为[ACCESS_TOKEN]的键值项，内容填上一步获取到的 token 值。</p><p>3.Actions 设置<br>在博客源码根目录下新建目录 .github&#x2F;workflows ,然后在其下新建任务文件 deploy.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Publish</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">to</span> <span class="hljs-string">gitpage</span><br><span class="hljs-attr">on:</span><br><span class="hljs-attr">push:</span><br>  <span class="hljs-attr">branches:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">main</span>  <span class="hljs-comment"># 如果源码与gitpage用同一仓库则修改为hexo源码对应分支</span><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">ref:</span> <span class="hljs-string">main</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">dependencies</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        npm install -g hexo-cli # 给虚拟机装上hexo运行环境</span><br><span class="hljs-string">        npm install             # 安装 package.json 中记录的所有插件</span><br><span class="hljs-string"></span>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Generate</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">site</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        hexo clean</span><br><span class="hljs-string">        hexo generate</span><br><span class="hljs-string"></span>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">to</span> <span class="hljs-string">B</span> <span class="hljs-string">repo</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">peaceiris/actions-gh-pages@v3</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">personal_token:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.ACCESS_TOKEN</span> <span class="hljs-string">&#125;&#125;</span> <span class="hljs-comment"># Personal access token</span><br>        <span class="hljs-attr">external_repository:</span> <span class="hljs-string">xxxx/xxxx.github.io</span>  <span class="hljs-comment"># 发布的仓库地址</span><br>        <span class="hljs-attr">PUBLISH_BRANCH:</span> <span class="hljs-string">main</span><br>        <span class="hljs-attr">PUBLISH_DIR:</span> <span class="hljs-string">./public</span><br></code></pre></td></tr></table></figure><p>4.至此所有的就完成了</p>]]></content>
    
    
    <categories>
      
      <category>技术杂糅</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE3+Canvas绘制五子棋（五）</title>
    <link href="/2024/12/17/%E6%B8%B8%E6%88%8F_%E4%BA%94%E5%AD%90%E6%A3%8B/VUE3-Canvas%E7%BB%98%E5%88%B6%E4%BA%94%E5%AD%90%E6%A3%8B%EF%BC%88%E4%BA%94%EF%BC%89/"/>
    <url>/2024/12/17/%E6%B8%B8%E6%88%8F_%E4%BA%94%E5%AD%90%E6%A3%8B/VUE3-Canvas%E7%BB%98%E5%88%B6%E4%BA%94%E5%AD%90%E6%A3%8B%EF%BC%88%E4%BA%94%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>在上次框架改版、引入pinpa的基础上，这次引入了AI下棋功能，这功能主要来自：<a href="https://github.com/lihongxun945/gobang">https://github.com/lihongxun945/gobang</a>   AI功能部分未进行任何变动，直接改了几个接口，直接引入即可。</p><p>本次设计代码较多，仍原来几个代码</p><p>本次主要重点引入的代码</p><p>minmax.worker.js，主要改自开源的代码，由react进行了微调，其中AI部分，直接从开源处将AI文件夹复制过来即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Board</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./ai/board&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123;minmax&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./ai/minmax&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123;<span class="hljs-variable constant_">DEFAULT_BOARD_SIZE</span>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/stores/status&#x27;</span>;<br><br><span class="hljs-comment">// @ts-ignore</span><br><span class="hljs-comment">// onmessage = function (event) &#123;</span><br><span class="hljs-comment">//   const &#123; action, payload &#125; = event.data;</span><br><span class="hljs-comment">//   console.log(event.data)</span><br><span class="hljs-comment">//   let res = null;</span><br><span class="hljs-comment">//   switch (action) &#123;</span><br><span class="hljs-comment">//     case &#x27;start&#x27;:</span><br><span class="hljs-comment">//       res = start(payload.board_size, payload.aiFirst, payload.depth);</span><br><span class="hljs-comment">//       break;</span><br><span class="hljs-comment">//     case &#x27;move&#x27;:</span><br><span class="hljs-comment">//       res = move(payload.position, payload.depth);</span><br><span class="hljs-comment">//       break;</span><br><span class="hljs-comment">//     case &#x27;undo&#x27;:</span><br><span class="hljs-comment">//       res = undo();</span><br><span class="hljs-comment">//       break;</span><br><span class="hljs-comment">//     case &#x27;end&#x27;:</span><br><span class="hljs-comment">//       res = end();</span><br><span class="hljs-comment">//       break;</span><br><span class="hljs-comment">//     default:</span><br><span class="hljs-comment">//       break;</span><br><span class="hljs-comment">//   &#125;</span><br><span class="hljs-comment">//   postMessage(&#123;</span><br><span class="hljs-comment">//     action,</span><br><span class="hljs-comment">//     payload: res,</span><br><span class="hljs-comment">//   &#125;);</span><br><span class="hljs-comment">// &#125;;</span><br><br><span class="hljs-keyword">let</span> board = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Board</span>(<span class="hljs-variable constant_">DEFAULT_BOARD_SIZE</span>);<br><span class="hljs-keyword">let</span> score = <span class="hljs-number">0</span>, bestPath = [], currentDepth = <span class="hljs-number">0</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">getBoardData</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-keyword">return</span> &#123;<br>        <span class="hljs-attr">board</span>: <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(board.<span class="hljs-property">board</span>)),<br>        <span class="hljs-attr">winner</span>: board.<span class="hljs-title function_">getWinner</span>(),<br>        <span class="hljs-attr">current_player</span>: board.<span class="hljs-property">role</span>,<br>        <span class="hljs-attr">history</span>: <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(board.<span class="hljs-property">history</span>)),<br>        <span class="hljs-attr">size</span>: board.<span class="hljs-property">size</span>,<br>        score,<br>        bestPath,<br>        currentDepth,<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">start</span> = (<span class="hljs-params">board_size, aiFirst = <span class="hljs-literal">true</span>, depth = <span class="hljs-number">4</span></span>) =&gt; &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;start&#x27;</span>, board_size, aiFirst, depth);<br>    board = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Board</span>(board_size);<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">if</span> (aiFirst) &#123;<br>            <span class="hljs-keyword">const</span> res = <span class="hljs-title function_">minmax</span>(board, board.<span class="hljs-property">role</span>, depth);<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;=====res=====&quot;</span> + res)<br>            <span class="hljs-keyword">let</span> move;<br>            [score, move, bestPath, currentDepth] = res;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;=========================&quot;</span>)<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(score)<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(move)<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(bestPath)<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(currentDepth)<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;=========================&quot;</span>)<br>            board.<span class="hljs-title function_">put</span>(move[<span class="hljs-number">0</span>], move[<span class="hljs-number">1</span>]);<br>            <span class="hljs-keyword">return</span> [move[<span class="hljs-number">0</span>], move[<span class="hljs-number">1</span>], board.<span class="hljs-property">role</span>]<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);<br>    &#125;<br>    <span class="hljs-comment">// return getBoardData();</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span><br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title function_">move</span> = (<span class="hljs-params">position, depth</span>) =&gt; &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;=====move====&quot;</span> + position)<br>    <span class="hljs-keyword">try</span> &#123;<br>        board.<span class="hljs-title function_">put</span>(position[<span class="hljs-number">0</span>], position[<span class="hljs-number">1</span>]);<br>    &#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);<br>    &#125;<br>    <span class="hljs-keyword">if</span> (!board.<span class="hljs-title function_">isGameOver</span>()) &#123;<br>        <span class="hljs-keyword">const</span> res = <span class="hljs-title function_">minmax</span>(board, board.<span class="hljs-property">role</span>, depth);<br>        <span class="hljs-keyword">let</span> move;<br>        [score, move, bestPath, currentDepth] = res;<br>        board.<span class="hljs-title function_">put</span>(move[<span class="hljs-number">0</span>], move[<span class="hljs-number">1</span>]);<br>        <span class="hljs-keyword">return</span> [move[<span class="hljs-number">0</span>], move[<span class="hljs-number">1</span>], board.<span class="hljs-property">role</span>]<br>    &#125;<br>    <span class="hljs-comment">// return getBoardData();</span><br>&#125;;<br><span class="hljs-comment">//</span><br><span class="hljs-comment">// export const end = () =&gt; &#123;</span><br><span class="hljs-comment">//   console.log(&quot;=====end====&quot;)</span><br><span class="hljs-comment">//   // do nothing</span><br><span class="hljs-comment">//   return getBoardData();</span><br><span class="hljs-comment">// &#125;;</span><br><span class="hljs-comment">//</span><br><span class="hljs-comment">// export const undo = () =&gt; &#123;</span><br><span class="hljs-comment">//   console.log(&quot;=====undo====&quot;)</span><br><span class="hljs-comment">//   board.undo();</span><br><span class="hljs-comment">//   board.undo();</span><br><span class="hljs-comment">//   return getBoardData();</span><br><span class="hljs-comment">// &#125;</span><br></code></pre></td></tr></table></figure><p>status.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//默认宽度</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">DEFAULT_BOARD_WIDTH</span> = <span class="hljs-number">375</span><br><span class="hljs-comment">//默认线条数</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">DEFAULT_BOARD_SIZE</span> = <span class="hljs-number">15</span><br><span class="hljs-comment">//默认间隙</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">DEFAULT_BOARD_SPACE</span> = <span class="hljs-number">25</span><br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">GameStatus</span> = &#123;<br>    <span class="hljs-comment">//就绪状态</span><br>    <span class="hljs-attr">IDLE</span>: <span class="hljs-string">&quot;idle&quot;</span>,<br>    <span class="hljs-comment">// 游戏中</span><br>    <span class="hljs-attr">GAMING</span>: <span class="hljs-string">&#x27;gaming&#x27;</span>,<br>    <span class="hljs-comment">// 已获胜</span><br>    <span class="hljs-attr">WINNING</span>: <span class="hljs-string">&#x27;winning&#x27;</span>,<br>    <span class="hljs-comment">// 重新开始</span><br>    <span class="hljs-attr">RESTART</span>: <span class="hljs-string">&#x27;restart&#x27;</span>,<br>&#125;<br><span class="hljs-comment">//黑棋子</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">PLAYER_BLACK</span> = -<span class="hljs-number">1</span><br><span class="hljs-comment">//白棋子</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">PLAYER_WHITE</span> = <span class="hljs-number">1</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">PlayerStatus</span> = &#123;<br>    <span class="hljs-comment">// 黑棋</span><br>    <span class="hljs-attr">BLACK</span>: <span class="hljs-variable constant_">PLAYER_BLACK</span>,<br>    <span class="hljs-comment">// 白棋</span><br>    <span class="hljs-attr">WHITE</span>: <span class="hljs-variable constant_">PLAYER_WHITE</span>,<br>&#125;<br></code></pre></td></tr></table></figure><p>chess.js  状态管理代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123;defineStore, acceptHMRUpdate&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><span class="hljs-keyword">import</span> &#123;<br>    <span class="hljs-title class_">PlayerStatus</span>,<br>    <span class="hljs-title class_">GameStatus</span>,<br>    <span class="hljs-variable constant_">DEFAULT_BOARD_WIDTH</span>,<br>    <span class="hljs-variable constant_">DEFAULT_BOARD_SIZE</span>,<br>    <span class="hljs-variable constant_">DEFAULT_BOARD_SPACE</span><br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/stores/status.js&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useChessStore = <span class="hljs-title function_">defineStore</span>(&#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;chess&#x27;</span>,<br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> (&#123;<br>        <span class="hljs-attr">status</span>: <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">IDLE</span>,<br>        <span class="hljs-attr">boardDetail</span>: &#123;<br>            <span class="hljs-attr">width</span>: <span class="hljs-variable constant_">DEFAULT_BOARD_WIDTH</span>,<span class="hljs-comment">//棋盘大小</span><br>            <span class="hljs-attr">size</span>: <span class="hljs-variable constant_">DEFAULT_BOARD_SIZE</span>,<span class="hljs-comment">//棋盘线数</span><br>            <span class="hljs-attr">space</span>: <span class="hljs-variable constant_">DEFAULT_BOARD_SPACE</span>,<span class="hljs-comment">//间隙</span><br>        &#125;,<br>        <span class="hljs-attr">current_player</span>: <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">BLACK</span>,<span class="hljs-comment">//默认黑子（-1）</span><br>        <span class="hljs-attr">board</span>: [],<span class="hljs-comment">//棋盘内容--Board包含</span><br>        <span class="hljs-attr">history</span>: [],<span class="hljs-comment">//--Board包含</span><br>        <span class="hljs-attr">size</span>: <span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-comment">//--Board包含</span><br>        <span class="hljs-attr">aiFirst</span>: <span class="hljs-literal">true</span>,<span class="hljs-comment">//AI先行</span><br>        <span class="hljs-attr">depth</span>: <span class="hljs-number">4</span>, <span class="hljs-comment">// 搜索深度</span><br>        <span class="hljs-attr">currentDepth</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-attr">path</span>: [],<br>        <span class="hljs-attr">winner</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>        <span class="hljs-attr">score</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>        <span class="hljs-attr">bestPath</span>: <span class="hljs-string">&#x27;&#x27;</span><br>    &#125;),<br>    <span class="hljs-attr">actions</span>: &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 初始化选手（黑）</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">initPayer</span>(<span class="hljs-params"></span>)&#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">current_player</span> =<span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">BLACK</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:初始化选手（黑）==初始化选手（黑）==,新:&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">current_player</span>)<br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 转换选手</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">reversePlayer</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">current_player</span> *= -<span class="hljs-number">1</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:reversePlayer==交换选手==,新:&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">current_player</span>)<br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 改变选手</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">s</span></span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">changePlayer</span>(<span class="hljs-params">s</span>) &#123;<br>            <span class="hljs-keyword">switch</span> (s) &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">BLACK</span>:<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">current_player</span> = <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">BLACK</span>;<br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">WHITE</span>:<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">current_player</span> = <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">WHITE</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-attr">default</span>:<br>            &#125;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:changePlayer==改变选手==,新:&quot;</span> + s)<br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 改变游戏状态</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">s</span></span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">changeGameStatus</span>(<span class="hljs-params">s</span>) &#123;<br>            <span class="hljs-keyword">switch</span> (s) &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">IDLE</span>:<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">status</span> = <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">IDLE</span>;<br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">GAMING</span>:<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">status</span> = <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">GAMING</span>;<br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">WINNING</span>:<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">status</span> = <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">WINNING</span>;<br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">RESTART</span>:<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">status</span> = <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">RESTART</span>;<br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-attr">default</span>:<br>            &#125;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:changeGameStatus==改变游戏状态==&quot;</span> + s)<br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 改变棋盘大小</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">w</span></span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">n</span></span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">s</span></span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">changeBoardDetail</span>(<span class="hljs-params">w, n, s</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span> = &#123;<br>                <span class="hljs-attr">width</span>: w,<span class="hljs-comment">//棋盘大小</span><br>                <span class="hljs-attr">size</span>: n,<span class="hljs-comment">//棋盘线数</span><br>                <span class="hljs-attr">space</span>: s,<span class="hljs-comment">//间隙</span><br>            &#125;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:changeBoardDetail==改变棋盘大小==&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>)<br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 初始化棋盘内容</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">initBoard</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">const</span> size = <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">size</span><br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span> = <span class="hljs-title class_">Array</span>(size).<span class="hljs-title function_">fill</span>().<span class="hljs-title function_">map</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-title class_">Array</span>(size).<span class="hljs-title function_">fill</span>(<span class="hljs-number">0</span>));<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:initBoard==初始化棋盘内容==\n&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>)<br><br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 修改棋盘内容</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">board</span></span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">changeBoard</span>(<span class="hljs-params">board</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span> = board<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:changeBoard==修改棋盘内容==\n&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>)<br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 清空棋盘内容</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">clearBoard</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">const</span> size = <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">size</span><br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span> = <span class="hljs-title class_">Array</span>(size).<span class="hljs-title function_">fill</span>().<span class="hljs-title function_">map</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-title class_">Array</span>(size).<span class="hljs-title function_">fill</span>(<span class="hljs-number">0</span>));<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:clearBoard==清空棋盘内容==&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>)<br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 清空历史内容</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">clearHistory</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">history</span> = []<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:clearBoard==清空历史内容==&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">history</span>)<br>        &#125;<br>    &#125;<br><br>&#125;)<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">hot</span>) &#123;<br>    <span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">hot</span>.<span class="hljs-title function_">accept</span>(<span class="hljs-title function_">acceptHMRUpdate</span>(useChessStore, <span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">hot</span>))<br>&#125;<br></code></pre></td></tr></table></figure><p>GoBang.vue  此部分代码和上次无太大差异</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">MainBoard</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./MainBoard.vue&#x27;</span></span><br><span class="language-javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">OperateBoard</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./OperateBoard.vue&#x27;</span></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">components</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-title class_">MainBoard</span>, <span class="hljs-title class_">OperateBoard</span></span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">created</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&quot;五子棋&quot;</span>;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;root-board&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">MainBoard</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">OperateBoard</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.root-board</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p>MainBoard  ci此部分整体框架和上次类似，功能描述上有调整</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">import</span> &#123;useChessStore&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/stores/chess.js&quot;</span>;</span><br><span class="language-javascript"><span class="hljs-keyword">import</span> &#123;<span class="hljs-title class_">GameStatus</span>, <span class="hljs-title class_">PlayerStatus</span>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/stores/status.js&quot;</span>;</span><br><span class="language-javascript"><span class="hljs-keyword">import</span> &#123;move, start&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/components/gobang/minmax.worker.js&quot;</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-comment">//加载store，便于全局使用</span></span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> chessStore = <span class="hljs-title function_">useChessStore</span>()</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            chessStore,</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">created</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-comment">//监视状态变化，以便监听【重置】状态</span></span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.$subscribe(<span class="hljs-function">(<span class="hljs-params">mutation, state</span>) =&gt;</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(mutation)</span></span><br><span class="language-javascript">            <span class="hljs-comment">//TODO 生产环境有问题，去掉了mutation.events.key === &quot;status&quot;</span></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (state.<span class="hljs-property">status</span> === <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">RESTART</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-comment">//检测到状态位RESTART，需要重置游戏</span></span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">restartGame</span>()</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-comment">// 实例创建完成，仅在首次加载时完成</span></span><br><span class="language-javascript">    <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">let</span> boardDetail = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span></span><br><span class="language-javascript">        <span class="hljs-comment">//TODO 清空基础数据，后续测试必要性</span></span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">initGame</span>()</span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawBoard</span>(boardDetail.<span class="hljs-property">width</span>,</span><br><span class="language-javascript">            boardDetail.<span class="hljs-property">size</span>,</span><br><span class="language-javascript">            boardDetail.<span class="hljs-property">space</span>);</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">    ,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 初始化游戏参数</span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">initGame</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">//清空基础数据并初始化</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">initPayer</span>()</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">initBoard</span>()</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">clearHistory</span>()</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">changeGameStatus</span>(<span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">IDLE</span>)</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 点击落子</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">e</span></span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">handleDropChess</span>(<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">//存在输赢以后或未开始前，不允许在落子</span></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">status</span> !== <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">GAMING</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> space = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">space</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> size = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">size</span></span><br><span class="language-javascript">            <span class="hljs-comment">// 计算棋子落在哪个方格中,并绘制棋子</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> cellX = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((e.<span class="hljs-property">offsetX</span>) / space);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> cellY = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((e.<span class="hljs-property">offsetY</span>) / space);</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawChess</span>(cellX, cellY)</span><br><span class="language-javascript">            <span class="hljs-comment">//判断输赢</span></span><br><span class="language-javascript">            <span class="hljs-keyword">let</span> winner = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">checkWinner</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">board</span>, size)</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (winner !== <span class="hljs-literal">null</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-comment">//代表此次操作有胜负，更新结果</span></span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">changeGameStatus</span>(<span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">WINNING</span>)</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(winner)</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-comment">//交换选手</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">reversePlayer</span>()</span><br><span class="language-javascript">            <span class="hljs-comment">//交由AI下棋</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">handleAIDrop</span>()</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * AI下棋</span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">handleAIDrop</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">//接下来交给AI出来，前面均由人为点击产生</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> history = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">history</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> h = history[history.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>]</span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(&quot;x=&quot; + h.x + &#x27; y=&#x27; + h.y)</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> res = <span class="hljs-title function_">move</span>([h.<span class="hljs-property">x</span>, h.<span class="hljs-property">y</span>], <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">depth</span>)</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawChess</span>(res[<span class="hljs-number">0</span>], res[<span class="hljs-number">1</span>])</span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(this.chessStore.board)</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==================AI下子结束=============&quot;</span>)</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">//判断输赢</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> size = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">size</span></span><br><span class="language-javascript">            <span class="hljs-keyword">let</span> winner = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">checkWinner</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">board</span>, size)</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(winner)</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (winner !== <span class="hljs-literal">null</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-comment">//代表此次操作有胜负，更新结果</span></span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">changeGameStatus</span>(<span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">WINNING</span>)</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(winner)</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">reversePlayer</span>()</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 画整体棋盘</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> width 所需棋盘整体大小，上下左右预留一半space空间</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> size 线条数，线条数*间距=width</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> space 间距</span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">drawBoard</span>(<span class="hljs-params">width, size, space</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> halfSpace = space / <span class="hljs-number">2</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-comment">// 设置线条颜色</span></span><br><span class="language-javascript">            ctx.<span class="hljs-property">strokeStyle</span> = <span class="hljs-string">&quot;black&quot;</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; size; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-comment">// 绘制横线</span></span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">beginPath</span>();</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">moveTo</span>(halfSpace, i * space + halfSpace);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">lineTo</span>(width - halfSpace, i * space + halfSpace);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">stroke</span>();</span><br><span class="language-javascript">                <span class="hljs-comment">// 绘制竖线</span></span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">beginPath</span>();</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">moveTo</span>(i * space + halfSpace, halfSpace);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">lineTo</span>(i * space + halfSpace, width - halfSpace);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">stroke</span>();</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">        ,</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 绘制棋子</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">x</span></span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">y</span></span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">drawChess</span>(<span class="hljs-params">x, y</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> detail = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> board = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">board</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> current_player = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">current_player</span></span><br><span class="language-javascript">            <span class="hljs-comment">//存在输赢以后，不允许在落子</span></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">status</span> !== <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">GAMING</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> lineNumber = detail.<span class="hljs-property">size</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> space = detail.<span class="hljs-property">space</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> halfSpace = space / <span class="hljs-number">2</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(event.offsetX + &#x27;   &#x27; + event.offsetY + &#x27;  &#x27; + space)</span></span><br><span class="language-javascript">            <span class="hljs-comment">// 判断该位置是否有棋子</span></span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(board)</span></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (board[x][y] !== <span class="hljs-number">0</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;该位置已有棋子&quot;</span>)</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-comment">//画带渐变色的棋子，同心圆形式</span></span><br><span class="language-javascript">            <span class="hljs-comment">//考虑起点为2，因半径为space一半，避免太大，截止1/3大小</span></span><br><span class="language-javascript">            <span class="hljs-keyword">let</span> grd = ctx.<span class="hljs-title function_">createRadialGradient</span>(</span><br><span class="language-javascript">                x * space + halfSpace,</span><br><span class="language-javascript">                y * space + halfSpace,</span><br><span class="language-javascript">                <span class="hljs-number">2</span>,</span><br><span class="language-javascript">                x * space + halfSpace,</span><br><span class="language-javascript">                y * space + halfSpace,</span><br><span class="language-javascript">                space / <span class="hljs-number">3</span></span><br><span class="language-javascript">            )</span><br><span class="language-javascript">            grd.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">0</span>,</span><br><span class="language-javascript">                current_player === <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">WHITE</span> ? <span class="hljs-string">&#x27;#FFFFFF&#x27;</span> : <span class="hljs-string">&#x27;#4C4C4C&#x27;</span>)</span><br><span class="language-javascript">            grd.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">1</span>,</span><br><span class="language-javascript">                current_player === <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">WHITE</span> ? <span class="hljs-string">&#x27;#DADADA&#x27;</span> : <span class="hljs-string">&#x27;#000000&#x27;</span>)</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">beginPath</span>()</span><br><span class="language-javascript">            ctx.<span class="hljs-property">fillStyle</span> = grd</span><br><span class="language-javascript">            <span class="hljs-comment">//画圆，半径设置为space/3，同上r1参数一致</span></span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">arc</span>(</span><br><span class="language-javascript">                x * space + halfSpace,</span><br><span class="language-javascript">                y * space + halfSpace,</span><br><span class="language-javascript">                space / <span class="hljs-number">3</span>,</span><br><span class="language-javascript">                <span class="hljs-number">0</span>,</span><br><span class="language-javascript">                <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,</span><br><span class="language-javascript">                <span class="hljs-literal">false</span></span><br><span class="language-javascript">            );</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">fill</span>();</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">closePath</span>();</span><br><span class="language-javascript">            board[x][y] = current_player; <span class="hljs-comment">//将黑白棋信息存储</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">board</span>)</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">history</span>.<span class="hljs-title function_">push</span>(&#123;x, y, current_player&#125;)</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">        ,</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 胜负检查</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> board X*X 二维数组</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> lineNumber 线条数</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">UnwrapRef&lt;string&gt;|null</span>&#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">checkWinner</span>(<span class="hljs-params">board, lineNumber</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> current_player = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">current_player</span></span><br><span class="language-javascript">            <span class="hljs-comment">// 检查横向是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; lineNumber; j++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (board[i][j] === current_player) &#123;</span><br><span class="language-javascript">                        count++;</span><br><span class="language-javascript">                    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                        count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> current_player;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 检查纵向是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; lineNumber; j++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber; i++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (board[i][j] === current_player) &#123;</span><br><span class="language-javascript">                        count++;</span><br><span class="language-javascript">                    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                        count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> current_player;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 检查右斜线是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber - <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; lineNumber - <span class="hljs-number">5</span>; j++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">5</span>; k++) &#123;</span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (board[i + k][j + k] === current_player) &#123;</span><br><span class="language-javascript">                            count++;</span><br><span class="language-javascript">                        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                            count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> current_player;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 检查左斜线是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber - <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">4</span>; j &lt; lineNumber; j++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">5</span>; k++) &#123;</span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (board[i + k][j - k] === current_player) &#123;</span><br><span class="language-javascript">                            count++;</span><br><span class="language-javascript">                        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                            count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> current_player;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 如果没有五子连线，则游戏继续</span></span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 重置游戏</span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">restartGame</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">//清空基础数据</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">initGame</span>()</span><br><span class="language-javascript">            <span class="hljs-comment">//清空画布</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> boardDetail = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>)</span><br><span class="language-javascript">            <span class="hljs-comment">//重新绘制，会初始化棋子信息</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawBoard</span>(boardDetail.<span class="hljs-property">width</span>,</span><br><span class="language-javascript">                boardDetail.<span class="hljs-property">size</span>,</span><br><span class="language-javascript">                boardDetail.<span class="hljs-property">space</span>);</span><br><span class="language-javascript">            <span class="hljs-comment">//开始处理游戏状态</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">changeGameStatus</span>(<span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">GAMING</span>)</span><br><span class="language-javascript">            <span class="hljs-comment">//根据情况自动下棋</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==================重新开始=============&quot;</span>)</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> res = <span class="hljs-title function_">start</span>(boardDetail.<span class="hljs-property">size</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">aiFirst</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">depth</span>)</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (res !=<span class="hljs-literal">null</span>)&#123;</span><br><span class="language-javascript">                <span class="hljs-comment">//代表AI先行，存在旗子，则进行绘制</span></span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawChess</span>(res[<span class="hljs-number">0</span>], res[<span class="hljs-number">1</span>])</span><br><span class="language-javascript">                <span class="hljs-comment">//交换选手</span></span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">reversePlayer</span>()</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-comment">// 无需交换棋子，直接黑子开始</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript"></span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main-board&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;board&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;board-chess&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;375&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;375&quot;</span></span><br><span class="hljs-tag">                @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;handleDropChess($event)&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.main-board</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">    <span class="hljs-attribute">align-items</span>: center;</span><br><span class="language-css">    <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.board-chess</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">border</span>: <span class="hljs-number">3px</span> solid black;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p>OperateBoard.vue 和上次类似</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">import</span> &#123;useChessStore&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/stores/chess.js&quot;</span>;</span><br><span class="language-javascript"><span class="hljs-keyword">import</span> &#123;<span class="hljs-title class_">GameStatus</span>, <span class="hljs-title class_">PlayerStatus</span>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/stores/status.js&quot;</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">const</span> chessStore = <span class="hljs-title function_">useChessStore</span>()</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            chessStore,</span><br><span class="language-javascript">            <span class="hljs-title class_">PlayerStatus</span>,</span><br><span class="language-javascript">            <span class="hljs-title class_">GameStatus</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 改变棋盘大小</span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">changeBoardDetail</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> square = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">width</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> newWidth = square</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> newHeight = square</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> newLineNumber = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">size</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> newSpace = newWidth / newLineNumber</span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(newWidth + &#x27;  &#x27; + newLineNumber + &#x27;  &#x27; + newSpace)</span></span><br><span class="language-javascript">            <span class="hljs-comment">//重新设置board大小</span></span><br><span class="language-javascript">            <span class="hljs-keyword">let</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>)</span><br><span class="language-javascript">            canvas.<span class="hljs-property">width</span> = newWidth</span><br><span class="language-javascript">            canvas.<span class="hljs-property">height</span> = newHeight</span><br><span class="language-javascript">            <span class="hljs-comment">//重新设置棋盘大小</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">changeBoardDetail</span>(newWidth, newLineNumber, newSpace)</span><br><span class="language-javascript">            <span class="hljs-comment">//重新绘制游戏</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">handleRestart</span>()</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 重新开始</span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">handleRestart</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">changeGameStatus</span>(<span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">RESTART</span>)</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">&#125;;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;operate-board&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;detail&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>长宽：<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;chessStore.boardDetail.width&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>线条数：<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;chessStore.boardDetail.size&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>间距：<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;chessStore.boardDetail.space&quot;</span> <span class="hljs-attr">disabled</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeBoardDetail()&quot;</span>&gt;</span>修改<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;operate&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>AI先手<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">checkbox</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;chessStore.aiFirst&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;handleRestart&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;chessStore.status===GameStatus.IDLE&quot;</span>&gt;</span>开始<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-else</span>&gt;</span>重新开始<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>当前落子：&#123;&#123; chessStore.current_player === PlayerStatus.WHITE ? &quot;白&quot; : &quot;黑&quot; &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>胜利方：&#123;&#123;<br>                        chessStore.status === GameStatus.WINNING ?<br>                            (chessStore.current_player === PlayerStatus.WHITE ? &quot;白棋&quot; : &quot;黑棋&quot;) : &quot;&quot;<br>                    &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.operate-board</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">10px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">text-align</span>: center;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.operate-board</span> <span class="hljs-selector-class">.detail</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.operate-board</span> <span class="hljs-selector-class">.detail</span> <span class="hljs-selector-tag">span</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">5px</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.operate-board</span> <span class="hljs-selector-class">.detail</span> <span class="hljs-selector-tag">input</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">40px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">5px</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.operate-board</span> <span class="hljs-selector-class">.operate</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">    <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="language-css">    <span class="hljs-attribute">text-align</span>: center;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.operate-board</span> <span class="hljs-selector-class">.operate</span> <span class="hljs-selector-tag">div</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">    <span class="hljs-attribute">text-align</span>: center;</span><br><span class="language-css">    <span class="hljs-attribute">align-items</span>: center;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-class">.operate-board</span> <span class="hljs-selector-class">.operate</span> <span class="hljs-selector-tag">div</span> <span class="hljs-selector-tag">button</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">10px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-class">.operate-board</span> <span class="hljs-selector-class">.operate</span> <span class="hljs-selector-tag">span</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">5px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术杂糅</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
      <tag>五子棋</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE3+Canvas绘制五子棋（四）</title>
    <link href="/2024/12/05/%E6%B8%B8%E6%88%8F_%E4%BA%94%E5%AD%90%E6%A3%8B/VUE3-Canvas%E7%BB%98%E5%88%B6%E4%BA%94%E5%AD%90%E6%A3%8B%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <url>/2024/12/05/%E6%B8%B8%E6%88%8F_%E4%BA%94%E5%AD%90%E6%A3%8B/VUE3-Canvas%E7%BB%98%E5%88%B6%E4%BA%94%E5%AD%90%E6%A3%8B%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>在上次拆分组件的前提下，现在引入了pinia状态管理</p><p>在此过程中，发现了一个问题，后改用了其他方式，比较简单粗暴。</p><p>生产环境报：Missing types in subscribe’s mutation.events</p><p>具体主要依托store来实现，也规范了几个状态变量</p><p>chess.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123;defineStore, acceptHMRUpdate&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><span class="hljs-keyword">import</span> &#123;<br>    <span class="hljs-title class_">PlayerStatus</span>,<br>    <span class="hljs-title class_">GameStatus</span>,<br>    <span class="hljs-variable constant_">DEFAULT_BOARD_WIDTH</span>,<br>    <span class="hljs-variable constant_">DEFAULT_BOARD_LINE_NUMBER</span>,<br>    <span class="hljs-variable constant_">DEFAULT_BOARD_SPACE</span><br>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/stores/status.js&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useChessStore = <span class="hljs-title function_">defineStore</span>(&#123;<br>    <span class="hljs-attr">id</span>: <span class="hljs-string">&#x27;chess&#x27;</span>,<br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> (&#123;<br>        <span class="hljs-attr">player</span>: <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">BLACK</span>,<br>        <span class="hljs-attr">status</span>: <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">GAMING</span>,<br>        <span class="hljs-attr">boardDetail</span>: &#123;<br>            <span class="hljs-attr">width</span>: <span class="hljs-variable constant_">DEFAULT_BOARD_WIDTH</span>,<span class="hljs-comment">//棋盘大小</span><br>            <span class="hljs-attr">lineNumber</span>: <span class="hljs-variable constant_">DEFAULT_BOARD_LINE_NUMBER</span>,<span class="hljs-comment">//棋盘线数</span><br>            <span class="hljs-attr">space</span>: <span class="hljs-variable constant_">DEFAULT_BOARD_SPACE</span>,<span class="hljs-comment">//间隙</span><br>        &#125;,<br>        <span class="hljs-attr">board</span>: []<br>    &#125;),<br>    <span class="hljs-attr">actions</span>: &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 交换选手</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">reversePlayer</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> === <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">BLACK</span> ?<br>                <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">WHITE</span> : <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">BLACK</span><br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:reversePlayer==交换选手==,新:&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>)<br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 改变当前棋手</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">s</span></span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">changePlayer</span>(<span class="hljs-params">s</span>) &#123;<br>            <span class="hljs-keyword">switch</span> (s) &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">BLACK</span>:<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> = <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">BLACK</span>;<br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">WHITE</span>:<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> = <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">WHITE</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-attr">default</span>:<br>            &#125;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:changePlayer==改变选手==,新:&quot;</span> + s)<br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 改变游戏状态</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">s</span></span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">changeGameStatus</span>(<span class="hljs-params">s</span>) &#123;<br>            <span class="hljs-keyword">switch</span> (s) &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">GAMING</span>:<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">status</span> = <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">GAMING</span>;<br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">WINNING</span>:<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">status</span> = <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">WINNING</span>;<br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">case</span> <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">RESTART</span>:<br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">status</span> = <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">RESTART</span>;<br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-attr">default</span>:<br>            &#125;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:changeGameStatus==改变游戏状态==&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">status</span>)<br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 改变棋盘大小</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">w</span></span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">n</span></span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">s</span></span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">changeBoardDetail</span>(<span class="hljs-params">w, n, s</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span> = &#123;<br>                <span class="hljs-attr">width</span>: w,<span class="hljs-comment">//棋盘大小</span><br>                <span class="hljs-attr">lineNumber</span>: n,<span class="hljs-comment">//棋盘线数</span><br>                <span class="hljs-attr">space</span>: s,<span class="hljs-comment">//间隙</span><br>            &#125;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:changeBoardDetail==改变棋盘大小==&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>)<br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 初始化棋盘内容</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">initBoard</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span> = []<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">lineNumber</span>; i++) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>.<span class="hljs-title function_">push</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">lineNumber</span>).<span class="hljs-title function_">fill</span>(<span class="hljs-number">0</span>))<br>            &#125;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:initBoard==初始化棋盘内容==&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>)<br><br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 清空棋盘内容</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">clearBoard</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span> = []<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;==action:clearBoard==清空棋盘内容==&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>)<br>        &#125;<br>    &#125;<br><br>&#125;)<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">hot</span>) &#123;<br>    <span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">hot</span>.<span class="hljs-title function_">accept</span>(<span class="hljs-title function_">acceptHMRUpdate</span>(useChessStore, <span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">hot</span>))<br>&#125;<br></code></pre></td></tr></table></figure><p>status.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">DEFAULT_BOARD_WIDTH</span> = <span class="hljs-number">600</span><span class="hljs-comment">//默认宽度</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">DEFAULT_BOARD_LINE_NUMBER</span> = <span class="hljs-number">15</span><span class="hljs-comment">//默认线条数</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">DEFAULT_BOARD_SPACE</span> = <span class="hljs-number">40</span> <span class="hljs-comment">//默认间隙</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">GameStatus</span> = &#123;<br>    <span class="hljs-attr">GAMING</span>: <span class="hljs-string">&#x27;gaming&#x27;</span>, <span class="hljs-comment">// 游戏中</span><br>    <span class="hljs-attr">WINNING</span>: <span class="hljs-string">&#x27;winning&#x27;</span>, <span class="hljs-comment">// 已获胜</span><br>    <span class="hljs-attr">RESTART</span>: <span class="hljs-string">&#x27;restart&#x27;</span>, <span class="hljs-comment">// 已获胜</span><br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-title class_">PlayerStatus</span> = &#123;<br>    <span class="hljs-attr">BLACK</span>: <span class="hljs-string">&#x27;BLACK&#x27;</span>, <span class="hljs-comment">// 黑棋</span><br>    <span class="hljs-attr">WHITE</span>: <span class="hljs-string">&#x27;WHITE&#x27;</span>, <span class="hljs-comment">// 白棋</span><br>&#125;<br></code></pre></td></tr></table></figure><p>完整代码如下：</p><p>GoBang.vue</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">MainBoard</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./MainBoard.vue&#x27;</span></span><br><span class="language-javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">OperateBoard</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./OperateBoard.vue&#x27;</span></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> &#123;&#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">components</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-title class_">MainBoard</span>, <span class="hljs-title class_">OperateBoard</span></span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">created</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&quot;五子棋&quot;</span>;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;root-board&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">MainBoard</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">OperateBoard</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.root-board</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p>MainBoard.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-keyword">import</span> &#123;useChessStore&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/stores/chess.js&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;<span class="hljs-title class_">GameStatus</span>, <span class="hljs-title class_">PlayerStatus</span>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/stores/status.js&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;storeToRefs&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia&#x27;</span><br><span class="hljs-keyword">import</span> &#123;watch&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>    <span class="hljs-attr">props</span>: &#123;&#125;,<br>    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> &#123;&#125;;<br>    &#125;,<br>    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> chessStore = <span class="hljs-title function_">useChessStore</span>()<br>        <span class="hljs-keyword">return</span> &#123;<br>            chessStore,<br>        &#125;<br>    &#125;,<br>    <span class="hljs-title function_">created</span>(<span class="hljs-params"></span>) &#123;<br><br>        <span class="hljs-comment">//监视状态变化，以便监听重置等情况</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.$subscribe(<span class="hljs-function">(<span class="hljs-params">mutation, state</span>) =&gt;</span> &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(mutation)<span class="hljs-comment">// 传递给 cartStore.$patch() 的补丁对象。</span><br>            <span class="hljs-comment">//TODO 生产环境有问题，去掉了mutation.events.key === &quot;status&quot;</span><br>            <span class="hljs-keyword">if</span> (state.<span class="hljs-property">status</span> === <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">RESTART</span>) &#123;<br>                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">restartGame</span>()<br>            &#125;<br>        &#125;)<br>    &#125;,<br><br>    <span class="hljs-comment">// 实例创建完成，仅在首次加载时完成</span><br>    <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">let</span> boardDetail = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span><br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawBoard</span>(boardDetail.<span class="hljs-property">width</span>,<br>            boardDetail.<span class="hljs-property">lineNumber</span>,<br>            boardDetail.<span class="hljs-property">space</span>);<br>    &#125;<br>    ,<br>    <span class="hljs-attr">methods</span>: &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 画整体棋盘</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> width 所需棋盘整体大小，上下左右预留一半space空间</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> lineNumber 线条数，线条数*间距=width</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> space 间距</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">drawBoard</span>(<span class="hljs-params">width, lineNumber, space</span>) &#123;<br>            <span class="hljs-keyword">const</span> halfSpace = space / <span class="hljs-number">2</span>;<br><br>            <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);<br>            <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);<br>            <span class="hljs-comment">// 设置线条颜色</span><br>            ctx.<span class="hljs-property">strokeStyle</span> = <span class="hljs-string">&quot;black&quot;</span>;<br><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber; i++) &#123;<br>                <span class="hljs-comment">// 绘制横线</span><br>                ctx.<span class="hljs-title function_">beginPath</span>();<br>                ctx.<span class="hljs-title function_">moveTo</span>(halfSpace, i * space + halfSpace);<br>                ctx.<span class="hljs-title function_">lineTo</span>(width - halfSpace, i * space + halfSpace);<br>                ctx.<span class="hljs-title function_">stroke</span>();<br>                <span class="hljs-comment">// 绘制竖线</span><br>                ctx.<span class="hljs-title function_">beginPath</span>();<br>                ctx.<span class="hljs-title function_">moveTo</span>(i * space + halfSpace, halfSpace);<br>                ctx.<span class="hljs-title function_">lineTo</span>(i * space + halfSpace, width - halfSpace);<br>                ctx.<span class="hljs-title function_">stroke</span>();<br>            &#125;<br>            <span class="hljs-comment">//填充数组，重置为0</span><br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">initBoard</span>()<br>        &#125;<br>        ,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 监听每步棋子，需要传入棋盘信息</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">event</span></span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">handleClickAndDraw</span>(<span class="hljs-params">event</span>) &#123;<br>            <span class="hljs-keyword">const</span> detail = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span><br>            <span class="hljs-keyword">const</span> board = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">board</span><br>            <span class="hljs-keyword">const</span> player = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">player</span><br>            <span class="hljs-comment">//存在输赢以后，不允许在落子</span><br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">status</span> !== <span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">GAMING</span>) &#123;<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">const</span> lineNumber = detail.<span class="hljs-property">lineNumber</span><br>            <span class="hljs-keyword">const</span> space = detail.<span class="hljs-property">space</span><br>            <span class="hljs-keyword">const</span> halfSpace = space / <span class="hljs-number">2</span>;<br><br>            <span class="hljs-comment">// 计算棋子落在哪个方格中</span><br>            <span class="hljs-keyword">const</span> cellX = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((event.<span class="hljs-property">offsetX</span>) / space);<br>            <span class="hljs-keyword">const</span> cellY = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((event.<span class="hljs-property">offsetY</span>) / space);<br>            <span class="hljs-comment">// console.log(event.offsetX + &#x27;   &#x27; + event.offsetY + &#x27;  &#x27; + space)</span><br>            <span class="hljs-comment">// 判断该位置是否有棋子</span><br>            <span class="hljs-comment">// console.log(board)</span><br>            <span class="hljs-keyword">if</span> (board[cellX][cellY] !== <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;该位置已有棋子&quot;</span>)<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);<br>            <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);<br>            <span class="hljs-comment">//画带渐变色的棋子，同心圆形式</span><br>            <span class="hljs-comment">//考虑起点为2，因半径为space一半，避免太大，截止1/3大小</span><br>            <span class="hljs-keyword">let</span> grd = ctx.<span class="hljs-title function_">createRadialGradient</span>(<br>                cellX * space + halfSpace,<br>                cellY * space + halfSpace,<br>                <span class="hljs-number">2</span>,<br>                cellX * space + halfSpace,<br>                cellY * space + halfSpace,<br>                space / <span class="hljs-number">3</span><br>            )<br>            grd.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">0</span>,<br>                player === <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">WHITE</span> ? <span class="hljs-string">&#x27;#FFFFFF&#x27;</span> : <span class="hljs-string">&#x27;#4C4C4C&#x27;</span>)<br>            grd.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">1</span>,<br>                player === <span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">WHITE</span> ? <span class="hljs-string">&#x27;#DADADA&#x27;</span> : <span class="hljs-string">&#x27;#000000&#x27;</span>)<br>            ctx.<span class="hljs-title function_">beginPath</span>()<br>            ctx.<span class="hljs-property">fillStyle</span> = grd<br>            <span class="hljs-comment">//画圆，半径设置为space/3，同上r1参数一致</span><br>            ctx.<span class="hljs-title function_">arc</span>(<br>                cellX * space + halfSpace,<br>                cellY * space + halfSpace,<br>                space / <span class="hljs-number">3</span>,<br>                <span class="hljs-number">0</span>,<br>                <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,<br>                <span class="hljs-literal">false</span><br>            );<br>            ctx.<span class="hljs-title function_">fill</span>();<br>            ctx.<span class="hljs-title function_">closePath</span>();<br>            board[cellX][cellY] = player; <span class="hljs-comment">//将黑白棋信息存储</span><br><br>            <span class="hljs-keyword">const</span> winner_current = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">checkWinner</span>(board, lineNumber) <span class="hljs-comment">//判断输赢</span><br>            <span class="hljs-keyword">if</span> (winner_current !== <span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-comment">//代表此次操作有胜负，更新结果</span><br>                <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">changeGameStatus</span>(<span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">WINNING</span>)<br>                <span class="hljs-title function_">alert</span>(winner_current)<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>            <span class="hljs-comment">//通知父组件，修改了选手内容值</span><br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">reversePlayer</span>()<span class="hljs-comment">//交换</span><br>        &#125;<br>        ,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 胜负检查</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> board X*X 二维数组</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@param</span> lineNumber 线条数</span><br><span class="hljs-comment">         * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">UnwrapRef&lt;string&gt;|null</span>&#125;</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">checkWinner</span>(<span class="hljs-params">board, lineNumber</span>) &#123;<br>            <span class="hljs-keyword">const</span> player = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">player</span><br>            <span class="hljs-comment">// 检查横向是否有五子连线</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber; i++) &#123;<br>                <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; lineNumber; j++) &#123;<br>                    <span class="hljs-keyword">if</span> (board[i][j] === player) &#123;<br>                        count++;<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        count = <span class="hljs-number">0</span>;<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> player;<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-comment">// 检查纵向是否有五子连线</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; lineNumber; j++) &#123;<br>                <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber; i++) &#123;<br>                    <span class="hljs-keyword">if</span> (board[i][j] === player) &#123;<br>                        count++;<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        count = <span class="hljs-number">0</span>;<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> player;<br><br>                &#125;<br>            &#125;<br><br>            <span class="hljs-comment">// 检查右斜线是否有五子连线</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber - <span class="hljs-number">5</span>; i++) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; lineNumber - <span class="hljs-number">5</span>; j++) &#123;<br>                    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">5</span>; k++) &#123;<br>                        <span class="hljs-keyword">if</span> (board[i + k][j + k] === player) &#123;<br>                            count++;<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            count = <span class="hljs-number">0</span>;<br>                        &#125;<br><br>                        <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> player;<br><br>                    &#125;<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-comment">// 检查左斜线是否有五子连线</span><br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber - <span class="hljs-number">5</span>; i++) &#123;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">4</span>; j &lt; lineNumber; j++) &#123;<br>                    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">5</span>; k++) &#123;<br>                        <span class="hljs-keyword">if</span> (board[i + k][j - k] === player) &#123;<br>                            count++;<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            count = <span class="hljs-number">0</span>;<br>                        &#125;<br><br>                        <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> player;<br>                    &#125;<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-comment">// 如果没有五子连线，则游戏继续</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 重置游戏</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">restartGame</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">const</span> boardDetail = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span><br>            <span class="hljs-comment">//清空基础数据</span><br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">changePlayer</span>(<span class="hljs-title class_">PlayerStatus</span>.<span class="hljs-property">BLACK</span>)<br>            <span class="hljs-comment">//清空画布</span><br>            <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);<br>            <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);<br>            ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>)<br>            <span class="hljs-comment">//重新绘制，会初始化棋子信息</span><br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawBoard</span>(boardDetail.<span class="hljs-property">width</span>,<br>                boardDetail.<span class="hljs-property">lineNumber</span>,<br>                boardDetail.<span class="hljs-property">space</span>);<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">changeGameStatus</span>(<span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">GAMING</span>)<br>        &#125;<br>        ,<br>    &#125;<br>&#125;<br>;<br>&lt;/script&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main-board&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;board&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;board-chess&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;600&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;600&quot;</span></span></span><br><span class="hljs-tag"><span class="language-xml">                @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;handleClickAndDraw($event)&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.main-board</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">display</span>: flex;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">align-items</span>: center;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">justify-content</span>: center;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.board-chess</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">border</span>: <span class="hljs-number">3px</span> solid black;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>OperateBoard.vue</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&lt;script&gt;<br><span class="hljs-keyword">import</span> &#123;useChessStore&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/stores/chess.js&quot;</span>;<br><span class="hljs-keyword">import</span> &#123;<span class="hljs-title class_">GameStatus</span>, <span class="hljs-title class_">PlayerStatus</span>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/stores/status.js&quot;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>    <span class="hljs-attr">props</span>: &#123;&#125;,<br>    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> &#123;&#125;;<br>    &#125;,<br>    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">const</span> chessStore = <span class="hljs-title function_">useChessStore</span>()<br>        <span class="hljs-keyword">return</span> &#123;<br>            chessStore,<br>            <span class="hljs-title class_">PlayerStatus</span>,<br>            <span class="hljs-title class_">GameStatus</span><br>        &#125;<br>    &#125;,<br><br>    <span class="hljs-attr">methods</span>: &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 改变棋盘大小</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">changeBoardDetail</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-keyword">const</span> square = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">width</span><br>            <span class="hljs-keyword">const</span> newWidth = square<br>            <span class="hljs-keyword">const</span> newHeight = square<br>            <span class="hljs-keyword">const</span> newLineNumber = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">lineNumber</span><br>            <span class="hljs-keyword">const</span> newSpace = newWidth / newLineNumber<br>            <span class="hljs-comment">// console.log(newWidth + &#x27;  &#x27; + newLineNumber + &#x27;  &#x27; + newSpace)</span><br>            <span class="hljs-comment">//重新设置board大小</span><br>            <span class="hljs-keyword">let</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>)<br>            canvas.<span class="hljs-property">width</span> = newWidth<br>            canvas.<span class="hljs-property">height</span> = newHeight<br>            <span class="hljs-comment">//重新设置棋盘大小</span><br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">changeBoardDetail</span>(newWidth, newLineNumber, newSpace)<br>            <span class="hljs-comment">//重新绘制游戏</span><br>            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">handleRestart</span>()<br>        &#125;,<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 重新开始</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-title function_">handleRestart</span>(<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">changeGameStatus</span>(<span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">RESTART</span>)<br>        &#125;<br>    &#125;<br>&#125;;<br>&lt;/script&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;operate-board&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;detail&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>长宽：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;chessStore.boardDetail.width&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>线条数：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;chessStore.boardDetail.lineNumber&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>间距：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;chessStore.boardDetail.space&quot;</span> <span class="hljs-attr">disabled</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeBoardDetail()&quot;</span>&gt;</span>修改<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;operate&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;handleRestart&quot;</span>&gt;</span>重新开始<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>当前落子：&#123;&#123; chessStore.player === PlayerStatus.WHITE ? &quot;白&quot; : &quot;黑&quot; &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>胜利方：&#123;&#123;</span><br><span class="language-xml">                    chessStore.status === GameStatus.WINNING ?</span><br><span class="language-xml">                        (chessStore.player === PlayerStatus.WHITE ? &quot;白棋&quot; : &quot;黑棋&quot;) : &quot;&quot;</span><br><span class="language-xml">                &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.operate-board</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">10px</span>;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">text-align</span>: center;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.operate-board</span> <span class="hljs-selector-class">.detail</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.operate-board</span> <span class="hljs-selector-class">.detail</span> &gt; <span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">input</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.operate-board</span> <span class="hljs-selector-class">.detail</span> <span class="hljs-selector-tag">span</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">5px</span> <span class="hljs-number">0</span>;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123;useChessStore&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/stores/chess.js&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123;<span class="hljs-title class_">GameStatus</span>, <span class="hljs-title class_">PlayerStatus</span>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/stores/status.js&quot;</span>;</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">props</span>: &#123;&#125;,</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">return</span> &#123;&#125;;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">const</span> chessStore = <span class="hljs-title function_">useChessStore</span>()</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-keyword">return</span> &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            chessStore,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title class_">PlayerStatus</span>,</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-title class_">GameStatus</span></span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;,</span></span><br><span class="language-javascript"><span class="language-xml"></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-attr">methods</span>: &#123;</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">/**</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">         * 改变棋盘大小</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">         */</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title function_">changeBoardDetail</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-keyword">const</span> square = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">width</span></span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-keyword">const</span> newWidth = square</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-keyword">const</span> newHeight = square</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-keyword">const</span> newLineNumber = <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">lineNumber</span></span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-keyword">const</span> newSpace = newWidth / newLineNumber</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-comment">// console.log(newWidth + &#x27;  &#x27; + newLineNumber + &#x27;  &#x27; + newSpace)</span></span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-comment">//重新设置board大小</span></span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-keyword">let</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>)</span></span><br><span class="language-javascript"><span class="language-xml">            canvas.<span class="hljs-property">width</span> = newWidth</span></span><br><span class="language-javascript"><span class="language-xml">            canvas.<span class="hljs-property">height</span> = newHeight</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-comment">//重新设置棋盘大小</span></span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">changeBoardDetail</span>(newWidth, newLineNumber, newSpace)</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-comment">//重新绘制游戏</span></span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">handleRestart</span>()</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;,</span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-comment">/**</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">         * 重新开始</span></span></span><br><span class="hljs-comment"><span class="language-javascript"><span class="language-xml">         */</span></span></span><br><span class="language-javascript"><span class="language-xml">        <span class="hljs-title function_">handleRestart</span>(<span class="hljs-params"></span>) &#123;</span></span><br><span class="language-javascript"><span class="language-xml">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">chessStore</span>.<span class="hljs-title function_">changeGameStatus</span>(<span class="hljs-title class_">GameStatus</span>.<span class="hljs-property">RESTART</span>)</span></span><br><span class="language-javascript"><span class="language-xml">        &#125;</span></span><br><span class="language-javascript"><span class="language-xml">    &#125;</span></span><br><span class="language-javascript"><span class="language-xml">&#125;;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;operate-board&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;detail&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>长宽：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;chessStore.boardDetail.width&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>线条数：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;chessStore.boardDetail.lineNumber&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>间距：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;chessStore.boardDetail.space&quot;</span> <span class="hljs-attr">disabled</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeBoardDetail()&quot;</span>&gt;</span>修改<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;operate&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;handleRestart&quot;</span>&gt;</span>重新开始<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>当前落子：&#123;&#123; chessStore.player === PlayerStatus.WHITE ? &quot;白&quot; : &quot;黑&quot; &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>胜利方：&#123;&#123;</span><br><span class="language-xml">                    chessStore.status === GameStatus.WINNING ?</span><br><span class="language-xml">                        (chessStore.player === PlayerStatus.WHITE ? &quot;白棋&quot; : &quot;黑棋&quot;) : &quot;&quot;</span><br><span class="language-xml">                &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.operate-board</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">10px</span>;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">text-align</span>: center;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.operate-board</span> <span class="hljs-selector-class">.detail</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span> <span class="hljs-number">0</span>;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.operate-board</span> <span class="hljs-selector-class">.detail</span> &gt; <span class="hljs-selector-tag">span</span> <span class="hljs-selector-tag">input</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.operate-board</span> <span class="hljs-selector-class">.detail</span> <span class="hljs-selector-tag">span</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">5px</span> <span class="hljs-number">0</span>;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术杂糅</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
      <tag>五子棋</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE3+Canvas绘制五子棋（三）</title>
    <link href="/2024/11/29/%E6%B8%B8%E6%88%8F_%E4%BA%94%E5%AD%90%E6%A3%8B/VUE3-Canvas%E7%BB%98%E5%88%B6%E4%BA%94%E5%AD%90%E6%A3%8B%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <url>/2024/11/29/%E6%B8%B8%E6%88%8F_%E4%BA%94%E5%AD%90%E6%A3%8B/VUE3-Canvas%E7%BB%98%E5%88%B6%E4%BA%94%E5%AD%90%E6%A3%8B%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>利用下午的时间，对这个程序进行了优化，主要拆解成组件形式，大致分为2个部分。1个部分为棋盘主要内容；1个部分为棋盘控制部分。在此过程中不断的了解了：</p><p>1、父组件传递子组件值</p><p>2、子组件修改父组件值</p><p>3、监听某个值的变化，如重新开始restart</p><p>4、也对新旧VUE产生了一定的想法，后续在琢磨怎么实现的了，想引入状态管理</p><p>【GoBang.vue】：主要布局组件，该组件主要引入上面所说的两个组件，并提取部分公共变量至此</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">MainBoard</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./MainBoard.vue&#x27;</span></span><br><span class="language-javascript"><span class="hljs-keyword">import</span> <span class="hljs-title class_">OperateBoard</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./OperateBoard.vue&#x27;</span></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">player</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//1--白棋；2--黑棋</span></span><br><span class="language-javascript">            <span class="hljs-attr">winner</span>: <span class="hljs-number">0</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">restart</span>: <span class="hljs-literal">false</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">boardDetail</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">width</span>: <span class="hljs-number">600</span>,<span class="hljs-comment">//棋盘大小</span></span><br><span class="language-javascript">                <span class="hljs-attr">lineNumber</span>: <span class="hljs-number">20</span>,<span class="hljs-comment">//棋盘线数</span></span><br><span class="language-javascript">                <span class="hljs-attr">space</span>: <span class="hljs-number">30</span>,<span class="hljs-comment">//间隙</span></span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">components</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-title class_">MainBoard</span>, <span class="hljs-title class_">OperateBoard</span></span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">created</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&quot;五子棋&quot;</span>;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">watch</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-title function_">restart</span>(<span class="hljs-params">nV, oV</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (nV) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> = <span class="hljs-number">1</span></span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">winner</span> = <span class="hljs-number">0</span></span><br><span class="language-javascript">                <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;</span><br><span class="language-javascript">                    <span class="hljs-comment">//设置一个1秒延时，用于子组件捕获数据变化</span></span><br><span class="language-javascript">                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">restart</span> = <span class="hljs-literal">false</span></span><br><span class="language-javascript">                &#125;, <span class="hljs-number">1000</span>)</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;root-board&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">MainBoard</span> <span class="hljs-attr">:boardDetail</span>=<span class="hljs-string">&quot;boardDetail&quot;</span></span><br><span class="hljs-tag">                   <span class="hljs-attr">v-model:player</span>=<span class="hljs-string">&quot;player&quot;</span></span><br><span class="hljs-tag">                   <span class="hljs-attr">v-model:winner</span>=<span class="hljs-string">&quot;winner&quot;</span></span><br><span class="hljs-tag">                   <span class="hljs-attr">v-model:restart</span>=<span class="hljs-string">&quot;restart&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">OperateBoard</span> <span class="hljs-attr">v-model:boardDetail</span>=<span class="hljs-string">&quot;boardDetail&quot;</span></span><br><span class="hljs-tag">                     <span class="hljs-attr">:player</span>=<span class="hljs-string">&quot;player&quot;</span></span><br><span class="hljs-tag">                     <span class="hljs-attr">:winner</span>=<span class="hljs-string">&quot;winner&quot;</span></span><br><span class="hljs-tag">                     <span class="hljs-attr">v-model:restart</span>=<span class="hljs-string">&quot;restart&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.root-board</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">    <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="language-css">    <span class="hljs-attribute">align-content</span>: center;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p>【MainBoard.vue】主要用于下棋的部分，逻辑和之前一样，数据传输形式变了，感觉变复杂了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">props</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">boardDetail</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">type</span>: <span class="hljs-title class_">Object</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">default</span>: [],</span><br><span class="language-javascript">            <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">player</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">default</span>: <span class="hljs-number">1</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">winner</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">default</span>: <span class="hljs-number">0</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">restart</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">type</span>: <span class="hljs-title class_">Boolean</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">default</span>: <span class="hljs-literal">false</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">board</span>: [],</span><br><span class="language-javascript">        &#125;;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">watch</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-title function_">restart</span>(<span class="hljs-params">nV, oV</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">//监听restart重绘命令，以便重新绘制</span></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (nV) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">restartGame</span>()</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-comment">// 实例创建完成，仅在首次加载时完成</span></span><br><span class="language-javascript">    <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">let</span> boardDetail = <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span></span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawBoard</span>(boardDetail.<span class="hljs-property">width</span>,</span><br><span class="language-javascript">            boardDetail.<span class="hljs-property">lineNumber</span>,</span><br><span class="language-javascript">            boardDetail.<span class="hljs-property">space</span>);</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 画整体棋盘</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> width 所需棋盘整体大小，上下左右预留一半space空间</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> lineNumber 线条数，线条数*间距=width</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> space 间距</span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">drawBoard</span>(<span class="hljs-params">width, lineNumber, space</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> halfSpace = space / <span class="hljs-number">2</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-comment">// 设置线条颜色</span></span><br><span class="language-javascript">            ctx.<span class="hljs-property">strokeStyle</span> = <span class="hljs-string">&quot;black&quot;</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-comment">// 绘制横线</span></span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">beginPath</span>();</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">moveTo</span>(halfSpace, i * space + halfSpace);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">lineTo</span>(width - halfSpace, i * space + halfSpace);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">stroke</span>();</span><br><span class="language-javascript">                <span class="hljs-comment">// 绘制竖线</span></span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">beginPath</span>();</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">moveTo</span>(i * space + halfSpace, halfSpace);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">lineTo</span>(i * space + halfSpace, width - halfSpace);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">stroke</span>();</span><br><span class="language-javascript">                <span class="hljs-comment">//填充数组，重置为0</span></span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>.<span class="hljs-title function_">push</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(lineNumber).<span class="hljs-title function_">fill</span>(<span class="hljs-number">0</span>))</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 监听每步棋子，需要传入棋盘信息</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">event</span></span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> detail 棋盘信息</span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">handleClickAndDraw</span>(<span class="hljs-params">event, detail</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">//存在输赢以后，不允许在落子</span></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">winner</span> !== <span class="hljs-number">0</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> lineNumber = detail.<span class="hljs-property">lineNumber</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> space = detail.<span class="hljs-property">space</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> halfSpace = space / <span class="hljs-number">2</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// let x = event.offsetX;</span></span><br><span class="language-javascript">            <span class="hljs-comment">// let y = event.offsetY;</span></span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(x + &#x27;   &#x27; + y)</span></span><br><span class="language-javascript">            <span class="hljs-comment">// 计算棋子落在哪个方格中</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> cellX = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((event.<span class="hljs-property">offsetX</span>) / space);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> cellY = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((event.<span class="hljs-property">offsetY</span>) / space);</span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(cellX, cellY)</span></span><br><span class="language-javascript">            <span class="hljs-comment">// 判断该位置是否有棋子</span></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>[cellX][cellY] !== <span class="hljs-number">0</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;该位置已有棋子&quot;</span>)</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-comment">//画带渐变色的棋子，同心圆形式</span></span><br><span class="language-javascript">            <span class="hljs-comment">//考虑起点为2，因半径为space一半，避免太大，截止1/3大小</span></span><br><span class="language-javascript">            <span class="hljs-keyword">let</span> grd = ctx.<span class="hljs-title function_">createRadialGradient</span>(</span><br><span class="language-javascript">                cellX * space + halfSpace,</span><br><span class="language-javascript">                cellY * space + halfSpace,</span><br><span class="language-javascript">                <span class="hljs-number">2</span>,</span><br><span class="language-javascript">                cellX * space + halfSpace,</span><br><span class="language-javascript">                cellY * space + halfSpace,</span><br><span class="language-javascript">                space / <span class="hljs-number">3</span></span><br><span class="language-javascript">            )</span><br><span class="language-javascript">            grd.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">0</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> === <span class="hljs-number">1</span> ? <span class="hljs-string">&#x27;#FFFFFF&#x27;</span> : <span class="hljs-string">&#x27;#4C4C4C&#x27;</span>)</span><br><span class="language-javascript">            grd.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">1</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> === <span class="hljs-number">1</span> ? <span class="hljs-string">&#x27;#DADADA&#x27;</span> : <span class="hljs-string">&#x27;#000000&#x27;</span>)</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">beginPath</span>()</span><br><span class="language-javascript">            ctx.<span class="hljs-property">fillStyle</span> = grd</span><br><span class="language-javascript">            <span class="hljs-comment">//画圆，半径设置为space/3，同上r1参数一致</span></span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">arc</span>(</span><br><span class="language-javascript">                cellX * space + halfSpace,</span><br><span class="language-javascript">                cellY * space + halfSpace,</span><br><span class="language-javascript">                space / <span class="hljs-number">3</span>,</span><br><span class="language-javascript">                <span class="hljs-number">0</span>,</span><br><span class="language-javascript">                <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,</span><br><span class="language-javascript">                <span class="hljs-literal">false</span></span><br><span class="language-javascript">            );</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">fill</span>();</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">closePath</span>();</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>[cellX][cellY] = <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>; <span class="hljs-comment">//将黑白棋信息存储</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> winner_current = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">checkWinner</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>, lineNumber) <span class="hljs-comment">//判断输赢</span></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (winner_current !== <span class="hljs-number">0</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-comment">//代表此次操作有胜负，更新结果</span></span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.$emit(<span class="hljs-string">&quot;update:winner&quot;</span>, winner_current)</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(winner_current)</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-comment">//通知父组件，修改了选手内容值</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.$emit(<span class="hljs-string">&quot;update:player&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> === <span class="hljs-number">1</span> ? <span class="hljs-number">2</span> : <span class="hljs-number">1</span>)<span class="hljs-comment">//交换</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 胜负检查</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> board X*X 二维数组</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> lineNumber 线条数</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@returns</span> <span class="hljs-variable">number</span></span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">checkWinner</span>(<span class="hljs-params">board, lineNumber</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// 检查横向是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; lineNumber; j++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (board[i][j] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;</span><br><span class="language-javascript">                        count++;</span><br><span class="language-javascript">                    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                        count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 检查纵向是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; lineNumber; j++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber; i++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (board[i][j] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;</span><br><span class="language-javascript">                        count++;</span><br><span class="language-javascript">                    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                        count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 检查右斜线是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber - <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; lineNumber - <span class="hljs-number">5</span>; j++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">5</span>; k++) &#123;</span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (board[i + k][j + k] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;</span><br><span class="language-javascript">                            count++;</span><br><span class="language-javascript">                        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                            count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 检查左斜线是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber - <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">4</span>; j &lt; lineNumber; j++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">5</span>; k++) &#123;</span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (board[i + k][j - k] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;</span><br><span class="language-javascript">                            count++;</span><br><span class="language-javascript">                        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                            count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 如果没有五子连线，则游戏继续</span></span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 重置游戏</span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">restartGame</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">//清空基础数据</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span> = []</span><br><span class="language-javascript">            <span class="hljs-comment">//清空画布</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>)</span><br><span class="language-javascript">            <span class="hljs-comment">//重新绘制</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawBoard</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">width</span>,</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">lineNumber</span>,</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">space</span>);</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">&#125;;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main-board&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;board&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;board-chess&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;600&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;600&quot;</span></span><br><span class="hljs-tag">                @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;handleClickAndDraw($event,this.boardDetail)&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.main-board</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">    <span class="hljs-attribute">align-items</span>: center;</span><br><span class="language-css">    <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.board-chess</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">border</span>: <span class="hljs-number">3px</span> solid black;</span><br><span class="language-css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p>【OperateBoard.vue】主要用于控制棋盘，如重新开始，重新绘制等，主要是通过对父组件的变量修改实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">props</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">boardDetail</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">type</span>: <span class="hljs-title class_">Object</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">default</span>: [],</span><br><span class="language-javascript">            <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">player</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">default</span>: <span class="hljs-number">1</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-attr">winner</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">type</span>: <span class="hljs-title class_">Number</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">default</span>: <span class="hljs-number">0</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">inputBoardDetail</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">width</span>: <span class="hljs-number">600</span>,<span class="hljs-comment">//棋盘大小</span></span><br><span class="language-javascript">                <span class="hljs-attr">lineNumber</span>: <span class="hljs-number">20</span>,<span class="hljs-comment">//棋盘线数</span></span><br><span class="language-javascript">                <span class="hljs-attr">space</span>: <span class="hljs-number">30</span>,<span class="hljs-comment">//间隙</span></span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-property">inputBoardDetail</span>.<span class="hljs-property">width</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">width</span></span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-property">inputBoardDetail</span>.<span class="hljs-property">lineNumber</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">lineNumber</span></span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-property">inputBoardDetail</span>.<span class="hljs-property">space</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">space</span></span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-title function_">changeBoardDetail</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> square = <span class="hljs-variable language_">this</span>.<span class="hljs-property">inputBoardDetail</span>.<span class="hljs-property">width</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> lineNumber = <span class="hljs-variable language_">this</span>.<span class="hljs-property">inputBoardDetail</span>.<span class="hljs-property">lineNumber</span></span><br><span class="language-javascript">            <span class="hljs-comment">//重新设置board大小</span></span><br><span class="language-javascript">            <span class="hljs-keyword">let</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>)</span><br><span class="language-javascript">            canvas.<span class="hljs-property">width</span> = square</span><br><span class="language-javascript">            canvas.<span class="hljs-property">height</span> = square</span><br><span class="language-javascript">            <span class="hljs-comment">//重新设置棋盘大小</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.$emit(<span class="hljs-string">&quot;update:boardDetail&quot;</span>, &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">width</span>: square,</span><br><span class="language-javascript">                <span class="hljs-attr">lineNumber</span>: lineNumber,</span><br><span class="language-javascript">                <span class="hljs-attr">space</span>: square / lineNumber</span><br><span class="language-javascript">            &#125;)</span><br><span class="language-javascript">            <span class="hljs-comment">//重新绘制游戏</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">handleRestart</span>()</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">handleRestart</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.$emit(<span class="hljs-string">&quot;update:restart&quot;</span>, <span class="hljs-literal">true</span>)<span class="hljs-comment">//交换</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">&#125;;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;operate-board&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>棋盘信息：<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>棋盘长宽：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;this.inputBoardDetail.width&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>棋盘线条数：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;this.inputBoardDetail.lineNumber&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>棋盘间距：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;this.inputBoardDetail.space&quot;</span> <span class="hljs-attr">disabled</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;changeBoardDetail()&quot;</span>&gt;</span>修改<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;handleRestart&quot;</span>&gt;</span>重新开始<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>当前落子：&#123;&#123; this.player === 1 ? &quot;白&quot; : &quot;黑&quot; &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>胜利方：&#123;&#123; this.winner === 1 ? &quot;白棋&quot; : this.winner === 2 ? &quot;黑棋&quot; : &quot;&quot; &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.operate-board</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">20px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.board-detail</span> &gt; <span class="hljs-selector-tag">div</span> <span class="hljs-selector-tag">input</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术杂糅</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
      <tag>五子棋</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE3+Canvas绘制五子棋（二）</title>
    <link href="/2024/11/29/%E6%B8%B8%E6%88%8F_%E4%BA%94%E5%AD%90%E6%A3%8B/VUE3-Canvas%E7%BB%98%E5%88%B6%E4%BA%94%E5%AD%90%E6%A3%8B%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2024/11/29/%E6%B8%B8%E6%88%8F_%E4%BA%94%E5%AD%90%E6%A3%8B/VUE3-Canvas%E7%BB%98%E5%88%B6%E4%BA%94%E5%AD%90%E6%A3%8B%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>在昨天的基础上，对五子棋进行了调整</p><p>1、增加了背景颜色</p><p>2、增加了修改棋盘大小功能</p><p>3、增加了重新开始功能</p><p>仍未进行代码优化，同时对vue的data内的数据修改、读取，未发现好的方式，既可以直接读取带来的方便，但感觉也会带来随意修改数据产生的意外，会影响健壮性。</p><p>完整代码Game.vue</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">board</span>: [],</span><br><span class="language-javascript">            <span class="hljs-attr">player</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//1--白棋；2--黑棋</span></span><br><span class="language-javascript">            <span class="hljs-attr">winner</span>: <span class="hljs-literal">null</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">restart</span>: <span class="hljs-literal">false</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">boardDetail</span>: &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">width</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//棋盘大小</span></span><br><span class="language-javascript">                <span class="hljs-attr">lineNumber</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//棋盘线数</span></span><br><span class="language-javascript">                <span class="hljs-attr">space</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//间隙</span></span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-comment">// 实例刚创建，但未挂载dom</span></span><br><span class="language-javascript">    <span class="hljs-title function_">created</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&quot;五子棋&quot;</span>;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-comment">// 实例创建完成，仅在首次加载时完成</span></span><br><span class="language-javascript">    <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span> = &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">width</span>: <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>).<span class="hljs-property">clientWidth</span>,</span><br><span class="language-javascript">            <span class="hljs-attr">lineNumber</span>: <span class="hljs-number">20</span>,<span class="hljs-comment">//棋盘线数</span></span><br><span class="language-javascript">            <span class="hljs-attr">space</span>: <span class="hljs-number">30</span>,<span class="hljs-comment">//间隙</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawBoard</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">width</span>,</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">lineNumber</span>,</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">space</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 画整体棋盘</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> width 所需棋盘整体大小，上下左右预留一半space空间</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> lineNumber 线条数，线条数*间距=width</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> space 间距</span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">drawBoard</span>(<span class="hljs-params">width, lineNumber, space</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> halfSpace = space / <span class="hljs-number">2</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-comment">// 设置线条颜色</span></span><br><span class="language-javascript">            ctx.<span class="hljs-property">strokeStyle</span> = <span class="hljs-string">&quot;black&quot;</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-comment">// 绘制横线</span></span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">beginPath</span>();</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">moveTo</span>(halfSpace, i * space + halfSpace);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">lineTo</span>(width - halfSpace, i * space + halfSpace);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">stroke</span>();</span><br><span class="language-javascript">                <span class="hljs-comment">// 绘制竖线</span></span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">beginPath</span>();</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">moveTo</span>(i * space + halfSpace, halfSpace);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">lineTo</span>(i * space + halfSpace, width - halfSpace);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">stroke</span>();</span><br><span class="language-javascript">                <span class="hljs-comment">//填充数组，重置为0</span></span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>.<span class="hljs-title function_">push</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(lineNumber).<span class="hljs-title function_">fill</span>(<span class="hljs-number">0</span>))</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 监听每步棋子，需要传入棋盘信息</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> <span class="hljs-variable">event</span></span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> detail 棋盘信息</span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">handleClickAndDraw</span>(<span class="hljs-params">event, detail</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">//存在输赢以后，不允许在落子</span></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">winner</span> != <span class="hljs-literal">null</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> lineNumber = detail.<span class="hljs-property">lineNumber</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> space = detail.<span class="hljs-property">space</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> halfSpace = space / <span class="hljs-number">2</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// let x = event.offsetX;</span></span><br><span class="language-javascript">            <span class="hljs-comment">// let y = event.offsetY;</span></span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(x + &#x27;   &#x27; + y)</span></span><br><span class="language-javascript">            <span class="hljs-comment">// 计算棋子落在哪个方格中</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> cellX = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((event.<span class="hljs-property">offsetX</span>) / space);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> cellY = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((event.<span class="hljs-property">offsetY</span>) / space);</span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(cellX, cellY)</span></span><br><span class="language-javascript">            <span class="hljs-comment">// 判断该位置是否有棋子</span></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>[cellX][cellY] !== <span class="hljs-number">0</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;该位置已有棋子&quot;</span>)</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-comment">//画带渐变色的棋子，同心圆形式</span></span><br><span class="language-javascript">            <span class="hljs-comment">//考虑起点为2，因半径为space一半，避免太大，截止1/3大小</span></span><br><span class="language-javascript">            <span class="hljs-keyword">let</span> grd = ctx.<span class="hljs-title function_">createRadialGradient</span>(</span><br><span class="language-javascript">                cellX * space + halfSpace,</span><br><span class="language-javascript">                cellY * space + halfSpace,</span><br><span class="language-javascript">                <span class="hljs-number">2</span>,</span><br><span class="language-javascript">                cellX * space + halfSpace,</span><br><span class="language-javascript">                cellY * space + halfSpace,</span><br><span class="language-javascript">                space / <span class="hljs-number">3</span></span><br><span class="language-javascript">            )</span><br><span class="language-javascript">            grd.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">0</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> === <span class="hljs-number">1</span> ? <span class="hljs-string">&#x27;#FFFFFF&#x27;</span> : <span class="hljs-string">&#x27;#4C4C4C&#x27;</span>)</span><br><span class="language-javascript">            grd.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">1</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> === <span class="hljs-number">1</span> ? <span class="hljs-string">&#x27;#DADADA&#x27;</span> : <span class="hljs-string">&#x27;#000000&#x27;</span>)</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">beginPath</span>()</span><br><span class="language-javascript">            ctx.<span class="hljs-property">fillStyle</span> = grd</span><br><span class="language-javascript">            <span class="hljs-comment">//画圆，半径设置为space/3，同上r1参数一致</span></span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">arc</span>(</span><br><span class="language-javascript">                cellX * space + halfSpace,</span><br><span class="language-javascript">                cellY * space + halfSpace,</span><br><span class="language-javascript">                space / <span class="hljs-number">3</span>,</span><br><span class="language-javascript">                <span class="hljs-number">0</span>,</span><br><span class="language-javascript">                <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,</span><br><span class="language-javascript">                <span class="hljs-literal">false</span></span><br><span class="language-javascript">            );</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">fill</span>();</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">closePath</span>();</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>[cellX][cellY] = <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>; <span class="hljs-comment">//将黑白棋信息存储</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">winner</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">checkWinner</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>, lineNumber) <span class="hljs-comment">//判断输赢</span></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">winner</span> != <span class="hljs-literal">null</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">winner</span>)</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> === <span class="hljs-number">1</span> ? <span class="hljs-number">2</span> : <span class="hljs-number">1</span><span class="hljs-comment">//交换</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 胜负检查</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> board X*X 二维数组</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@param</span> lineNumber 线条数</span></span><br><span class="hljs-comment"><span class="language-javascript">         * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">number|null</span>&#125;</span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">checkWinner</span>(<span class="hljs-params">board, lineNumber</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// 检查横向是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; lineNumber; j++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (board[i][j] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;</span><br><span class="language-javascript">                        count++;</span><br><span class="language-javascript">                    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                        count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 检查纵向是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; lineNumber; j++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber; i++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (board[i][j] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;</span><br><span class="language-javascript">                        count++;</span><br><span class="language-javascript">                    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                        count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 检查右斜线是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber - <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; lineNumber - <span class="hljs-number">5</span>; j++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">5</span>; k++) &#123;</span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (board[i + k][j + k] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;</span><br><span class="language-javascript">                            count++;</span><br><span class="language-javascript">                        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                            count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 检查左斜线是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; lineNumber - <span class="hljs-number">5</span>; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">4</span>; j &lt; lineNumber; j++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">5</span>; k++) &#123;</span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (board[i + k][j - k] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;</span><br><span class="language-javascript">                            count++;</span><br><span class="language-javascript">                        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                            count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 如果没有五子连线，则游戏继续</span></span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-comment">/**</span></span><br><span class="hljs-comment"><span class="language-javascript">         * 重置游戏</span></span><br><span class="hljs-comment"><span class="language-javascript">         */</span></span><br><span class="language-javascript">        <span class="hljs-title function_">restartGame</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">//清空基础数据</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span> = []</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> = <span class="hljs-number">1</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">winner</span> = <span class="hljs-literal">null</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">restart</span> = <span class="hljs-literal">false</span></span><br><span class="language-javascript">            <span class="hljs-comment">//清空画布</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>)</span><br><span class="language-javascript">            <span class="hljs-comment">//重新绘制</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawBoard</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">width</span>,</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">lineNumber</span>,</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span>.<span class="hljs-property">space</span>);</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">updateDetail</span>(<span class="hljs-params">square, lineNumber</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">//重新设置board大小</span></span><br><span class="language-javascript">            <span class="hljs-keyword">let</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>)</span><br><span class="language-javascript">            canvas.<span class="hljs-property">width</span> = square</span><br><span class="language-javascript">            canvas.<span class="hljs-property">height</span> = square</span><br><span class="language-javascript">            <span class="hljs-comment">//重新设置棋盘大小</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">boardDetail</span> = &#123;</span><br><span class="language-javascript">                <span class="hljs-attr">width</span>: square,</span><br><span class="language-javascript">                <span class="hljs-attr">lineNumber</span>: lineNumber,</span><br><span class="language-javascript">                <span class="hljs-attr">space</span>: square / lineNumber</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-comment">//重新绘制游戏</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">restartGame</span>()</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">&#125;;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;board&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;board&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;600&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;600&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;board-chess&quot;</span></span><br><span class="hljs-tag">                @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;handleClickAndDraw($event,this.boardDetail)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;board-detail&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>棋盘信息：<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>棋盘长宽：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;this.boardDetail.width&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>棋盘线条数：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;this.boardDetail.lineNumber&quot;</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>棋盘间距：<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;this.boardDetail.space&quot;</span> <span class="hljs-attr">disabled</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;updateDetail(this.boardDetail.width,this.boardDetail.lineNumber)&quot;</span>&gt;</span>修改<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;restartGame&quot;</span>&gt;</span>重新开始<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>当前落子：&#123;&#123; this.player === 1 ? &quot;白&quot; : &quot;黑&quot; &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>胜利方：&#123;&#123; this.winner === 1 ? &quot;白棋&quot; : this.winner === 2 ? &quot;黑棋&quot; : &quot;&quot; &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.board</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">    <span class="hljs-attribute">align-items</span>: center;</span><br><span class="language-css">    <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.board-chess</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">border</span>: <span class="hljs-number">3px</span> solid black;</span><br><span class="language-css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.board-detail</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">20px</span>;</span><br><span class="language-css"></span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.board-detail</span> &gt; <span class="hljs-selector-tag">div</span> <span class="hljs-selector-tag">input</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果图，测试中发现了一个bug，斜线的胜负检验逻辑有问题<br><img src="/images/%E4%BA%94%E5%AD%90%E6%A3%8B/%E6%95%88%E6%9E%9C%E5%9B%BE2.png" alt="效果图"></p>]]></content>
    
    
    <categories>
      
      <category>技术杂糅</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
      <tag>五子棋</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE3+Canvas绘制五子棋（一）</title>
    <link href="/2024/11/28/%E6%B8%B8%E6%88%8F_%E4%BA%94%E5%AD%90%E6%A3%8B/VUE3-Canvas%E7%BB%98%E5%88%B6%E4%BA%94%E5%AD%90%E6%A3%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2024/11/28/%E6%B8%B8%E6%88%8F_%E4%BA%94%E5%AD%90%E6%A3%8B/VUE3-Canvas%E7%BB%98%E5%88%B6%E4%BA%94%E5%AD%90%E6%A3%8B%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>趁着休息，花了1小时参考网上各类简单的写了个五子棋，主要实现功能，未进行任何优化</p><p>修改画布大小及棋子布局</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;board&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;board&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;600&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;600&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></td></tr></table></figure><p>CSS相应如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.board</span> &#123;<br>    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">630px</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">630px</span>;<br>    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-attribute">display</span>: flex;<br>    <span class="hljs-attribute">align-items</span>: center;<br>    <span class="hljs-attribute">justify-content</span>: center;<br>&#125;<br></code></pre></td></tr></table></figure><p>1、绘制棋盘，以30为一格，考虑棋子落在交叉点，故在绘制时右移和下移了15，并将数组进行重置（600的棋盘，30一个，共20个）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">drawBoard</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);<br>    <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);<br><br>    <span class="hljs-comment">// 设置线条颜色</span><br>    ctx.<span class="hljs-property">strokeStyle</span> = <span class="hljs-string">&quot;black&quot;</span>;<br>    <span class="hljs-comment">// 绘制横线</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">19</span>; i++) &#123;<br>        ctx.<span class="hljs-title function_">beginPath</span>();<br>        ctx.<span class="hljs-title function_">moveTo</span>(<span class="hljs-number">15</span>, i * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>);<br>        ctx.<span class="hljs-title function_">lineTo</span>(<span class="hljs-number">570</span> + <span class="hljs-number">15</span>, i * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>);<br>        ctx.<span class="hljs-title function_">stroke</span>();<br>    &#125;<br><br>    <span class="hljs-comment">// 绘制竖线</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">19</span>; i++) &#123;<br>        ctx.<span class="hljs-title function_">beginPath</span>();<br>        ctx.<span class="hljs-title function_">moveTo</span>(i * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>, <span class="hljs-number">0</span> + <span class="hljs-number">15</span>);<br>        ctx.<span class="hljs-title function_">lineTo</span>(i * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>, <span class="hljs-number">570</span> + <span class="hljs-number">15</span>);<br>        ctx.<span class="hljs-title function_">stroke</span>();<br>    &#125;<br>    <span class="hljs-comment">// 重置为0</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">19</span>; i++) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>.<span class="hljs-title function_">push</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">20</span>).<span class="hljs-title function_">fill</span>(<span class="hljs-number">0</span>))<br>    &#125;<br>    <span class="hljs-comment">// console.log(this.board)</span><br>&#125;,<br></code></pre></td></tr></table></figure><p>2、绘制棋子，考虑正负15的距离，此处在绘制完成后，进行了正负判断，选手交换</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">drawCell</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> container = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);<br>    container.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">handleClickAndDraw</span>)<br>        &#125;,<br><span class="hljs-title function_">handleClickAndDraw</span>(<span class="hljs-params">event</span>) &#123;<br>    <span class="hljs-keyword">let</span> x = event.<span class="hljs-property">offsetX</span>;<br>    <span class="hljs-keyword">let</span> y = event.<span class="hljs-property">offsetY</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(x + <span class="hljs-string">&#x27;   &#x27;</span> + y)<br>    <span class="hljs-comment">// 计算棋子落在哪个方格中</span><br>    <span class="hljs-keyword">const</span> cellX = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((event.<span class="hljs-property">offsetX</span>) / <span class="hljs-number">30</span>);<br>    <span class="hljs-keyword">const</span> cellY = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((event.<span class="hljs-property">offsetY</span>) / <span class="hljs-number">30</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(cellX, cellY)<br>    <span class="hljs-comment">// 判断该位置是否有棋子</span><br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>[cellX][cellY] !== <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;该位置已有棋子&quot;</span>)<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);<br>    <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);<br>    <span class="hljs-comment">//画带渐变色的棋子，同心圆形式</span><br>    <span class="hljs-keyword">let</span> grd = ctx.<span class="hljs-title function_">createRadialGradient</span>(<br>        cellX * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>,<br>        cellY * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>,<br>        <span class="hljs-number">2</span>,<br>        cellX * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>,<br>        cellY * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>,<br>        <span class="hljs-number">10</span><br>    )<br>    grd.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">0</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> === <span class="hljs-number">1</span> ? <span class="hljs-string">&#x27;#FFFFFF&#x27;</span> : <span class="hljs-string">&#x27;#4C4C4C&#x27;</span>)<br>    grd.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">1</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> === <span class="hljs-number">1</span> ? <span class="hljs-string">&#x27;#DADADA&#x27;</span> : <span class="hljs-string">&#x27;#000000&#x27;</span>)<br>    ctx.<span class="hljs-title function_">beginPath</span>()<br>    ctx.<span class="hljs-property">fillStyle</span> = grd<br>    ctx.<span class="hljs-title function_">arc</span>(<br>        cellX * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>,<br>        cellY * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>,<br>        <span class="hljs-number">10</span>,<br>        <span class="hljs-number">0</span>,<br>        <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,<br>        <span class="hljs-literal">false</span><br>    );<br>    ctx.<span class="hljs-title function_">fill</span>();<br>    ctx.<span class="hljs-title function_">closePath</span>();<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>[cellX][cellY] = <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>; <span class="hljs-comment">//将黑白棋信息存储</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">winner</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">checkWinner</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>)<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">winner</span> != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-title function_">alert</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">winner</span>)<br>    &#125;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> === <span class="hljs-number">1</span> ? <span class="hljs-number">2</span> : <span class="hljs-number">1</span><br>&#125;,<br></code></pre></td></tr></table></figure><p>3、正负判断，这个主要采取网上CSDN，并未进行过多加工</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">checkWinner</span>(<span class="hljs-params">board</span>) &#123;<br>    <span class="hljs-comment">// 检查横向是否有五子连线</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">19</span>; i++) &#123;<br>        <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">19</span>; j++) &#123;<br>            <span class="hljs-keyword">if</span> (board[i][j] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;<br>                count++;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                count = <span class="hljs-number">0</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 检查纵向是否有五子连线</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">19</span>; j++) &#123;<br>        <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">19</span>; i++) &#123;<br>            <span class="hljs-keyword">if</span> (board[i][j] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;<br>                count++;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                count = <span class="hljs-number">0</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 检查右斜线是否有五子连线</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">14</span>; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">14</span>; j++) &#123;<br>            <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">5</span>; k++) &#123;<br>                <span class="hljs-keyword">if</span> (board[i + k][j + k] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;<br>                    count++;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    count = <span class="hljs-number">0</span>;<br>                &#125;<br><br>                <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 检查左斜线是否有五子连线</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">14</span>; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">4</span>; j &lt; <span class="hljs-number">19</span>; j++) &#123;<br>            <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">5</span>; k++) &#123;<br>                <span class="hljs-keyword">if</span> (board[i + k][j - k] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;<br>                    count++;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    count = <span class="hljs-number">0</span>;<br>                &#125;<br><br>               <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) &#123;<br>                   <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 如果没有五子连线，则游戏继续</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>最后，完整代码如下App.vue</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">board</span>: [],</span><br><span class="language-javascript">            <span class="hljs-attr">player</span>: <span class="hljs-number">1</span>,<span class="hljs-comment">//1--白棋；2--黑棋</span></span><br><span class="language-javascript">            <span class="hljs-attr">winner</span>: <span class="hljs-literal">null</span></span><br><span class="language-javascript">        &#125;;</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawBoard</span>();</span><br><span class="language-javascript">        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawCell</span>();</span><br><span class="language-javascript">    &#125;,</span><br><span class="language-javascript">    <span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript">        <span class="hljs-title function_">drawBoard</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 设置线条颜色</span></span><br><span class="language-javascript">            ctx.<span class="hljs-property">strokeStyle</span> = <span class="hljs-string">&quot;black&quot;</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 绘制横线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">19</span>; i++) &#123;</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">beginPath</span>();</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">moveTo</span>(<span class="hljs-number">15</span>, i * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">lineTo</span>(<span class="hljs-number">570</span> + <span class="hljs-number">15</span>, i * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">stroke</span>();</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 绘制竖线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">19</span>; i++) &#123;</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">beginPath</span>();</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">moveTo</span>(i * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>, <span class="hljs-number">0</span> + <span class="hljs-number">15</span>);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">lineTo</span>(i * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>, <span class="hljs-number">570</span> + <span class="hljs-number">15</span>);</span><br><span class="language-javascript">                ctx.<span class="hljs-title function_">stroke</span>();</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-comment">// 重置为0</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">19</span>; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>.<span class="hljs-title function_">push</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-number">20</span>).<span class="hljs-title function_">fill</span>(<span class="hljs-number">0</span>))</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-comment">// console.log(this.board)</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">drawCell</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">let</span> container = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);</span><br><span class="language-javascript">            container.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">handleClickAndDraw</span>)</span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">handleClickAndDraw</span>(<span class="hljs-params">event</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">let</span> x = event.<span class="hljs-property">offsetX</span>;</span><br><span class="language-javascript">            <span class="hljs-keyword">let</span> y = event.<span class="hljs-property">offsetY</span>;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(x + <span class="hljs-string">&#x27;   &#x27;</span> + y)</span><br><span class="language-javascript">            <span class="hljs-comment">// 计算棋子落在哪个方格中</span></span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> cellX = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((event.<span class="hljs-property">offsetX</span>) / <span class="hljs-number">30</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> cellY = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((event.<span class="hljs-property">offsetY</span>) / <span class="hljs-number">30</span>);</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(cellX, cellY)</span><br><span class="language-javascript">            <span class="hljs-comment">// 判断该位置是否有棋子</span></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>[cellX][cellY] !== <span class="hljs-number">0</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;该位置已有棋子&quot;</span>)</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;board&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-comment">//画带渐变色的棋子，同心圆形式</span></span><br><span class="language-javascript">            <span class="hljs-keyword">let</span> grd = ctx.<span class="hljs-title function_">createRadialGradient</span>(</span><br><span class="language-javascript">                cellX * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>,</span><br><span class="language-javascript">                cellY * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>,</span><br><span class="language-javascript">                <span class="hljs-number">2</span>,</span><br><span class="language-javascript">                cellX * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>,</span><br><span class="language-javascript">                cellY * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>,</span><br><span class="language-javascript">                <span class="hljs-number">10</span></span><br><span class="language-javascript">            )</span><br><span class="language-javascript">            grd.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">0</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> === <span class="hljs-number">1</span> ? <span class="hljs-string">&#x27;#FFFFFF&#x27;</span> : <span class="hljs-string">&#x27;#4C4C4C&#x27;</span>)</span><br><span class="language-javascript">            grd.<span class="hljs-title function_">addColorStop</span>(<span class="hljs-number">1</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> === <span class="hljs-number">1</span> ? <span class="hljs-string">&#x27;#DADADA&#x27;</span> : <span class="hljs-string">&#x27;#000000&#x27;</span>)</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">beginPath</span>()</span><br><span class="language-javascript">            ctx.<span class="hljs-property">fillStyle</span> = grd</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">arc</span>(</span><br><span class="language-javascript">                cellX * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>,</span><br><span class="language-javascript">                cellY * <span class="hljs-number">30</span> + <span class="hljs-number">15</span>,</span><br><span class="language-javascript">                <span class="hljs-number">10</span>,</span><br><span class="language-javascript">                <span class="hljs-number">0</span>,</span><br><span class="language-javascript">                <span class="hljs-number">2</span> * <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>,</span><br><span class="language-javascript">                <span class="hljs-literal">false</span></span><br><span class="language-javascript">            );</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">fill</span>();</span><br><span class="language-javascript">            ctx.<span class="hljs-title function_">closePath</span>();</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>[cellX][cellY] = <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>; <span class="hljs-comment">//将黑白棋信息存储</span></span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">winner</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">checkWinner</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">board</span>)</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">winner</span> != <span class="hljs-literal">null</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">winner</span>)</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span> === <span class="hljs-number">1</span> ? <span class="hljs-number">2</span> : <span class="hljs-number">1</span></span><br><span class="language-javascript">        &#125;,</span><br><span class="language-javascript">        <span class="hljs-title function_">checkWinner</span>(<span class="hljs-params">board</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-comment">// 检查横向是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">19</span>; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">19</span>; j++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (board[i][j] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;</span><br><span class="language-javascript">                        count++;</span><br><span class="language-javascript">                    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                        count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) &#123;</span><br><span class="language-javascript">                        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 检查纵向是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">19</span>; j++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">19</span>; i++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (board[i][j] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;</span><br><span class="language-javascript">                        count++;</span><br><span class="language-javascript">                    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                        count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) &#123;</span><br><span class="language-javascript">                        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 检查右斜线是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">14</span>; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">14</span>; j++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">5</span>; k++) &#123;</span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (board[i + k][j + k] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;</span><br><span class="language-javascript">                            count++;</span><br><span class="language-javascript">                        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                            count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) &#123;</span><br><span class="language-javascript">                            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;</span><br><span class="language-javascript">                        &#125;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 检查左斜线是否有五子连线</span></span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">14</span>; i++) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> j = <span class="hljs-number">4</span>; j &lt; <span class="hljs-number">19</span>; j++) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">5</span>; k++) &#123;</span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (board[i + k][j - k] === <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>) &#123;</span><br><span class="language-javascript">                            count++;</span><br><span class="language-javascript">                        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                            count = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">                        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (count &gt;= <span class="hljs-number">5</span>) &#123;</span><br><span class="language-javascript">                            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">player</span>;</span><br><span class="language-javascript">                        &#125;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-comment">// 如果没有五子连线，则游戏继续</span></span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">&#125;;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;board&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;board&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;600&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;600&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.board</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid red;</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">630px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">630px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span>;</span><br><span class="language-css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">    <span class="hljs-attribute">align-items</span>: center;</span><br><span class="language-css">    <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果图<br><img src="/../../images/%E4%BA%94%E5%AD%90%E6%A3%8B/%E6%95%88%E6%9E%9C%E5%9B%BE1.png" alt="效果图"></p>]]></content>
    
    
    <categories>
      
      <category>技术杂糅</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
      <tag>五子棋</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Flask的WebHooks服务搭建</title>
    <link href="/2024/07/04/python/%E5%9F%BA%E4%BA%8EFlask%E7%9A%84WebHooks%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/07/04/python/%E5%9F%BA%E4%BA%8EFlask%E7%9A%84WebHooks%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>1、首先确保已正确安装nginx，supervisor，并正常启用nginx和supervisor</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">yum install nginx supervisor<br>systemctl start nginx<br>systemctl enable nginx<br>systemctl start supervisor<br>systemctl enable supervisor<br></code></pre></td></tr></table></figure><p>2、新建Flask项目和相关虚拟环境包等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">virtualenv venv <span class="hljs-comment">#新建虚拟环境</span><br>. venv/<span class="hljs-built_in">bin</span>/activate<br>pip install gunicorn<br></code></pre></td></tr></table></figure><p>3、修改app.py文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request, jsonify<br><br>app = Flask(__name__)<br><br><span class="hljs-comment"># gitee中webhooks的secret</span><br>gitee_secret = <span class="hljs-string">&#x27;XXXX&#x27;</span><br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/hooks&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">post_data</span>():<br>    <span class="hljs-comment"># 认证签名是否有效</span><br>    signature = request.headers.get(<span class="hljs-string">&#x27;X-Gitee-Token&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;获取到访问token:%s&quot;</span>, signature)<br><br>    <span class="hljs-keyword">if</span> signature != gitee_secret:<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;token认证无效&quot;</span>, <span class="hljs-number">401</span><br>    <span class="hljs-comment"># 运行shell脚本，更新代码</span><br>    os.system(<span class="hljs-string">&#x27;sh deploy.sh&#x27;</span>)<br>    <span class="hljs-keyword">return</span> jsonify(&#123;<span class="hljs-string">&quot;status&quot;</span>: <span class="hljs-number">200</span>&#125;)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run()<br></code></pre></td></tr></table></figure><p>3、新建deploy.sh文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &#x27;========Start DEPLY========&#x27;<br>echo &#x27;--------enter Dir ------------&#x27;<br>cd /home/opc/XXXX<br>echo &#x27;--------start git pull------------&#x27;<br>git pull<br>echo &#x27;--------init requirements------------&#x27;<br>. venv/bin/activate<br>pip install -r requirements.txt<br>deactivate<br>echo &#x27;-----ex root-----&#x27;<br>sudo -i<br>echo &#x27;-----restart supervision-----&#x27;<br>supervisorctl restart XXXX<br>echo &#x27;----- reload nginx-----&#x27;<br>nginx -s reload<br>echo &#x27;========END DEPLY========&#x27;<br></code></pre></td></tr></table></figure><p>4、新建supervisor.ini文件（也可省略，手工启动即可）</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment">;[include]</span><br><span class="hljs-comment">;files = relative/directory/*.ini</span><br><span class="hljs-section">[program:XXXX]</span><span class="hljs-attr">directory</span>=/home/opc/XXXX<br><span class="hljs-attr">command</span>=/home/opc/XXXX/venv/bin/python3 /home/opc/XXXX/venv/bin/gunicorn -b <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">1111</span> app:app<br><span class="hljs-attr">startsecs</span>=<span class="hljs-number">0</span><br><span class="hljs-attr">stopwaitsecs</span>=<span class="hljs-number">0</span><br><span class="hljs-attr">autostart</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">autorestart</span>=<span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>5、将supervisor.ini文件拷贝到&#x2F;etc&#x2F;supervisor.d&#x2F;目录下，并重启supervisord</p>]]></content>
    
    
    <categories>
      
      <category>技术杂糅</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python离线环境部署搭建</title>
    <link href="/2024/07/04/python/python%E7%A6%BB%E7%BA%BF%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/07/04/python/python%E7%A6%BB%E7%BA%BF%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>1、需要保证两边环境一致，仅以Win为例进行了测试，按理应该一样。</p><p>2、安装完毕后没有虚拟环境，可先将全局包进行安装。</p><p>3、虚拟环境和系统正式环境操作一致，区别仅在于是否激活虚拟环境，即当前pip是针对的什么环境，可通过pip list进行查看</p><h2 id="具体步骤："><a href="#具体步骤：" class="headerlink" title="具体步骤："></a>具体步骤：</h2><p>1.生成安装包列表文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 安装包列表保存到文件requirements.txt中，文件名是自己定义，</span><br><span class="hljs-comment"># 如果文件已经存在会被覆盖更新，不存在会自动创建</span><br><span class="hljs-comment"># 虚拟环境目录下执行这个命令，则打包的虚拟环境的内容</span><br><span class="hljs-comment"># 否则生成的文件内容是系统python版本使用的安装包列表</span><br>pip freeze &gt; requirements.txt<br></code></pre></td></tr></table></figure><p>2.将包列表文件中的所有包下载到文件夹下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># [.\\packages]为保存安装包的路径，不存在会被创建</span><br><span class="hljs-comment"># [requirements.txt]为前一步生成的包列表文件</span><br>pip download -d  .\\packages  -r requirements.txt<br></code></pre></td></tr></table></figure><p>3.将①和②中生成的包列表文件和安装包文件夹复制到另一台上<br>4.依据包列表文件以及安装包文件夹来安装包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># [.\\packages]为安装包文件夹路径</span><br><span class="hljs-comment"># [requirements.txt]为包文件列表</span><br><span class="hljs-comment"># 注意相对路径和绝对路径的选择</span><br>pip install --no-index --find-links=.\\packages -r requirements.txt<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术杂糅</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于falsk-sqlalchemy中多数据库配置及使用</title>
    <link href="/2024/07/04/python/%E5%85%B3%E4%BA%8Efalsk-sqlalchemy%E4%B8%AD%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AE%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/07/04/python/%E5%85%B3%E4%BA%8Efalsk-sqlalchemy%E4%B8%AD%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AE%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p> 近期发现了几个免费的数据库，想着尝试用Flask进行简单连接 以前一直使用SQLite，近期打算尝试连接MySQL和Postgre 一些简单的安装等命令就此略过</p><h2 id="多数据源配置"><a href="#多数据源配置" class="headerlink" title="多数据源配置"></a>多数据源配置</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 配置SQLite数据源</span><br>sqlite_path = os.path.join(BASE_DIR, <span class="hljs-string">&quot;sys.db&quot;</span>)<br>app.config[<span class="hljs-string">&#x27;SQLALCHEMY_DATABASE_URI&#x27;</span>] = <span class="hljs-string">&#x27;sqlite:///&#x27;</span> + sqlite_path<br><span class="hljs-comment"># 配置MySQL（TiDB）数据源</span><br>MYSQL_USERNAME = <span class="hljs-string">&#x27;USERNAME&#x27;</span><br>MYSQL_PASSWORD = <span class="hljs-string">&#x27;PASSWORD&#x27;</span><br>MYSQL_URL = <span class="hljs-string">&#x27;SQL_URL&#x27;</span><br>MYSQL_PORT = <span class="hljs-string">&#x27;PORT&#x27;</span><br>MYSQL_DATABASE = <span class="hljs-string">&#x27;main&#x27;</span><br>MYSQL_SSL = &#123;<br>    <span class="hljs-string">&#x27;ssl_verify_cert&#x27;</span>: <span class="hljs-string">&#x27;True&#x27;</span>,<br>    <span class="hljs-string">&#x27;ssl_verify_identity&#x27;</span>: <span class="hljs-string">&#x27;True&#x27;</span>,<br>    <span class="hljs-string">&#x27;ssl_cert&#x27;</span>: BASE_DIR + <span class="hljs-string">&#x27;/ca/cert.crt&#x27;</span>,<br>    <span class="hljs-string">&#x27;ssl_key&#x27;</span>: BASE_DIR + <span class="hljs-string">&#x27;/ca/private.key&#x27;</span><br>&#125;<br>MYSQL_URL_ALL = <span class="hljs-string">&#x27;mysql+pymysql://%s:%s@%s:%s/%s?%s&#x27;</span> % (<br>    MYSQL_USERNAME, MYSQL_PASSWORD, MYSQL_URL, MYSQL_PORT, MYSQL_DATABASE, urlencode(MYSQL_SSL))<br><span class="hljs-comment"># 配置Postgre数据源</span><br>PG_USERNAME = <span class="hljs-string">&#x27;USERNAME&#x27;</span><br>PG_PASSWORD = <span class="hljs-string">&#x27;PASSWORD&#x27;</span><br>PG_URL = <span class="hljs-string">&#x27;SQL_URL&#x27;</span><br>PG_PORT = <span class="hljs-string">&#x27;PORT&#x27;</span><br>PG_DATABASE = <span class="hljs-string">&#x27;main&#x27;</span><br>PG_URL_ALL = <span class="hljs-string">&#x27;postgresql://%s:%s@%s:%s/%s&#x27;</span> % (PG_USERNAME, PG_PASSWORD, PG_URL, PG_PORT, PG_DATABASE)<br>app.config[<span class="hljs-string">&#x27;SQLALCHEMY_BINDS&#x27;</span>] = &#123;<br>    <span class="hljs-string">&#x27;tidb&#x27;</span>: MYSQL_URL_ALL,<br>    <span class="hljs-string">&#x27;pg&#x27;</span>: PG_URL_ALL,<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p>1、因为TiDB需要SSL认证，所以加入了SSL&#x3D;True的条件，可根据需要自行设置，关于证书生成如下，共计生成3个文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">openssl genpkey -algorithm RSA -out private.pem -pkeyopt rsa_keygen_bits:2048<br>openssl req -new -key private.pem -out cert.csr<br>openssl x509 -req -days 365 -in cert.csr -signkey private.pem -out cert.crt<br></code></pre></td></tr></table></figure><h2 id="Model中的配置区别"><a href="#Model中的配置区别" class="headerlink" title="Model中的配置区别"></a>Model中的配置区别</h2><p>1、SQLite中的使用，和日常没区别</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span>(db.Model):<br><span class="hljs-built_in">id</span> = db.Column(db.Integer, primary_key=<span class="hljs-literal">True</span>)<br>username = db.Column(db.String(<span class="hljs-number">80</span>), unique=<span class="hljs-literal">True</span>)<br>email = db.Column(db.String(<span class="hljs-number">120</span>), unique=<span class="hljs-literal">True</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, username, email</span>):<br>    <span class="hljs-variable language_">self</span>.username = username<br>    <span class="hljs-variable language_">self</span>.email = email<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;User %r&gt;&#x27;</span> % <span class="hljs-variable language_">self</span>.username<br></code></pre></td></tr></table></figure><p>2、MySQL中的使用，需要添加BINDS相关信息，用于区分数据源，tidb为前期配置文件内的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Good</span>(db.Model):<br>__bind_key__ = <span class="hljs-string">&#x27;tidb&#x27;</span><br><span class="hljs-built_in">id</span> = db.Column(db.Integer, primary_key=<span class="hljs-literal">True</span>)<br>good = db.Column(db.String(<span class="hljs-number">80</span>), unique=<span class="hljs-literal">True</span>)<br>email = db.Column(db.String(<span class="hljs-number">120</span>), unique=<span class="hljs-literal">True</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, good, email</span>):<br>    <span class="hljs-variable language_">self</span>.good = good<br>    <span class="hljs-variable language_">self</span>.email = email<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;Good %r&gt;&#x27;</span> % <span class="hljs-variable language_">self</span>.good<br></code></pre></td></tr></table></figure><p>3、Postgre中的使用，同样需要添加BINDS信息<br>区分MYSQL，PG库中有一个schema概念，若未设置对应模式，则默认为public下的表，如下展示为设置test模式下的表，也增加了tablename的示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Name</span>(db.Model):<br>__bind_key__ = <span class="hljs-string">&#x27;pg&#x27;</span><br>__table_args__ = (&#123;<span class="hljs-string">&quot;schema&quot;</span>: <span class="hljs-string">&quot;test&quot;</span>&#125;)<br>__tablename__ = <span class="hljs-string">&#x27;name&#x27;</span><br><span class="hljs-built_in">id</span> = db.Column(db.Integer, primary_key=<span class="hljs-literal">True</span>)<br>name = db.Column(db.String(<span class="hljs-number">80</span>), unique=<span class="hljs-literal">True</span>)<br>email = db.Column(db.String(<span class="hljs-number">120</span>), unique=<span class="hljs-literal">True</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, name, email</span>):<br>    <span class="hljs-variable language_">self</span>.name = name<br>    <span class="hljs-variable language_">self</span>.email = email<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;Name %r&gt;&#x27;</span> % <span class="hljs-variable language_">self</span>.name<br></code></pre></td></tr></table></figure><h2 id="最终程序测试"><a href="#最终程序测试" class="headerlink" title="最终程序测试"></a>最终程序测试</h2><p>经过此配置，则可通过此种方式进行测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># SQLite</span><br>ur = User(<span class="hljs-string">&#x27;admin&#x27;</span>, <span class="hljs-string">&#x27;admin@example.com&#x27;</span>)<br>db.session.add(ur)<br><span class="hljs-comment">#TiDB</span><br>gd = Good(<span class="hljs-string">&#x27;good&#x27;</span>, <span class="hljs-string">&#x27;good@example.com&#x27;</span>)<br>db.session.add(gd)<br><span class="hljs-comment"># PG</span><br>ne = Name(<span class="hljs-string">&#x27;name&#x27;</span>, <span class="hljs-string">&#x27;name@example.com&#x27;</span>)<br>db.session.add(ne)<br>db.session.commit()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术杂糅</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>有网络锁重置解网络锁</title>
    <link href="/2023/07/04/%E6%8A%80%E6%9C%AF%E6%9D%82%E7%B3%85/%E6%9C%89%E7%BD%91%E7%BB%9C%E9%94%81%E9%87%8D%E7%BD%AE%E8%A7%A3%E7%BD%91%E7%BB%9C%E9%94%81/"/>
    <url>/2023/07/04/%E6%8A%80%E6%9C%AF%E6%9D%82%E7%B3%85/%E6%9C%89%E7%BD%91%E7%BB%9C%E9%94%81%E9%87%8D%E7%BD%AE%E8%A7%A3%E7%BD%91%E7%BB%9C%E9%94%81/</url>
    
    <content type="html"><![CDATA[<p>出于无法使用XXQG，于是就对闲鱼430购买的Pixel 4XL进行还原重置，买的有网络锁的机器，需要重新解锁，用来记录。<br>1、重置，离线进入手机，开启USB调试模式<br>2、执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">adb shell pm uninstall -k --user 0 com.google.android.apps.work.oobconfig<br></code></pre></td></tr></table></figure><p>3、执行配置命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">adb shell &quot;settings put global captive_portal_https_url https://captive.v2ex.co/generate_204&quot;<br></code></pre></td></tr></table></figure><p>4、重启手机、插卡正常使用</p>]]></content>
    
    
    <categories>
      
      <category>技术杂糅</category>
      
    </categories>
    
    
    <tags>
      
      <tag>手机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记一次洗牙过程</title>
    <link href="/2022/07/04/%E7%94%9F%E6%B4%BB%E7%90%90%E4%BA%8B/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%B4%97%E7%89%99%E8%BF%87%E7%A8%8B/"/>
    <url>/2022/07/04/%E7%94%9F%E6%B4%BB%E7%90%90%E4%BA%8B/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%B4%97%E7%89%99%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>源于上周去检查车祸后的肺部慢性肺炎，突然奇想去进行一次洗牙，其实当初洗牙的目的是为了美白，但预约完毕后，发现主要用于处理牙垢。</p><p>上周已抽血化验，这周二直接杀过去就可以，还是上次的医生。</p><p>洗牙过程整体还行，在未开始前存在害怕，洗牙过程对原本敏感的牙齿有影响，明显能够感觉到痛，而其它的，基本可以出于无感，洗牙过程会出血，洗好以后牙齿有异样的感觉。</p><p>就医，特别是当躺在手术床上，任由别人进行处置时，内心是害怕的，此时人和动物是没差别的，完全可以当成是兽，医生也可以是兽医，只是对待方式不一致。</p>]]></content>
    
    
    <categories>
      
      <category>生活琐事</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>记录一次车祸（回忆分析）</title>
    <link href="/2022/03/31/%E7%94%9F%E6%B4%BB%E7%90%90%E4%BA%8B/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E8%BD%A6%E7%A5%B8%EF%BC%88%E5%9B%9E%E5%BF%86%E5%88%86%E6%9E%90%EF%BC%89/"/>
    <url>/2022/03/31/%E7%94%9F%E6%B4%BB%E7%90%90%E4%BA%8B/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E8%BD%A6%E7%A5%B8%EF%BC%88%E5%9B%9E%E5%BF%86%E5%88%86%E6%9E%90%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>开车从毕业到现在已近6年，基本没有事故甚至把别人刮擦，记得上一次事故是家里大人怀孕做坐月子期间，在五彩城拐弯去华润超市时。</p><p>回忆起来上次应该是看了右后视镜，要弯道拐弯进去，而看的过程中前车奔驰突然刹车了，导致还没进入转弯道，就撞到了，踩了紧急刹车，撞的不严重，一切按照保险来。当时认定自己追尾全责，事后回想，是否前车本来也要右转，存在压线的可能，翻看照片无法看出，因此此事也就到此结束。</p><p>22年此次车祸就比较严重，前车凹进去，正副驾驶座安全气囊弹出来，因汽车使用时间较长了，已达保费临近值，最终和修理店协商，卖给修理店，后续由修理店再进行处理。</p><h2 id="事故过程描述："><a href="#事故过程描述：" class="headerlink" title="事故过程描述："></a>事故过程描述：</h2><p>刚下高速，需要盘圈上高架（1行车道1应急道），正在行驶中，突然觉得可能会撞到对面，打了方向盘，并踩了刹车，感觉圈打的以往的大，但是感觉上不到四分之一圈且不急，那一瞬间觉得可能会出问题，突然之间车子开始不受控制，脑海中一片空白，想着要撞了的。车子先撞了右前方，后转圈到右后方，最终撞了左前方停下来。</p><h2 id="事故过程分析："><a href="#事故过程分析：" class="headerlink" title="事故过程分析："></a>事故过程分析：</h2><p>1、【突然】，是因为事后回想起来，是因为突然发现脑海中出现了感觉要撞到前面，速度有点快的画面，而看到之前的1秒是是在开车、玩手机或者想事情，均没有任何记忆。</p><p>2、【打了方向盘】，回想起来感觉不是很突然的打很大的圈，也是日常的打圈，并踩了刹车用于降速（事后回想）</p><p>3、【踩了刹车】，自己想来是应该之前踩了油门在加速，后发现过快踩了刹车。但是车子撞的相对比较厉害，感觉又加速往前冲的迹象，自己怀疑是不是车子不受控制到撞之前在踩油门而非刹车，没有记录仪无法获知。目前无法回想起来那个瞬间脚放在油门还是刹车，后续在多次开车路过的时候特意留意，在该路段盘旋上去的过程中是需要踩油门的。</p><p>4、【觉得可能会出问题】，这个是玄学或者是因为出了事故刚好印证了那会的灵光一闪</p><p>5、【一片空白】，那个过程一片空白，其实那个时候在想很多事情，但是却无法回想起来，在一个瞬间有点闷的状态</p><h2 id="事故处理分析："><a href="#事故处理分析：" class="headerlink" title="事故处理分析："></a>事故处理分析：</h2><p>在车子撞了以后，闻到有股烧焦味（事后交警告知是因为安全气囊弹出有火药），第一时间想着下车，正副驾驶座因为车头变形无法打开，打电话给110进行报警，后想到可以通过后座下车，遂顺利下车等交警。下车后有点懵的状态。</p><p>1、下车后有辆维修的车迅速赶到，比交警还早，最终也在该维修厂卖给了卖家。过程较为曲折，错误在于当初不该选择该类维修厂，后续车拖进去以后就难以在开出来去其它地方维修，维修厂不让放车走（后续有时间在写一个此类的历程）。</p><p>2、再交给路边黄牛维修车前，内心是矛盾的，既知道他们是路边黄牛可能会出问题，又想着要么就交给他们维修的就好了的，最终选择了他们。</p><p>3、事故后未第一时间选择进行4S店维修，全程未想到，只有晚上到家停顿下来回想后，才想起来可以去4S店维修，单方事故，未涉及其它车辆。</p><p>4、事故发生后，交警询问人是否有受伤，轻率的回答了没事，交警单未写任何人受伤，但事故后2小时开始出现胸腔肋骨痛，维修厂小哥告知是气囊弹出缘故，且交警当初特地问了人有没有受伤就是基于此的，后由维修厂小哥带着去交警队重新开具事故单附上胸腔受伤，下午去医院自费进行看病，幸好未任何问题。</p><h2 id="后续影响："><a href="#后续影响：" class="headerlink" title="后续影响："></a>后续影响：</h2><p>目前回想，车子不应该报废，最好的办法是给4S店进行维修，则此时还可以开，因为报废，导致家里需要购置2辆车（本旧车给老人，新买电动车），恰逢电动车涨价，亏了好几万。</p>]]></content>
    
    
    <categories>
      
      <category>生活琐事</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
